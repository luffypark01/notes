<!doctype html>
<html lang="zh" data-hairline="true" class="itcauecng" data-theme="light"><head><meta charSet="utf-8"/><title data-rh="true">Java 日志从入门到实战 - 知乎</title><meta name="viewport" content="width=device-width,initial-scale=1,maximum-scale=1"/><meta name="renderer" content="webkit"/><meta name="force-rendering" content="webkit"/><meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1"/><meta name="google-site-verification" content="FTeR0c8arOPKh8c5DYh_9uu98_zJbaWw53J-Sch9MTg"/><meta data-rh="true" name="keywords" content="Java,程序员,互联网"/><meta data-rh="true" name="description" content="日志和异常处理结合得当的话，会给项目维护带来非常大的价值。 日志：就是介绍一个过程和经历的详细记录。项目日志：就是项目开发过程的详细记录，一般由项目经理记录。代码里的日志：就是程序员记录某个开发过程…"/><meta data-rh="true" property="og:title" content="Java 日志从入门到实战"/><meta data-rh="true" property="og:url" content="https://zhuanlan.zhihu.com/p/64353891"/><meta data-rh="true" property="og:description" content="日志和异常处理结合得当的话，会给项目维护带来非常大的价值。 日志：就是介绍一个过程和经历的详细记录。项目日志：就是项目开发过程的详细记录，一般由项目经理记录。代码里的日志：就是程序员记录某个开发过程…"/><meta data-rh="true" property="og:image" content="https://picx.zhimg.com/v2-4e03add7136e50affe555912839fc27b_720w.jpg?source=172ae18b"/><meta data-rh="true" property="og:type" content="article"/><meta data-rh="true" property="og:site_name" content="知乎专栏"/><link data-rh="true" rel="apple-touch-icon" href="https://static.zhihu.com/heifetz/assets/apple-touch-icon-152.81060cab.png"/><link data-rh="true" rel="apple-touch-icon" href="https://static.zhihu.com/heifetz/assets/apple-touch-icon-152.81060cab.png" sizes="152x152"/><link data-rh="true" rel="apple-touch-icon" href="https://static.zhihu.com/heifetz/assets/apple-touch-icon-120.d5793cac.png" sizes="120x120"/><link data-rh="true" rel="apple-touch-icon" href="https://static.zhihu.com/heifetz/assets/apple-touch-icon-76.7abf3393.png" sizes="76x76"/><link data-rh="true" rel="apple-touch-icon" href="https://static.zhihu.com/heifetz/assets/apple-touch-icon-60.362a8eac.png" sizes="60x60"/><link crossorigin="" rel="shortcut icon" type="image/x-icon" href="https://static.zhihu.com/heifetz/favicon.ico"/><link crossorigin="" rel="search" type="application/opensearchdescription+xml" href="https://static.zhihu.com/heifetz/search.xml" title="知乎"/><link rel="dns-prefetch" href="//static.zhimg.com"/><link rel="dns-prefetch" href="//pica.zhimg.com"/><link rel="dns-prefetch" href="//picx.zhimg.com"/><link rel="dns-prefetch" href="//pic1.zhimg.com"/><link rel="dns-prefetch" href="//pic2.zhimg.com"/><link rel="dns-prefetch" href="//pic3.zhimg.com"/><link rel="dns-prefetch" href="//pic4.zhimg.com"/><link rel="dns-prefetch" href="//static.zhihu.com"/><script nonce="cfe27716-3c06-4482-a69d-cb0ec736a710" data-web-reporter-config="{&quot;platform&quot;:&quot;web&quot;,&quot;project&quot;:&quot;heifetz&quot;}">!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports):"function"==typeof define&&define.amd?define(["exports"],t):t((e=e||self).webReporter={})}(this,function(e){"use strict";var t={},n=!1,o=function(){var e,o,r,a,i;return n||(e=document.querySelector("script[data-web-reporter-config]"),o=e&&e.dataset.webReporterConfig||"{}",r=JSON.parse(o),a=r.platform,i=r.project,t={platform:a,project:i},n=!0),t};function r(e){return a(function(){return localStorage.getItem(e)})()}function a(e){return function(){try{return e.apply(void 0,arguments)}catch(e){}}}var i=a(function(e,t){var n={platform:"web",project:o().project,clientTimestamp:+new Date};!function(e,t,n){"1"===r("weber:logenabled")&&console.log("[web-reporter]%o",{type:e,base:t,data:n})}(e,n,t),function(e,t){var n=btoa(JSON.stringify(t));if("undefined"!=typeof Blob&&window.navigator&&window.navigator.sendBeacon){var o=new Blob([n],{type:"text/plain"});navigator.sendBeacon(e,o)}else{var r=new XMLHttpRequest;r.open("POST",e),r.withCredentials=!1,r.setRequestHeader("Content-Type","text/plain;charset=UTF-8"),r.send(n)}}(r("weber:api")||"https://apm.zhihu.com/collector/web_json",{type:e,base:n,data:t})});e.report=i,Object.defineProperty(e,"__esModule",{value:!0})});
</script><link href="https://static.zhihu.com/heifetz/4267.216a26f4.a9fa4c5a5aa9380744ea.css" crossorigin="" rel="stylesheet"/><link href="https://static.zhihu.com/heifetz/column.216a26f4.84983d734ed9114ed00a.css" crossorigin="" rel="stylesheet"/><script nonce="cfe27716-3c06-4482-a69d-cb0ec736a710">!function(){"use strict";!function(e,n){var r=[];function t(e){return function(){r.push([e,arguments])}}n.Raven={captureException:t("captureException"),captureMessage:t("captureMessage"),captureBreadcrumb:t("captureBreadcrumb")};var a,o,c,i,s,u="undefined"!=typeof DOMError;function d(e){var n=e instanceof Error||e instanceof ErrorEvent||u&&e instanceof DOMError||e instanceof DOMException;Raven.captureException(n?e:new Error(e.message||e.reason))}n.addEventListener("unhandledrejection",d),n.addEventListener("error",d,!0),a=e.src,o=e,c=function(){r.forEach(function(e){var n;(n=Raven)[e[0]].apply(n,e[1])}),n.removeEventListener("unhandledrejection",d),n.removeEventListener("error",d,!0)},i=document.head||document.getElementsByTagName("head")[0],(s=document.createElement("script")).crossOrigin=o.crossOrigin,s.dataset.sentryConfig=o["data-sentry-config"],s.onload=c,s.src=a,i.appendChild(s)}({"defer":true,"crossOrigin":"anonymous","src":"https://unpkg.zhimg.com/@cfe/sentry-script@1.3.1/dist/init.js","data-sentry-config":"{\"dsn\":\"https://2d8d764432cc4f6fb3bc78ab9528299d@crash2.zhihu.com/1224\",\"sampleRate\":0.1,\"release\":\"966-eb94742e\",\"ignoreErrorNames\":[\"NetworkError\",\"SecurityError\"],\"ignoreErrorsPreset\":\"ReactApp\",\"tags\":{\"app_name\":\"heifetz\"}}"},window)}();
</script></head><body class="WhiteBg-body PostIndex-body"><div id="root"><div class="App"><style data-emotion-css="uzm3ri">.css-uzm3ri{position:fixed;top:0;right:0;left:0;z-index:101;display:none;height:2px;pointer-events:none;background:#056DE8;-webkit-transform:translateX(-100%);-ms-transform:translateX(-100%);transform:translateX(-100%);}</style><div class="LoadingBar  css-uzm3ri"></div><div><span style="position:absolute;top:-10000px;left:-10000px" role="log" aria-live="assertive"></span></div><main role="main" class="App-main"><div class="Post-content" data-zop-usertoken="{&quot;userToken&quot;:&quot;&quot;}" data-zop="{&quot;authorName&quot;:&quot;秃头母猿&quot;,&quot;itemId&quot;:64353891,&quot;title&quot;:&quot;Java 日志从入门到实战&quot;,&quot;type&quot;:&quot;article&quot;}"><div class="ColumnPageHeader-Wrapper"><div><style data-emotion-css="1l12z7y">.css-1l12z7y{box-shadow:0px 16px 32px rgba(0,0,0,0.04);}</style><div class="Sticky ColumnPageHeader css-1l12z7y"><div class="ColumnPageHeader-content"><a href="//www.zhihu.com" aria-label="知乎"><style data-emotion-css="1hlrcxk">.css-1hlrcxk{-webkit-transition-property:fill;transition-property:fill;-webkit-transition-duration:0.25s;transition-duration:0.25s;-webkit-transition-timing-function:ease-in;transition-timing-function:ease-in;}</style><svg viewBox="0 0 64 30" fill="#056DE8" width="64" height="30" class="css-1hlrcxk"><path d="M29.05 4.582H16.733V25.94h3.018l.403 2.572 4.081-2.572h4.815V4.582zm-5.207 18.69l-2.396 1.509-.235-1.508h-1.724V7.233h6.78v16.04h-2.425zM14.46 14.191H9.982c0-.471.033-.954.039-1.458v-5.5h5.106V5.935a1.352 1.352 0 0 0-.404-.957 1.378 1.378 0 0 0-.968-.396H5.783c.028-.088.056-.177.084-.255.274-.82 1.153-3.326 1.153-3.326a4.262 4.262 0 0 0-2.413.698c-.57.4-.912.682-1.371 1.946-.532 1.453-.997 2.856-1.31 3.693C1.444 8.674.28 11.025.28 11.025a5.85 5.85 0 0 0 2.52-.61c1.119-.593 1.679-1.502 2.054-2.883l.09-.3h2.334v5.5c0 .5-.045.982-.073 1.46h-4.12c-.71 0-1.39.278-1.893.775a2.638 2.638 0 0 0-.783 1.874h6.527a17.717 17.717 0 0 1-.778 3.649 16.796 16.796 0 0 1-3.012 5.273A33.104 33.104 0 0 1 0 28.74s3.13 1.175 5.425-.954c1.388-1.292 2.631-3.814 3.23-5.727a28.09 28.09 0 0 0 1.12-5.229h5.967v-1.37a1.254 1.254 0 0 0-.373-.899 1.279 1.279 0 0 0-.909-.37z"></path><path d="M11.27 19.675l-2.312 1.491 5.038 7.458a6.905 6.905 0 0 0 .672-2.218 3.15 3.15 0 0 0-.28-2.168l-3.118-4.563zM51.449 15.195V5.842c4.181-.205 7.988-.405 9.438-.483l.851-.05c.387-.399.885-2.395.689-3.021-.073-.25-.213-.666-.638-.555a33.279 33.279 0 0 1-4.277.727c-2.766.321-3.97.404-7.804.682-6.718.487-12.709.72-12.709.72a2.518 2.518 0 0 0 .788 1.834 2.567 2.567 0 0 0 1.883.706c2.278-.095 5.598-.25 8.996-.41v9.203h-12.78c0 .703.281 1.377.783 1.874a2.69 2.69 0 0 0 1.892.777h10.105v7.075c0 .887-.464 1.192-1.231 1.214h-3.92a4.15 4.15 0 0 0 .837 1.544 4.2 4.2 0 0 0 1.403 1.067 6.215 6.215 0 0 0 2.71.277c1.36-.066 2.967-.826 2.967-3.57v-7.607h11.28c.342 0 .67-.135.91-.374.242-.239.378-.563.378-.902v-1.375H51.449z"></path><path d="M42.614 8.873a2.304 2.304 0 0 0-1.508-.926 2.334 2.334 0 0 0-1.727.405l-.376.272 4.255 5.85 2.24-1.62-2.884-3.98zM57.35 8.68l-3.125 4.097 2.24 1.663 4.517-5.927-.375-.277a2.32 2.32 0 0 0-1.722-.452 2.327 2.327 0 0 0-1.536.896z"></path></svg></a><i class="ColumnPageHeader-Line"></i><div class="ColumnPageHeader-Title"><div class="ColumnPageHeader-TitleName"><span class="ColumnPageHeader-TitleMeta">首发于</span><a class="ColumnLink ColumnPageHeader-TitleColumn" href="//www.zhihu.com/column/c_123624235">深度挖掘互联网</a></div></div><div class="ColumnPageHeader-Button"><div class="Popover"><style data-emotion-css="d5yzzu">.css-d5yzzu{box-sizing:border-box;margin:0;min-width:0;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;margin-right:20px;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;}</style><div id="null-toggle" aria-haspopup="true" aria-expanded="false" aria-owns="null-content" type="button" class="Button Button--plain Button--gray css-d5yzzu">切换模式</div></div><button type="button" class="Button ColumnPageHeader-WriteButton Button--blue"><svg width="24" height="24" viewBox="0 0 24 24" class="Zi Zi--EditSurround" fill="currentColor"><path fill-rule="evenodd" d="M3.55 5.97a2.415 2.415 0 0 1 2.415-2.416h7.56a.75.75 0 0 1 0 1.5h-7.56a.915.915 0 0 0-.915.915v12.072c0 .505.41.915.915.915h12.074c.506 0 .915-.41.915-.915v-7.557a.75.75 0 0 1 1.5 0v7.557a2.415 2.415 0 0 1-2.415 2.415H5.965A2.415 2.415 0 0 1 3.55 18.04V5.969Z" clip-rule="evenodd"></path><path fill-rule="evenodd" d="M20.239 3.77a.75.75 0 0 1 0 1.06l-8.206 8.206a.75.75 0 0 1-1.06-1.06l8.205-8.206a.75.75 0 0 1 1.06 0Z" clip-rule="evenodd"></path></svg>写文章</button></div></div><div class="ColumnPageHeader-profile"><div><style data-emotion-css="1ay9vb9">.css-1ay9vb9{margin-right:16px;}</style><style data-emotion-css="jmxm1g">.css-jmxm1g{display:inline-block;padding:0 16px;font-size:14px;line-height:32px;color:#FFFFFF;text-align:center;cursor:pointer;background:none;border:1px solid;border-radius:3px;background-color:#056DE8;border-color:#056DE8;margin-right:16px;}.css-jmxm1g::mozFocusInner{padding:0;border:0;}.css-jmxm1g:focus{outline:none;-webkit-transition:box-shadow 0.3s;transition:box-shadow 0.3s;}.css-jmxm1g:focus-visible{box-shadow:0 0 0 2px #FFFFFF,0 0 0 4px rgba(5,109,232,0.3);}.css-jmxm1g:disabled{cursor:default;opacity:0.5;}.css-jmxm1g:hover{border-color:#0568dc;background-color:#0568dc;}</style><button type="button" class="Button Button--primary Button--blue css-jmxm1g">登录/注册</button><style data-emotion-css="1fv1gmw">.css-1fv1gmw{position:fixed;bottom:50px;right:64px;width:336px;z-index:2;}</style></div></div></div></div></div><style data-emotion-css="78p1r9">.css-78p1r9{box-sizing:border-box;margin:0;min-width:0;margin-left:auto;margin-right:auto;max-width:690px;margin-top:0;}@media screen and (min-width:40em){.css-78p1r9{margin-top:1em;}}</style><div class="css-78p1r9"><style data-emotion-css="1syitto">.css-1syitto{position:relative;padding-bottom:105%;height:0;border-radius:inherit;}</style><style data-emotion-css="acvfe9">.css-acvfe9{box-sizing:border-box;margin:0;min-width:0;position:relative;padding-bottom:105%;height:0;border-radius:inherit;}</style><div class="css-acvfe9"><style data-emotion-css="1ld0bim">.css-1ld0bim{position:absolute;top:0;left:0;width:100%;height:100%;border-radius:inherit;}</style><div class="css-1ld0bim"><style data-emotion-css="1ujtx97">.css-1ujtx97{object-fit:cover;background-color:#F6F6F6;}</style><img src="data:image/svg+xml;utf8,&lt;svg xmlns=&#x27;http://www.w3.org/2000/svg&#x27;&gt;&lt;/svg&gt;" alt="Java 日志从入门到实战" width="100%" height="100%" class="css-1ujtx97"/></div></div></div><article class="Post-Main Post-NormalMain" tabindex="-1"><header class="Post-Header"><h1 class="Post-Title">Java 日志从入门到实战</h1><div class="Post-Author"><div class="AuthorInfo" itemProp="author" itemscope="" itemType="http://schema.org/Person"><div class="AuthorInfo"><meta itemProp="name" content="秃头母猿"/><meta itemProp="image" content="https://pica.zhimg.com/v2-dd3e5d0cbb88d0311d90f90cd29e0a18_l.jpg?source=172ae18b"/><meta itemProp="url" content="https://www.zhihu.com/people/tu-tou-mu-yuan"/><meta itemProp="zhihu:followerCount"/><span class="UserLink AuthorInfo-avatarWrapper"><a href="//www.zhihu.com/people/tu-tou-mu-yuan" target="_blank" class="UserLink-link" data-za-detail-view-element_name="User"><style data-emotion-css="uodor8">.css-uodor8{border-radius:50%;}</style><style data-emotion-css="1y9jkzv">.css-1y9jkzv{box-sizing:border-box;margin:0;min-width:0;max-width:100%;height:auto;background-color:#FFFFFF;width:38px;height:38px;border-radius:50%;}</style><img class="Avatar AuthorInfo-avatar css-1y9jkzv" src="https://pica.zhimg.com/v2-dd3e5d0cbb88d0311d90f90cd29e0a18_l.jpg?source=172ae18b" srcSet="https://pica.zhimg.com/v2-dd3e5d0cbb88d0311d90f90cd29e0a18_l.jpg?source=172ae18b 2x" alt="秃头母猿"/></a></span><div class="AuthorInfo-content"><div class="AuthorInfo-head"><span class="UserLink AuthorInfo-name"><a href="//www.zhihu.com/people/tu-tou-mu-yuan" target="_blank" class="UserLink-link" data-za-detail-view-element_name="User">秃头母猿</a><style data-emotion-css="1cd9gw4">.css-1cd9gw4{margin-left:.3em;}</style><style data-emotion-css="2dtzk2">.css-2dtzk2{cursor:pointer;display:-webkit-inline-box;display:-webkit-inline-flex;display:-ms-inline-flexbox;display:inline-flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;margin-left:.3em;}</style><span rel="noopener noreferrer" class="css-2dtzk2">​<style data-emotion-css="1m3x3v9">.css-1m3x3v9{width:1em;height:1em;}</style><img src="https://pica.zhimg.com/v2-4812630bc27d642f7cafcd6cdeca3d7a.jpg?source=88ceefae" alt="" class="css-1m3x3v9"/></span></span></div><div class="AuthorInfo-detail"><div class="AuthorInfo-badge"><div class="ztext AuthorInfo-badgeText css-0">自学java3年的母程序猿</div></div></div></div></div></div></div><div role="button" tabindex="0"><span class="Voters"><button type="button" class="Button Button--plain">99 人<!-- -->赞同了该文章</button></span></div></header><div class="Post-RichTextContainer"><style data-emotion-css="1yuhvjn">.css-1yuhvjn{margin-top:16px;}</style><div class="css-1yuhvjn"><style data-emotion-css="376mun">.css-376mun{position:relative;display:inline;}</style><div class="css-376mun"><style data-emotion-css="12n4yzl">.css-12n4yzl .FileLinkCard{-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;background-color:rgba(246,246,246,0.88);border-radius:12px;box-sizing:border-box;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;margin:1em auto;max-width:100%;overflow:hidden;padding:12px;position:relative;width:390px;}.css-12n4yzl .FileLinkCard-icon{-webkit-flex-shrink:0;-ms-flex-negative:0;flex-shrink:0;height:30px;width:30px;}.css-12n4yzl .FileLinkCard-info{margin-left:12px;}.css-12n4yzl .FileLinkCard-name{color:#121212;font-size:15px;font-weight:500;line-height:21px;display:-webkit-box;text-overflow:ellipsis;overflow:hidden;-webkit-box-orient:vertical;-webkit-line-clamp:2;}.css-12n4yzl .FileLinkCard-meta{color:#999999;font-size:12px;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;line-height:14px;margin-top:5px;}.css-12n4yzl .FileLinkCard-source{white-space:pre;}.css-12n4yzl img[data-uncomfortable]{content:url(data:image/svg+xml,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20viewBox%3D%220%200%20344.88888888888886%20194%22%3E%3CforeignObject%20width%3D%22344.88888888888886%22%20height%3D%22194%22%3E%0A%20%20%20%20%20%20%3Cdiv%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F1999%2Fxhtml%22%20style%3D%22font-size%3A%2013px%3B%20font-family%3A%20-apple-system%2C%20BlinkMacSystemFont%2C%20Microsoft%20YaHei%2C%20sans-serif%3B%20color%3A%20%23fff%3B%20width%3A100%25%3B%20height%3A194px%3B%22%3E%0A%20%20%20%20%20%20%20%20%3Cdiv%20style%3D%22display%3A%20flex%3B%20flex-direction%3A%20column%3B%20align-items%3A%20center%3B%20justify-content%3A%20center%3B%20height%3A%20100%25%3B%22%3E%0A%20%20%20%20%20%20%20%20%20%20%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20width%3D%2218%22%20height%3D%2218%22%20viewBox%3D%220%200%2016%2016%22%20fill%3D%22currentColor%22%3E%3Cpath%20d%3D%22M8%203.65a7%207%200%2000-1.353.128.65.65%200%2011-.25-1.275A8.3%208.3%200%20018%202.35c2.387%200%204.172.954%205.357%202.125C14.511%205.615%2015.15%207.022%2015.15%208c0%20.621-.257%201.391-.699%202.134a7.076%207.076%200%2001-1.403%201.68l.495.46a.65.65%200%2011-.886.951l-.998-.929a.645.645%200%2001-.104-.097L9.73%2010.501a.647.647%200%2001-.29.301%203.15%203.15%200%2001-4.313-4.094.647.647%200%2001.234-.275L3.908%205.08a5.774%205.774%200%2000-1.283%201.522C2.282%207.198%202.15%207.707%202.15%208c0%20.522.41%201.616%201.407%202.6.965.954%202.43%201.75%204.443%201.75.468%200%20.905-.043%201.311-.12a.65.65%200%2001.243%201.277A8.322%208.322%200%20018%2013.65c-2.387%200-4.172-.954-5.357-2.125C1.49%2010.385.85%208.978.85%208c0-.598.238-1.333.648-2.046A7.054%207.054%200%20012.95%204.188l-.547-.509a.65.65%200%2011.886-.951l8.8%208.194a5.793%205.793%200%20001.244-1.453c.372-.624.516-1.163.516-1.469%200-.522-.41-1.616-1.407-2.6-.965-.954-2.43-1.75-4.443-1.75zM6.29%207.296a1.85%201.85%200%20002.534%202.36l-2.535-2.36zM8%204.85a.65.65%200%20100%201.3%201.85%201.85%200%20011.843%201.694.65.65%200%20101.296-.11A3.15%203.15%200%20008%204.85z%22%20fill-rule%3D%22evenodd%22%20clip-rule%3D%22evenodd%22%3E%3C%2Fpath%3E%3C%2Fsvg%3E%0A%20%20%20%20%20%20%20%20%20%20%3Cdiv%20style%3D%22margin%3A%20.6em%200%201.2em%22%3E%E8%AF%A5%E5%9B%BE%E7%89%87%E6%9C%89%E5%8F%AF%E8%83%BD%E4%BC%9A%E5%BC%95%E8%B5%B7%E4%B8%8D%E9%80%82%3C%2Fdiv%3E%0A%20%20%20%20%20%20%20%20%20%20%3Cbutton%20style%3D%22padding%3A%204px%201em%3B%20font-size%3A%201.1em%3B%20color%3A%20inherit%3B%20background%3A%20none%3B%20border%3A%201px%20solid%20rgba%28255%2C255%2C255%2C.5%29%3B%20border-radius%3A%209999px%3B%22%3E%E7%BB%A7%E7%BB%AD%E6%9F%A5%E7%9C%8B%3C%2Fbutton%3E%0A%20%20%20%20%20%20%20%20%3C%2Fdiv%3E%0A%20%20%20%20%20%20%3C%2Fdiv%3E%0A%20%20%20%20%3C%2FforeignObject%3E%3C%2Fsvg%3E);width:100%;height:194px;background:url(https://pic1.zhimg.com/v2-cf70d0759d787c70091857151c1cad4a.jpeg) no-repeat rgba(191,191,191,0.7);background-size:cover;cursor:pointer!important;}.css-12n4yzl img.content_image[data-size="normal"],.css-12n4yzl img.origin_image[data-size="normal"]{width:100%;max-width:100%;}.css-12n4yzl img.content_image[data-size="small"],.css-12n4yzl img.origin_image[data-size="small"]{width:320px;max-width:100%;}</style><style data-emotion-css="1wr1m8">.css-1wr1m8 .LinkCard.new{position:relative;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;box-sizing:border-box;-webkit-flex-direction:row;-ms-flex-direction:row;flex-direction:row;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;width:390px;min-height:84px;border-radius:8px;max-width:100%;overflow:hidden;margin:16px auto;padding:12px 12px 9px 12px;background-color:#F6F6F6;}.css-1wr1m8 .LinkCard.new,.css-1wr1m8 .LinkCard.new:hover{-webkit-text-decoration:none;text-decoration:none;border:none !important;color:inherit !important;}.css-1wr1m8 .LinkCard.new .LinkCard-contents{display:block;-webkit-flex:1 1 auto;-ms-flex:1 1 auto;flex:1 1 auto;position:relative;}.css-1wr1m8 .LinkCard.new .LinkCard-contents .loading{height:14px;background:#EBEBEB;border-radius:7px;}.css-1wr1m8 .LinkCard.new .LinkCard-contents.withTitle{margin-bottom:3px;}.css-1wr1m8 .LinkCard.new .LinkCard-title{display:-webkit-box;font-size:15px;font-weight:500;line-height:1.4;margin-bottom:2px;color:#121212;text-overflow:ellipsis;overflow:hidden;-webkit-box-orient:vertical;-webkit-line-clamp:1;}.css-1wr1m8 .LinkCard.new .LinkCard-title.two-line{line-height:20px;display:-webkit-box;text-overflow:ellipsis;overflow:hidden;-webkit-box-orient:vertical;-webkit-line-clamp:2;}.css-1wr1m8 .LinkCard.new .LinkCard-title.loading{margin-bottom:8px;width:80%;}.css-1wr1m8 .LinkCard.new .LinkCard-title.loading.withTitle{margin-bottom:6px;}.css-1wr1m8 .LinkCard.new .LinkCard-title.loadingTitle{margin-bottom:5px;}.css-1wr1m8 .LinkCard.new .LinkCard-excerpt{display:-webkit-box;text-overflow:ellipsis;font-size:13px;line-height:18px;color:#999999;margin-bottom:4px;overflow:hidden;-webkit-box-orient:vertical;-webkit-line-clamp:1;}.css-1wr1m8 .LinkCard.new .LinkCard-excerpt .LinkCard-author{color:#444444;}.css-1wr1m8 .LinkCard.new .LinkCard-desc{display:-webkit-box;font-size:13px;height:18px;line-height:18px;color:#999999;word-break:break-all;text-overflow:ellipsis;overflow:hidden;-webkit-box-orient:vertical;-webkit-line-clamp:1;}.css-1wr1m8 .LinkCard.new .LinkCard-desc .LinkCard-tag,.css-1wr1m8 .LinkCard.new .LinkCard-desc .tag{display:inline-block;font-size:11px;margin-left:8px;padding:0 4px;border-radius:3px;background:rgba(211,211,211,0.3);}.css-1wr1m8 .LinkCard.new .LinkCard-desc.loading{width:40%;}.css-1wr1m8 .LinkCard.new .LinkCard-desc svg{margin-right:2px;}.css-1wr1m8 .LinkCard.new .LinkCard-image{-webkit-flex:0 0 auto;-ms-flex:0 0 auto;flex:0 0 auto;background-color:#EBEBEB;background-size:cover;background-position:center;position:relative;display:block;width:60px;height:60px;margin-left:20px;object-fit:cover;border-radius:inherit;overflow:hidden;}.css-1wr1m8 .LinkCard.new .LinkCard-image.LinkCard-image--default{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;background-color:#EBEBEB;color:#D3D3D3;}.css-1wr1m8 .LinkCard.new .LinkCard-image.LinkCard-image--default svg{color:#999999;}.css-1wr1m8 .LinkCard.new .LinkCard-image img{width:100%;height:100%;object-fit:cover;}.css-1wr1m8 .LinkCard.new .LinkCard-image .LinkCard-image--video{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;position:absolute;top:50%;left:50%;-webkit-transform:translateX(-50%) translateY(-50%);-ms-transform:translateX(-50%) translateY(-50%);transform:translateX(-50%) translateY(-50%);width:24px;height:24px;border-radius:12px;background:rgba(255,255,255,0.9);pointer-events:none;}.css-1wr1m8 .LinkCard.new .LinkCard-image .LinkCard-image--video svg{color:#444444;}.css-1wr1m8 .LinkCard.new .LinkCard-richText .text{color:#444444;}.css-1wr1m8 .LinkCard.new .LinkCard-richText .bold{font-weight:600;}.css-1wr1m8 .LinkCard.new .LinkCard-richText .tag{margin-left:4px;}.css-1wr1m8 .LinkCard.old{position:relative;display:block;margin:1em auto;width:390px;box-sizing:border-box;border-radius:12px;max-width:100%;overflow:hidden;}.css-1wr1m8 .LinkCard.old,.css-1wr1m8 .LinkCard.old:hover{-webkit-text-decoration:none;text-decoration:none;border:none !important;color:inherit !important;}.css-1wr1m8 .LinkCard-ecommerceLoadingCard{position:relative;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:justify;-webkit-justify-content:space-between;-ms-flex-pack:justify;justify-content:space-between;padding:12px;border-radius:inherit;height:80px;box-sizing:border-box;background:rgba(246,246,246,0.88);color:#D3D3D3;}.css-1wr1m8 .LinkCard-ecommerceLoadingCardAvatarWrapper{width:60px;height:60px;background:#EBEBEB;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;border-radius:6px;margin-right:10px;}.css-1wr1m8 .LinkCard-ecommerceLoadingCardNetwork{width:20px;height:20px;}.css-1wr1m8 .LinkCard-ecommerceLoadingCardLoadingbar{height:60px;-webkit-flex:1;-ms-flex:1;flex:1;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;}.css-1wr1m8 .LinkCard-ecommerceLoadingCardLoadingbar span{height:16px;display:inline-block;background:#EBEBEB;}.css-1wr1m8 .LinkCard-ecommerceLoadingCardLoadingbar span:nth-of-type(1){width:60px;margin-bottom:4px;}.css-1wr1m8 .LinkCard-ecommerceLoadingCardLoadingbar span:nth-of-type(2){width:127px;}</style><style data-emotion-css="1wx2d58">.css-1wx2d58 .LinkCard.old{position:relative;display:block;margin:1em auto;width:390px;box-sizing:border-box;border-radius:12px;max-width:100%;overflow:hidden;}.css-1wx2d58 .LinkCard.old,.css-1wx2d58 .LinkCard.old:hover{-webkit-text-decoration:none;text-decoration:none;border:none !important;color:inherit !important;}.css-1wx2d58 .LinkCard-ecommerceLoadingCard{position:relative;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:justify;-webkit-justify-content:space-between;-ms-flex-pack:justify;justify-content:space-between;padding:12px;border-radius:inherit;height:80px;box-sizing:border-box;background:rgba(246,246,246,0.88);color:#D3D3D3;}.css-1wx2d58 .LinkCard-ecommerceLoadingCardAvatarWrapper{width:60px;height:60px;background:#EBEBEB;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;border-radius:6px;margin-right:10px;}.css-1wx2d58 .LinkCard-ecommerceLoadingCardNetwork{width:20px;height:20px;}.css-1wx2d58 .LinkCard-ecommerceLoadingCardLoadingbar{height:60px;-webkit-flex:1;-ms-flex:1;flex:1;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;}.css-1wx2d58 .LinkCard-ecommerceLoadingCardLoadingbar span{height:16px;display:inline-block;background:#EBEBEB;}.css-1wx2d58 .LinkCard-ecommerceLoadingCardLoadingbar span:nth-of-type(1){width:60px;margin-bottom:4px;}.css-1wx2d58 .LinkCard-ecommerceLoadingCardLoadingbar span:nth-of-type(2){width:127px;}.css-1wx2d58 .LinkCard.new{position:relative;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;box-sizing:border-box;-webkit-flex-direction:row;-ms-flex-direction:row;flex-direction:row;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;width:390px;min-height:84px;border-radius:8px;max-width:100%;overflow:hidden;margin:16px auto;padding:12px 12px 9px 12px;background-color:#F6F6F6;}.css-1wx2d58 .LinkCard.new,.css-1wx2d58 .LinkCard.new:hover{-webkit-text-decoration:none;text-decoration:none;border:none !important;color:inherit !important;}.css-1wx2d58 .LinkCard.new .LinkCard-contents{display:block;-webkit-flex:1 1 auto;-ms-flex:1 1 auto;flex:1 1 auto;position:relative;}.css-1wx2d58 .LinkCard.new .LinkCard-contents .loading{height:14px;background:#EBEBEB;border-radius:7px;}.css-1wx2d58 .LinkCard.new .LinkCard-contents.withTitle{margin-bottom:3px;}.css-1wx2d58 .LinkCard.new .LinkCard-title{display:-webkit-box;font-size:15px;font-weight:500;line-height:1.4;margin-bottom:2px;color:#121212;text-overflow:ellipsis;overflow:hidden;-webkit-box-orient:vertical;-webkit-line-clamp:1;}.css-1wx2d58 .LinkCard.new .LinkCard-title.two-line{line-height:20px;display:-webkit-box;text-overflow:ellipsis;overflow:hidden;-webkit-box-orient:vertical;-webkit-line-clamp:2;}.css-1wx2d58 .LinkCard.new .LinkCard-title.loading{margin-bottom:8px;width:80%;}.css-1wx2d58 .LinkCard.new .LinkCard-title.loading.withTitle{margin-bottom:6px;}.css-1wx2d58 .LinkCard.new .LinkCard-title.loadingTitle{margin-bottom:5px;}.css-1wx2d58 .LinkCard.new .LinkCard-excerpt{display:-webkit-box;text-overflow:ellipsis;font-size:13px;line-height:18px;color:#999999;margin-bottom:4px;overflow:hidden;-webkit-box-orient:vertical;-webkit-line-clamp:1;}.css-1wx2d58 .LinkCard.new .LinkCard-excerpt .LinkCard-author{color:#444444;}.css-1wx2d58 .LinkCard.new .LinkCard-desc{display:-webkit-box;font-size:13px;height:18px;line-height:18px;color:#999999;word-break:break-all;text-overflow:ellipsis;overflow:hidden;-webkit-box-orient:vertical;-webkit-line-clamp:1;}.css-1wx2d58 .LinkCard.new .LinkCard-desc .LinkCard-tag,.css-1wx2d58 .LinkCard.new .LinkCard-desc .tag{display:inline-block;font-size:11px;margin-left:8px;padding:0 4px;border-radius:3px;background:rgba(211,211,211,0.3);}.css-1wx2d58 .LinkCard.new .LinkCard-desc.loading{width:40%;}.css-1wx2d58 .LinkCard.new .LinkCard-desc svg{margin-right:2px;}.css-1wx2d58 .LinkCard.new .LinkCard-image{-webkit-flex:0 0 auto;-ms-flex:0 0 auto;flex:0 0 auto;background-color:#EBEBEB;background-size:cover;background-position:center;position:relative;display:block;width:60px;height:60px;margin-left:20px;object-fit:cover;border-radius:inherit;overflow:hidden;}.css-1wx2d58 .LinkCard.new .LinkCard-image.LinkCard-image--default{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;background-color:#EBEBEB;color:#D3D3D3;}.css-1wx2d58 .LinkCard.new .LinkCard-image.LinkCard-image--default svg{color:#999999;}.css-1wx2d58 .LinkCard.new .LinkCard-image img{width:100%;height:100%;object-fit:cover;}.css-1wx2d58 .LinkCard.new .LinkCard-image .LinkCard-image--video{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;position:absolute;top:50%;left:50%;-webkit-transform:translateX(-50%) translateY(-50%);-ms-transform:translateX(-50%) translateY(-50%);transform:translateX(-50%) translateY(-50%);width:24px;height:24px;border-radius:12px;background:rgba(255,255,255,0.9);pointer-events:none;}.css-1wx2d58 .LinkCard.new .LinkCard-image .LinkCard-image--video svg{color:#444444;}.css-1wx2d58 .LinkCard.new .LinkCard-richText .text{color:#444444;}.css-1wx2d58 .LinkCard.new .LinkCard-richText .bold{font-weight:600;}.css-1wx2d58 .LinkCard.new .LinkCard-richText .tag{margin-left:4px;}.css-1wx2d58 .FileLinkCard{-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;background-color:rgba(246,246,246,0.88);border-radius:12px;box-sizing:border-box;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;margin:1em auto;max-width:100%;overflow:hidden;padding:12px;position:relative;width:390px;}.css-1wx2d58 .FileLinkCard-icon{-webkit-flex-shrink:0;-ms-flex-negative:0;flex-shrink:0;height:30px;width:30px;}.css-1wx2d58 .FileLinkCard-info{margin-left:12px;}.css-1wx2d58 .FileLinkCard-name{color:#121212;font-size:15px;font-weight:500;line-height:21px;display:-webkit-box;text-overflow:ellipsis;overflow:hidden;-webkit-box-orient:vertical;-webkit-line-clamp:2;}.css-1wx2d58 .FileLinkCard-meta{color:#999999;font-size:12px;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;line-height:14px;margin-top:5px;}.css-1wx2d58 .FileLinkCard-source{white-space:pre;}.css-1wx2d58 img[data-uncomfortable]{content:url(data:image/svg+xml,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20viewBox%3D%220%200%20344.88888888888886%20194%22%3E%3CforeignObject%20width%3D%22344.88888888888886%22%20height%3D%22194%22%3E%0A%20%20%20%20%20%20%3Cdiv%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F1999%2Fxhtml%22%20style%3D%22font-size%3A%2013px%3B%20font-family%3A%20-apple-system%2C%20BlinkMacSystemFont%2C%20Microsoft%20YaHei%2C%20sans-serif%3B%20color%3A%20%23fff%3B%20width%3A100%25%3B%20height%3A194px%3B%22%3E%0A%20%20%20%20%20%20%20%20%3Cdiv%20style%3D%22display%3A%20flex%3B%20flex-direction%3A%20column%3B%20align-items%3A%20center%3B%20justify-content%3A%20center%3B%20height%3A%20100%25%3B%22%3E%0A%20%20%20%20%20%20%20%20%20%20%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20width%3D%2218%22%20height%3D%2218%22%20viewBox%3D%220%200%2016%2016%22%20fill%3D%22currentColor%22%3E%3Cpath%20d%3D%22M8%203.65a7%207%200%2000-1.353.128.65.65%200%2011-.25-1.275A8.3%208.3%200%20018%202.35c2.387%200%204.172.954%205.357%202.125C14.511%205.615%2015.15%207.022%2015.15%208c0%20.621-.257%201.391-.699%202.134a7.076%207.076%200%2001-1.403%201.68l.495.46a.65.65%200%2011-.886.951l-.998-.929a.645.645%200%2001-.104-.097L9.73%2010.501a.647.647%200%2001-.29.301%203.15%203.15%200%2001-4.313-4.094.647.647%200%2001.234-.275L3.908%205.08a5.774%205.774%200%2000-1.283%201.522C2.282%207.198%202.15%207.707%202.15%208c0%20.522.41%201.616%201.407%202.6.965.954%202.43%201.75%204.443%201.75.468%200%20.905-.043%201.311-.12a.65.65%200%2001.243%201.277A8.322%208.322%200%20018%2013.65c-2.387%200-4.172-.954-5.357-2.125C1.49%2010.385.85%208.978.85%208c0-.598.238-1.333.648-2.046A7.054%207.054%200%20012.95%204.188l-.547-.509a.65.65%200%2011.886-.951l8.8%208.194a5.793%205.793%200%20001.244-1.453c.372-.624.516-1.163.516-1.469%200-.522-.41-1.616-1.407-2.6-.965-.954-2.43-1.75-4.443-1.75zM6.29%207.296a1.85%201.85%200%20002.534%202.36l-2.535-2.36zM8%204.85a.65.65%200%20100%201.3%201.85%201.85%200%20011.843%201.694.65.65%200%20101.296-.11A3.15%203.15%200%20008%204.85z%22%20fill-rule%3D%22evenodd%22%20clip-rule%3D%22evenodd%22%3E%3C%2Fpath%3E%3C%2Fsvg%3E%0A%20%20%20%20%20%20%20%20%20%20%3Cdiv%20style%3D%22margin%3A%20.6em%200%201.2em%22%3E%E8%AF%A5%E5%9B%BE%E7%89%87%E6%9C%89%E5%8F%AF%E8%83%BD%E4%BC%9A%E5%BC%95%E8%B5%B7%E4%B8%8D%E9%80%82%3C%2Fdiv%3E%0A%20%20%20%20%20%20%20%20%20%20%3Cbutton%20style%3D%22padding%3A%204px%201em%3B%20font-size%3A%201.1em%3B%20color%3A%20inherit%3B%20background%3A%20none%3B%20border%3A%201px%20solid%20rgba%28255%2C255%2C255%2C.5%29%3B%20border-radius%3A%209999px%3B%22%3E%E7%BB%A7%E7%BB%AD%E6%9F%A5%E7%9C%8B%3C%2Fbutton%3E%0A%20%20%20%20%20%20%20%20%3C%2Fdiv%3E%0A%20%20%20%20%20%20%3C%2Fdiv%3E%0A%20%20%20%20%3C%2FforeignObject%3E%3C%2Fsvg%3E);width:100%;height:194px;background:url(https://pic1.zhimg.com/v2-cf70d0759d787c70091857151c1cad4a.jpeg) no-repeat rgba(191,191,191,0.7);background-size:cover;cursor:pointer!important;}.css-1wx2d58 img.content_image[data-size="normal"],.css-1wx2d58 img.origin_image[data-size="normal"]{width:100%;max-width:100%;}.css-1wx2d58 img.content_image[data-size="small"],.css-1wx2d58 img.origin_image[data-size="small"]{width:320px;max-width:100%;}</style><style data-emotion-css="1vgu1pu animation-1yvu044">.css-1vgu1pu{word-break:break-word;line-height:1.6;}.css-1vgu1pu > [data-first-child]{margin-top:0;}.css-1vgu1pu > :last-child{margin-bottom:0;}.css-1vgu1pu h1,.css-1vgu1pu h2{clear:left;margin-top:calc((1.4em * 2) / 1.2);margin-bottom:calc(1.4em / 1.2);font-size:1.2em;line-height:1.5;font-weight:600;}.css-1vgu1pu h3,.css-1vgu1pu h4,.css-1vgu1pu h5,.css-1vgu1pu h6{clear:left;margin-top:calc((1.4em * 1.5) / 1.1);margin-bottom:calc(1.4em / 1.1);font-size:1.1em;line-height:1.5;font-weight:600;}.css-1vgu1pu u{-webkit-text-decoration:none;text-decoration:none;border-bottom:1px solid #444444;}.css-1vgu1pu b{font-weight:600;}.css-1vgu1pu sup{font-size:0.8em;}.css-1vgu1pu sup[data-draft-type='reference']{color:#175199;}.css-1vgu1pu a:focus{outline:none;-webkit-transition:box-shadow 0.3s;transition:box-shadow 0.3s;}html[data-focus-visible] .css-1vgu1pu a:focus{box-shadow:0 0 0 2px #FFFFFF,0 0 0 4px rgba(5,109,232,0.3);}.css-1vgu1pu a.ztext-link,.css-1vgu1pu a.internal,.css-1vgu1pu a.external{-webkit-text-decoration:none;text-decoration:none;cursor:pointer;border-bottom:1px solid #808080;}.css-1vgu1pu a.ztext-link:hover,.css-1vgu1pu a.internal:hover,.css-1vgu1pu a.external:hover{color:#175199;border-bottom:1px solid #175199;}.css-1vgu1pu a.ztext-link > .ellipsis::after,.css-1vgu1pu a.internal > .ellipsis::after,.css-1vgu1pu a.external > .ellipsis::after{content:'...';}.css-1vgu1pu a.ztext-link > .invisible,.css-1vgu1pu a.internal > .invisible,.css-1vgu1pu a.external > .invisible{font:0/0 a;color:transparent;text-shadow:none;background-color:transparent;}.css-1vgu1pu a.ztext-link u,.css-1vgu1pu a.internal u,.css-1vgu1pu a.external u{border:none;}.css-1vgu1pu a.member_mention{color:#175199;}.css-1vgu1pu a.member_mention:hover{border-bottom:1px solid #175199;}.css-1vgu1pu a.UserLink-link{color:#175199;}.css-1vgu1pu a.UserLink-link:hover{border-bottom:1px solid #175199;}.css-1vgu1pu p{margin:1.4em 0;}.css-1vgu1pu p.ztext-empty-paragraph{margin:calc((2.8em- (1.4em * 2 + 1.6em)) / 2) 0;}.css-1vgu1pu p.ztext-empty-paragraph + .ztext-empty-paragraph{margin:1.4em 0;}.css-1vgu1pu hr{margin:4em auto;width:240px;max-width:100%;border:none;border-top:1px solid #D3D3D3;}.css-1vgu1pu img[eeimg]{max-width:100%;vertical-align:middle;}.css-1vgu1pu img[eeimg="1"]{margin:0 3px;max-width:calc(100% - 6px);display:inline-block;}.css-1vgu1pu img[eeimg="2"]{margin:1.4em auto;display:block;}.css-1vgu1pu blockquote{margin:1.4em 0;padding-left:1em;color:#646464;border-left:3px solid #D3D3D3;}.css-1vgu1pu ol,.css-1vgu1pu ul{margin:1.4em 0;padding:0;width:100%;}.css-1vgu1pu ol ol,.css-1vgu1pu ul ol,.css-1vgu1pu ol ul,.css-1vgu1pu ul ul{margin:0;}.css-1vgu1pu ol li::before,.css-1vgu1pu ul li::before{width:1em;}.css-1vgu1pu ol > ol,.css-1vgu1pu ul > ol,.css-1vgu1pu ol > ul,.css-1vgu1pu ul > ul{display:table-row;}.css-1vgu1pu ol > ol::before,.css-1vgu1pu ul > ol::before,.css-1vgu1pu ol > ul::before,.css-1vgu1pu ul > ul::before{display:table-cell;content:'';}.css-1vgu1pu ul{display:table;}.css-1vgu1pu ul>li{display:table-row;list-style:none;}.css-1vgu1pu ul>li::before{display:table-cell;content:'•  ';white-space:pre;}.css-1vgu1pu ol{display:table;counter-reset:ol;}.css-1vgu1pu ol > li{display:table-row;list-style:none;}.css-1vgu1pu ol > li::before{display:table-cell;text-align:right;counter-increment:ol;content:counter(ol) '. ';white-space:pre;}.css-1vgu1pu ol ol{counter-reset:ol2;}.css-1vgu1pu ol ol li::before{counter-increment:ol2;content:counter(ol2) '. ';}.css-1vgu1pu ol ol ol{counter-reset:ol3;}.css-1vgu1pu ol ol ol li::before{counter-increment:ol3;content:counter(ol3) '. ';}.css-1vgu1pu ol ol ol ol{counter-reset:ol4;}.css-1vgu1pu ol ol ol ol li::before{counter-increment:ol4;content:counter(ol4) '. ';}.css-1vgu1pu figure{margin:1.4em 0;}.css-1vgu1pu figure .content_image,.css-1vgu1pu figure .origin_image{margin:0 auto;}.css-1vgu1pu figure figcaption{margin-top:calc(0.6em / 0.9);padding:0 1em;font-size:0.9em;line-height:1.5;text-align:center;color:#999999;}.css-1vgu1pu figure + figure{margin-top:calc(1.4em * 1.6);}.css-1vgu1pu figure[data-size='small'],.css-1vgu1pu figure:not([data-size]) > [data-size='small']{clear:both;}.css-1vgu1pu figure[data-size='left'],.css-1vgu1pu figure:not([data-size]) > [data-size='left']{float:left;margin:0 20px 20px 0;max-width:33%;}.css-1vgu1pu figure[data-size='right'],.css-1vgu1pu figure:not([data-size]) > [data-size='right']{float:right;margin:0 0 20px 20px;max-width:33%;}.css-1vgu1pu figure[data-size='collapse']{margin-bottom:0;}.css-1vgu1pu figure[data-size='collapse'] + figure{margin-top:0;}.css-1vgu1pu .content_image,.css-1vgu1pu .origin_image{display:block;max-width:100%;height:auto;margin:1.4em auto;}.css-1vgu1pu .content_image[data-size='small'],.css-1vgu1pu .origin_image[data-size='small']{max-width:40%;}.css-1vgu1pu .content_image.zh-lightbox-thumb,.css-1vgu1pu .origin_image.zh-lightbox-thumb{cursor:-webkit-zoom-in;cursor:-moz-zoom-in;cursor:zoom-in;}.css-1vgu1pu code{margin:0 2px;padding:3px 4px;border-radius:3px;font-family:Menlo,Monaco,Consolas,'Andale Mono','lucida console','Courier New',monospace;font-size:0.9em;background-color:#F6F6F6;}.css-1vgu1pu pre{margin:1.4em 0;padding:calc(0.8em / 0.9);font-size:0.9em;word-break:initial;word-wrap:initial;white-space:pre;overflow:auto;-webkit-overflow-scrolling:touch;background:#F6F6F6;border-radius:4px;}.css-1vgu1pu pre code{margin:0;padding:0;font-size:inherit;border-radius:0;background-color:inherit;}.css-1vgu1pu li pre{white-space:pre-wrap;}.css-1vgu1pu table[data-draft-type='table']{border-collapse:collapse;font-size:15px;margin:1.4em auto;max-width:100%;table-layout:fixed;text-align:left;width:100%;}.css-1vgu1pu table[data-draft-type='table'][data-size='small']{min-width:260px;width:40%;}.css-1vgu1pu table[data-draft-type='table'][data-row-style='striped'] tr:nth-of-type(2n + 1){background:#F6F6F6;}.css-1vgu1pu table[data-draft-type='table'] td,.css-1vgu1pu table[data-draft-type='table'] th{border:1px solid #D3D3D3;line-height:24px;height:24px;padding:3px 12px;}.css-1vgu1pu table[data-draft-type='table'] th{background:#EBEBEB;color:#121212;font-weight:500;}.css-1vgu1pu .video-box,.css-1vgu1pu .link-box{position:relative;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-pack:justify;-webkit-justify-content:space-between;-ms-flex-pack:justify;justify-content:space-between;margin:1.4em 0;overflow:auto;white-space:normal;cursor:pointer;border:solid 1px #EBEBEB;border-radius:4px;}.css-1vgu1pu .lazy[data-lazy-status]{background-color:#F6F6F6;}.css-1vgu1pu .lazy[data-lazy-status="ok"]{background-color:transparent;-webkit-animation:animation-1yvu044 0.5s ease-in;animation:animation-1yvu044 0.5s ease-in;}.css-1vgu1pu .highlight{margin:1em 0;}.css-1vgu1pu .highlight pre{margin:0;}.css-1vgu1pu .highlight .hll{background-color:#FDFDFD;}.css-1vgu1pu .highlight .c{font-style:italic;color:#999999;}.css-1vgu1pu .highlight .err{color:#F1403C;}.css-1vgu1pu .highlight .k{font-weight:600;}.css-1vgu1pu .highlight .o{font-weight:600;}.css-1vgu1pu .highlight .cm{font-style:italic;color:#999999;}.css-1vgu1pu .highlight .cp{font-weight:600;color:#999999;}.css-1vgu1pu .highlight .c1{font-style:italic;color:#999999;}.css-1vgu1pu .highlight .cs{font-style:italic;font-weight:600;color:#999999;}.css-1vgu1pu .highlight .gd{color:#FF3366;}.css-1vgu1pu .highlight .ge{font-style:italic;}.css-1vgu1pu .highlight .gr{color:#F1403C;}.css-1vgu1pu .highlight .gh{color:#999999;}.css-1vgu1pu .highlight .gi{color:#12b370;}.css-1vgu1pu .highlight .go{color:#808080;}.css-1vgu1pu .highlight .gp{color:#646464;}.css-1vgu1pu .highlight .gs{font-weight:600;}.css-1vgu1pu .highlight .gu{color:#999999;}.css-1vgu1pu .highlight .gt{color:#F1403C;}.css-1vgu1pu .highlight .kc{font-weight:600;}.css-1vgu1pu .highlight .kd{font-weight:600;}.css-1vgu1pu .highlight .kn{font-weight:600;}.css-1vgu1pu .highlight .kp{font-weight:600;}.css-1vgu1pu .highlight .kr{font-weight:600;}.css-1vgu1pu .highlight .kt{font-weight:600;color:#175199;}.css-1vgu1pu .highlight .m{color:#056DE8;}.css-1vgu1pu .highlight .s{color:#F1403C;}.css-1vgu1pu .highlight .na{color:#056DE8;}.css-1vgu1pu .highlight .nb{color:#056DE8;}.css-1vgu1pu .highlight .nc{font-weight:600;color:#175199;}.css-1vgu1pu .highlight .no{color:#056DE8;}.css-1vgu1pu .highlight .ni{color:#5555DD;}.css-1vgu1pu .highlight .ne{font-weight:600;color:#F1403C;}.css-1vgu1pu .highlight .nf{font-weight:600;color:#F1403C;}.css-1vgu1pu .highlight .nn{color:#646464;}.css-1vgu1pu .highlight .nt{color:#175199;}.css-1vgu1pu .highlight .nv{color:#056DE8;}.css-1vgu1pu .highlight .ow{font-weight:600;}.css-1vgu1pu .highlight .w{color:#BFBFBF;}.css-1vgu1pu .highlight .mf{color:#056DE8;}.css-1vgu1pu .highlight .mh{color:#056DE8;}.css-1vgu1pu .highlight .mi{color:#056DE8;}.css-1vgu1pu .highlight .mo{color:#056DE8;}.css-1vgu1pu .highlight .sb{color:#F1403C;}.css-1vgu1pu .highlight .sc{color:#F1403C;}.css-1vgu1pu .highlight .sd{color:#F1403C;}.css-1vgu1pu .highlight .s2{color:#F1403C;}.css-1vgu1pu .highlight .se{color:#F1403C;}.css-1vgu1pu .highlight .sh{color:#F1403C;}.css-1vgu1pu .highlight .si{color:#F1403C;}.css-1vgu1pu .highlight .sx{color:#F1403C;}.css-1vgu1pu .highlight .sr{color:#A5542F;}.css-1vgu1pu .highlight .s1{color:#F1403C;}.css-1vgu1pu .highlight .ss{color:#F1403C;}.css-1vgu1pu .highlight .bp{color:#999999;}.css-1vgu1pu .highlight .vc{color:#056DE8;}.css-1vgu1pu .highlight .vg{color:#056DE8;}.css-1vgu1pu .highlight .vi{color:#056DE8;}.css-1vgu1pu .highlight .il{color:#056DE8;}.css-1vgu1pu .highlight::-webkit-scrollbar{width:6px;height:6px;}.css-1vgu1pu .highlight::-webkit-scrollbar-thumb:horizontal{background-color:rgba(18,18,18,0.5);border-radius:6px;}.css-1vgu1pu .highlight::-webkit-scrollbar-thumb:horizontal:hover{background-color:rgba(18,18,18,0.6);}.css-1vgu1pu .LinkCard.old{position:relative;display:block;margin:1em auto;width:390px;box-sizing:border-box;border-radius:12px;max-width:100%;overflow:hidden;}.css-1vgu1pu .LinkCard.old,.css-1vgu1pu .LinkCard.old:hover{-webkit-text-decoration:none;text-decoration:none;border:none !important;color:inherit !important;}.css-1vgu1pu .LinkCard-ecommerceLoadingCard{position:relative;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:justify;-webkit-justify-content:space-between;-ms-flex-pack:justify;justify-content:space-between;padding:12px;border-radius:inherit;height:80px;box-sizing:border-box;background:rgba(246,246,246,0.88);color:#D3D3D3;}.css-1vgu1pu .LinkCard-ecommerceLoadingCardAvatarWrapper{width:60px;height:60px;background:#EBEBEB;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;border-radius:6px;margin-right:10px;}.css-1vgu1pu .LinkCard-ecommerceLoadingCardNetwork{width:20px;height:20px;}.css-1vgu1pu .LinkCard-ecommerceLoadingCardLoadingbar{height:60px;-webkit-flex:1;-ms-flex:1;flex:1;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;}.css-1vgu1pu .LinkCard-ecommerceLoadingCardLoadingbar span{height:16px;display:inline-block;background:#EBEBEB;}.css-1vgu1pu .LinkCard-ecommerceLoadingCardLoadingbar span:nth-of-type(1){width:60px;margin-bottom:4px;}.css-1vgu1pu .LinkCard-ecommerceLoadingCardLoadingbar span:nth-of-type(2){width:127px;}.css-1vgu1pu .LinkCard.new{position:relative;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;box-sizing:border-box;-webkit-flex-direction:row;-ms-flex-direction:row;flex-direction:row;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;width:390px;min-height:84px;border-radius:8px;max-width:100%;overflow:hidden;margin:16px auto;padding:12px 12px 9px 12px;background-color:#F6F6F6;}.css-1vgu1pu .LinkCard.new,.css-1vgu1pu .LinkCard.new:hover{-webkit-text-decoration:none;text-decoration:none;border:none !important;color:inherit !important;}.css-1vgu1pu .LinkCard.new .LinkCard-contents{display:block;-webkit-flex:1 1 auto;-ms-flex:1 1 auto;flex:1 1 auto;position:relative;}.css-1vgu1pu .LinkCard.new .LinkCard-contents .loading{height:14px;background:#EBEBEB;border-radius:7px;}.css-1vgu1pu .LinkCard.new .LinkCard-contents.withTitle{margin-bottom:3px;}.css-1vgu1pu .LinkCard.new .LinkCard-title{display:-webkit-box;font-size:15px;font-weight:500;line-height:1.4;margin-bottom:2px;color:#121212;text-overflow:ellipsis;overflow:hidden;-webkit-box-orient:vertical;-webkit-line-clamp:1;}.css-1vgu1pu .LinkCard.new .LinkCard-title.two-line{line-height:20px;display:-webkit-box;text-overflow:ellipsis;overflow:hidden;-webkit-box-orient:vertical;-webkit-line-clamp:2;}.css-1vgu1pu .LinkCard.new .LinkCard-title.loading{margin-bottom:8px;width:80%;}.css-1vgu1pu .LinkCard.new .LinkCard-title.loading.withTitle{margin-bottom:6px;}.css-1vgu1pu .LinkCard.new .LinkCard-title.loadingTitle{margin-bottom:5px;}.css-1vgu1pu .LinkCard.new .LinkCard-excerpt{display:-webkit-box;text-overflow:ellipsis;font-size:13px;line-height:18px;color:#999999;margin-bottom:4px;overflow:hidden;-webkit-box-orient:vertical;-webkit-line-clamp:1;}.css-1vgu1pu .LinkCard.new .LinkCard-excerpt .LinkCard-author{color:#444444;}.css-1vgu1pu .LinkCard.new .LinkCard-desc{display:-webkit-box;font-size:13px;height:18px;line-height:18px;color:#999999;word-break:break-all;text-overflow:ellipsis;overflow:hidden;-webkit-box-orient:vertical;-webkit-line-clamp:1;}.css-1vgu1pu .LinkCard.new .LinkCard-desc .LinkCard-tag,.css-1vgu1pu .LinkCard.new .LinkCard-desc .tag{display:inline-block;font-size:11px;margin-left:8px;padding:0 4px;border-radius:3px;background:rgba(211,211,211,0.3);}.css-1vgu1pu .LinkCard.new .LinkCard-desc.loading{width:40%;}.css-1vgu1pu .LinkCard.new .LinkCard-desc svg{margin-right:2px;}.css-1vgu1pu .LinkCard.new .LinkCard-image{-webkit-flex:0 0 auto;-ms-flex:0 0 auto;flex:0 0 auto;background-color:#EBEBEB;background-size:cover;background-position:center;position:relative;display:block;width:60px;height:60px;margin-left:20px;object-fit:cover;border-radius:inherit;overflow:hidden;}.css-1vgu1pu .LinkCard.new .LinkCard-image.LinkCard-image--default{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;background-color:#EBEBEB;color:#D3D3D3;}.css-1vgu1pu .LinkCard.new .LinkCard-image.LinkCard-image--default svg{color:#999999;}.css-1vgu1pu .LinkCard.new .LinkCard-image img{width:100%;height:100%;object-fit:cover;}.css-1vgu1pu .LinkCard.new .LinkCard-image .LinkCard-image--video{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;position:absolute;top:50%;left:50%;-webkit-transform:translateX(-50%) translateY(-50%);-ms-transform:translateX(-50%) translateY(-50%);transform:translateX(-50%) translateY(-50%);width:24px;height:24px;border-radius:12px;background:rgba(255,255,255,0.9);pointer-events:none;}.css-1vgu1pu .LinkCard.new .LinkCard-image .LinkCard-image--video svg{color:#444444;}.css-1vgu1pu .LinkCard.new .LinkCard-richText .text{color:#444444;}.css-1vgu1pu .LinkCard.new .LinkCard-richText .bold{font-weight:600;}.css-1vgu1pu .LinkCard.new .LinkCard-richText .tag{margin-left:4px;}.css-1vgu1pu .FileLinkCard{-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;background-color:rgba(246,246,246,0.88);border-radius:12px;box-sizing:border-box;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;margin:1em auto;max-width:100%;overflow:hidden;padding:12px;position:relative;width:390px;}.css-1vgu1pu .FileLinkCard-icon{-webkit-flex-shrink:0;-ms-flex-negative:0;flex-shrink:0;height:30px;width:30px;}.css-1vgu1pu .FileLinkCard-info{margin-left:12px;}.css-1vgu1pu .FileLinkCard-name{color:#121212;font-size:15px;font-weight:500;line-height:21px;display:-webkit-box;text-overflow:ellipsis;overflow:hidden;-webkit-box-orient:vertical;-webkit-line-clamp:2;}.css-1vgu1pu .FileLinkCard-meta{color:#999999;font-size:12px;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;line-height:14px;margin-top:5px;}.css-1vgu1pu .FileLinkCard-source{white-space:pre;}.css-1vgu1pu img[data-uncomfortable]{content:url(data:image/svg+xml,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20viewBox%3D%220%200%20344.88888888888886%20194%22%3E%3CforeignObject%20width%3D%22344.88888888888886%22%20height%3D%22194%22%3E%0A%20%20%20%20%20%20%3Cdiv%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F1999%2Fxhtml%22%20style%3D%22font-size%3A%2013px%3B%20font-family%3A%20-apple-system%2C%20BlinkMacSystemFont%2C%20Microsoft%20YaHei%2C%20sans-serif%3B%20color%3A%20%23fff%3B%20width%3A100%25%3B%20height%3A194px%3B%22%3E%0A%20%20%20%20%20%20%20%20%3Cdiv%20style%3D%22display%3A%20flex%3B%20flex-direction%3A%20column%3B%20align-items%3A%20center%3B%20justify-content%3A%20center%3B%20height%3A%20100%25%3B%22%3E%0A%20%20%20%20%20%20%20%20%20%20%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20width%3D%2218%22%20height%3D%2218%22%20viewBox%3D%220%200%2016%2016%22%20fill%3D%22currentColor%22%3E%3Cpath%20d%3D%22M8%203.65a7%207%200%2000-1.353.128.65.65%200%2011-.25-1.275A8.3%208.3%200%20018%202.35c2.387%200%204.172.954%205.357%202.125C14.511%205.615%2015.15%207.022%2015.15%208c0%20.621-.257%201.391-.699%202.134a7.076%207.076%200%2001-1.403%201.68l.495.46a.65.65%200%2011-.886.951l-.998-.929a.645.645%200%2001-.104-.097L9.73%2010.501a.647.647%200%2001-.29.301%203.15%203.15%200%2001-4.313-4.094.647.647%200%2001.234-.275L3.908%205.08a5.774%205.774%200%2000-1.283%201.522C2.282%207.198%202.15%207.707%202.15%208c0%20.522.41%201.616%201.407%202.6.965.954%202.43%201.75%204.443%201.75.468%200%20.905-.043%201.311-.12a.65.65%200%2001.243%201.277A8.322%208.322%200%20018%2013.65c-2.387%200-4.172-.954-5.357-2.125C1.49%2010.385.85%208.978.85%208c0-.598.238-1.333.648-2.046A7.054%207.054%200%20012.95%204.188l-.547-.509a.65.65%200%2011.886-.951l8.8%208.194a5.793%205.793%200%20001.244-1.453c.372-.624.516-1.163.516-1.469%200-.522-.41-1.616-1.407-2.6-.965-.954-2.43-1.75-4.443-1.75zM6.29%207.296a1.85%201.85%200%20002.534%202.36l-2.535-2.36zM8%204.85a.65.65%200%20100%201.3%201.85%201.85%200%20011.843%201.694.65.65%200%20101.296-.11A3.15%203.15%200%20008%204.85z%22%20fill-rule%3D%22evenodd%22%20clip-rule%3D%22evenodd%22%3E%3C%2Fpath%3E%3C%2Fsvg%3E%0A%20%20%20%20%20%20%20%20%20%20%3Cdiv%20style%3D%22margin%3A%20.6em%200%201.2em%22%3E%E8%AF%A5%E5%9B%BE%E7%89%87%E6%9C%89%E5%8F%AF%E8%83%BD%E4%BC%9A%E5%BC%95%E8%B5%B7%E4%B8%8D%E9%80%82%3C%2Fdiv%3E%0A%20%20%20%20%20%20%20%20%20%20%3Cbutton%20style%3D%22padding%3A%204px%201em%3B%20font-size%3A%201.1em%3B%20color%3A%20inherit%3B%20background%3A%20none%3B%20border%3A%201px%20solid%20rgba%28255%2C255%2C255%2C.5%29%3B%20border-radius%3A%209999px%3B%22%3E%E7%BB%A7%E7%BB%AD%E6%9F%A5%E7%9C%8B%3C%2Fbutton%3E%0A%20%20%20%20%20%20%20%20%3C%2Fdiv%3E%0A%20%20%20%20%20%20%3C%2Fdiv%3E%0A%20%20%20%20%3C%2FforeignObject%3E%3C%2Fsvg%3E);width:100%;height:194px;background:url(https://pic1.zhimg.com/v2-cf70d0759d787c70091857151c1cad4a.jpeg) no-repeat rgba(191,191,191,0.7);background-size:cover;cursor:pointer!important;}.css-1vgu1pu img.content_image[data-size="normal"],.css-1vgu1pu img.origin_image[data-size="normal"]{width:100%;max-width:100%;}.css-1vgu1pu img.content_image[data-size="small"],.css-1vgu1pu img.origin_image[data-size="small"]{width:320px;max-width:100%;}@-webkit-keyframes animation-1yvu044{from{opacity:0;}to{opacity:1;}}@keyframes animation-1yvu044{from{opacity:0;}to{opacity:1;}}</style><div class="RichText ztext Post-RichText css-1vgu1pu" options="[object Object]"><p data-first-child data-pid="ELj8n3yi">日志和异常处理结合得当的话，会给项目维护带来非常大的价值。</p><ul><li data-pid="w4FZ2wjJ"><b>日志：</b>就是介绍一个过程和经历的详细记录。</li><li data-pid="KO1codzb"><b>项目日志：</b>就是项目开发过程的详细记录，一般由项目经理记录。</li><li data-pid="w3UgPSgR"><b>代码里的日志：</b>就是程序员记录某个开发过程的详细情况，这是项目里每个程序员需要做的工作。</li></ul><p data-pid="EZyviwbC">代码里的日志在项目中扮演着非常重要的角色，日志记录的详细程度决定系统是否容易维护，Java 项目中日志记录的框架有很多，在项目中如何选型也必将困惑。</p><p data-pid="1x1YgX6Q">我们这场 chat 讨论的主题就是：<b>Java代码里的日志</b>，主要是写给 Java 程序员看的，本篇 Chat 从以下六个方面对 Java 日志进行阐述：</p><ul><li data-pid="sjhRluaV">一、日志在项目中的作用</li><li data-pid="2CqrAM8I">二、Java 日志使用的困惑</li><li data-pid="xc27IHCN">三、Java 日志演化历史</li><li data-pid="5O79RdqA">四、使用不同框架的 Java 日志示例说明</li><li data-pid="Fs9suMY5">五、项目中日志记录遵守哪些原则</li><li data-pid="VgPh1HK-">六、一个推荐的项目 Java 日志实例</li></ul><p data-pid="PoTa-2Hc">以期通过本场 Chat 的学习，能使大家在编码过程中，对日志的处理过程加深认识、统一规范、得到收获，从零开始轻松掌握 Java 日志处理，并且可以运用到实际项目中。</p><h3>一、日志在项目中的作用</h3><p data-pid="W6iNnWJ5">Log 日志，主要用于记录程序运行的情况，以便于程序在部署之后的排错调试等，也有利于将这些信息进行持久化（如果不将日志信息保存到文件或数据库，则信息便会丢失）。</p><h3>1. 查看程序当前运行状态</h3><p data-pid="FbCuOk_p">如果想了解程序当前的运行情况，我们通过实时查看应用日志的输出，就能进行分析。</p><p data-pid="qasC818r">比如，你在浏览器里输入一个 action 地址，该 url 负责执行一些批量处理，action 运行后，假设处理比较耗时，你再浏览器里无法直接看到程序的执行结果，此时，你可以打开系统日志，通过从日志输出信息就能轻松地分析该 url 的执行情况。</p><h3>2. 查看程序历史运行轨迹</h3><p data-pid="LofXrgrx">如果想了解历时程序的运行情况，我们通过查看应用历时日志的输出，就能进行分析。</p><p data-pid="JVJpKXwp">比如，你想了解下上周周末用户访问量，你可以打开系统上周周末的日志记录，进行分析。你想了解昨天的某个定时任务是否正常执行，你可以打开昨天的系统日志，精确查找该定时任务的输出信息，从而判断定时任务是否执行。</p><h3>3. 排查系统问题</h3><p data-pid="sZQnMN7f">排查系统问题是程序员最熟悉的味道了，在项目维护过程中，出了任何问题，都需要程序员去进行排查。此时，如果没有清楚明了的日志记录，想要核查出问题的原因，难于上青天。</p><p data-pid="o6ouRua0">一个优秀的程序员一定是个日志记录高手，如果日志记录的好，处理得当，排查问题则易如反掌。</p><p data-pid="ipjrfs6g">大家有没有遇到一种场景，一个问题发生了，有的人能迅速定位问题并解决，有的人搞了半天，还没发现问题的产生原因。</p><p data-pid="Tr71eQmc">其实快速定位问题的人一定记录了详细的日志，因此当问题发生的时候，通过核查问题发生时候的日志，就能快速的找出问题产生的原因。</p><h3>4. 优化系统性能</h3><p data-pid="ioUzEiLp">通过记录程序运行的时间，就能判断程序从执行开始到执行结束消耗的时间，从而判断系统性能是否达标，为系统性能优化提供判断依据。</p><h3>5. 安全审计的基石</h3><p data-pid="_1LQlEdX">网络安全越来越受到大家的关注，所以系统安全目前是项目过程非常重要的一个环节，安全审计也是系统中非常重要的部分。</p><p data-pid="zhhnOsTi">通过系统日志分析，可以判断一些非法攻击，非法调用，以及系统处理过程中的安全隐患。</p><p data-pid="iuVFxJep">比如，大家平时都在做运营系统，其中运营人员在通过界面处理一些数据的时候，如果没有清楚的日志操作记录，一条数据被删除或者修改，你是无法找到是谁操作的，但是如果你做了相应的记录，该数据被谁删除或者修改就会一目了然。</p><p data-pid="ebeJId64"><b>通过以上 5 点说明了日志在项目维护过程中的重要作用</b></p><p data-pid="3jIHKhab">一个系统是否容易维护，很大程度上是基于程序员在程序开发过程中的代码日志是怎么记录的。</p><p data-pid="QmGg3b-f">日志记录的越清楚，维护起来就越容易，有的程序员没有日志记录意识，或者对日志记录认识不清，或者是不知道日志该如何记录，这势必会给项目后期的维护带来一个个大坑。</p><p data-pid="LrjFzGpx">当项目经理让你解决一个线上问题的时候，正好遇到了一个没有日志记录习惯的人写的代码，你就能体会到那种痛苦，不由地想要爆粗口。</p><p data-pid="OVksOGBe">因此，作为一个程序员来说，掌握代码日志的记录方法，是程序员生涯的一项基本功。写代码时做好日志记录是“即利人又利己”的做法，不写日志记录就是“损人不利己”的做法。</p><h3>二、Java 日志使用的困惑</h3><p data-pid="z3umGkN8">大多数的程序员都能认识到日志在项目中的重要性，可是对日志记录具体要怎么做，做到什么程度，日志记录用什么工具，会有很多困惑。</p><h3>1. 工具困惑</h3><p data-pid="sQkk9HIN">作为 Java 程序员，幸运的是，Java 拥有功能和性能都非常强大的日志库；不幸的是，这样的日志库有不止一个，相信每个人都会对JUL(Java Util Log)、JCL(Commons Logging)、Log4j、SLF4J、Logback、Log4j2 等等的日志工具，到底使用什么产生感到困扰。</p><p data-pid="YLopX1Nw">下面的第三节：“Java 日志演化历史”，第四节：“使用不同框架的 Java 日志示例说明”，为大家解惑 Java 日志框架的使用问题。</p><h3>2. 使用困惑</h3><p data-pid="_R-47BqZ">有的程序员即使知道写 Java 程序用什么日志工具，可能对日志记录具体应该怎么写，写什么东西，什么情况下要写，这些仁者见仁智者见智的东西也会产生困扰。</p><p data-pid="CcS6lths">下面的第五节：“项目中日志记录遵守哪些原则”，为大家解惑日志记录要遵守哪些原则。</p><p data-pid="3JoOFrFh">有的程序员知道了该用哪个 Java 框架，也知道了日志记录的原则，可能还会对具体在项目中到底该如何操作产生困惑。</p><h3>3. 实战困惑</h3><p data-pid="gp-xsw9b">下面的第六节：“一个推荐的项目 Java 日志实例”，为大家展示在具体项目过程中的应用示例。</p><h3>三、Java 日志演化历史</h3><p data-pid="2j_SCLlM">最先出现的是 Apache 开源社区的 Log4j，这个日志确实是应用最广泛的日志工具，成为了 Java 日志的事实上的标准。</p><p data-pid="-I9rSW3P">然而，当时 Java 的开发主体 Sun 公司认为自己才是正统，在 Jdk1.4中增加了 JUL（在java.util.logging包下）日志实现，企图对抗 Log4j，但是却造成了 Java 目前开发者记录日志局面的混乱，迄今为止仍饱受诟病。</p><p data-pid="Qr9NDW35">当然也有其他日志工具的出现，基本都是各自为政，这些日志系统互相没有关联。</p><p data-pid="EG6FBqOr"><b>为什么 JUL 的出现会导致开发局面混乱呢？</b></p><p data-pid="SqFLLvRO">想象下你的项目应用使用 Log4j，然后使用了一个第三方库，而第三方库使用了 JUL，那么，你的应用就得同时使用 Log4j 和JUL两个日志工具了，然后又有需要使用另外一个第三方库，但是这个第三方库使用了 Log4j 和 JUL 之外的 simplelog。这个时候你的应用里各种 log 工具满天飞，这势必会使你的程序员感到崩溃。因为这些日志工具互相没有关联，替换和统一日志工具也就变成了比较棘手的一件事情。</p><blockquote data-pid="K0nc3Hdf">如果你遇到了这种问题，你该如何解决呢？<br/>解决这个问题，我们会用到一个设计模式——“适配器模式”，即把这个问题进行抽象，抽象出一个接口层，对每个日志实现都进行适配，这样这些提供给别人的库都直接使用抽象的接口层即可。</blockquote><p data-pid="aT3JddHb">为了搞定这个日常开发中比较棘手的问题，Apache 开源社区提供了一个日志框架作为日志的抽象，叫 commons-logging，也被称为 JCL(java common logging)，JCL 对各种日志接口进行抽象，抽象出一个接口层，对每个日志实现都进行适配，这样这些提供给别人的库都直接使用抽象层即可，确实出色地完成了兼容主流的日志实现（Log4j、JUL、simplelog 等），较好的解决了上述问题，基本一统江湖，就连顶顶大名的 spring 也是依赖了 JCL。</p><p data-pid="2u8DcW_J">但是美好的日子并不长，作为元老级日志 Log4j 的作者 (Ceki Gülcü)，他觉得 JCL 不够优秀，所以他再度出山，搞出了一套更优雅的日志框架 SLF4J（这个也是抽象层），即简单日志门面（Simple Logging Facade for Java），并为 SLF4J 实现了一个亲儿子——logback，确实更加优雅了。</p><p data-pid="Nf20Y1E4">最后，Ceki Gülcü 觉得还是得照顾下自己的 “大儿子”——Log4j，又把 Log4j 进行了改造，就是所谓的 Log4j2，同时支持 JCL 以及 SLF4J。</p><p data-pid="jqOXGAyG">SLF4J 的出现，又使 Java 日志体系变得混乱起来。</p><p data-pid="CqhIw3sK">下面是一张目前 Java 日志体系的示意图：</p><p class="ztext-empty-paragraph"><br/></p><figure data-size="normal"><noscript><img src="https://pic3.zhimg.com/v2-1d6add0536d2266211f2569a84a681ae_b.jpg" data-caption="" data-size="normal" data-rawwidth="822" data-rawheight="418" class="origin_image zh-lightbox-thumb" width="822" data-original="https://pic3.zhimg.com/v2-1d6add0536d2266211f2569a84a681ae_r.jpg"/></noscript><img src="data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;822&#39; height=&#39;418&#39;&gt;&lt;/svg&gt;" data-caption="" data-size="normal" data-rawwidth="822" data-rawheight="418" class="origin_image zh-lightbox-thumb lazy" width="822" data-original="https://pic3.zhimg.com/v2-1d6add0536d2266211f2569a84a681ae_r.jpg" data-actualsrc="https://pic3.zhimg.com/v2-1d6add0536d2266211f2569a84a681ae_b.jpg" data-original-token="v2-2adab8652816bd48fdbc77edb4a85285"/></figure><p class="ztext-empty-paragraph"><br/></p><p data-pid="VovoKzMK">日志库 Log4j，JUL，logback 是互相不兼容的，没有共同的 Interface，所以 commons-logging、SLF4J 通过适配器模式，抽象出来一个共同的接口，然后根据使用的具体日志框架来实现日志。</p><p data-pid="g2KgRu03">java common logging 和 SLF4J 都是日志的接口，供用户使用，而没有提供实现，Log4j，JUL，logback 等等才是日志的真正实现。</p><p data-pid="lqJmyV8p">当我们调用日志接口时，接口会自动寻找恰当的实现，返回一个合适的实例给我们服务。这些过程都是透明化的，用户不需要进行任何操作。</p><p data-pid="g1E3AF5w">工具官方网站Log4j<a href="https://link.zhihu.com/?target=http%3A//logging.apache.org/log4j/1.2" class=" external" target="_blank" rel="nofollow noreferrer"><span class="invisible">http://</span><span class="visible">logging.apache.org/log4</span><span class="invisible">j/1.2</span><span class="ellipsis"></span></a>JCL<a href="https://link.zhihu.com/?target=http%3A//commons.apache.org/proper/commons-logging/" class=" external" target="_blank" rel="nofollow noreferrer"><span class="invisible">http://</span><span class="visible">commons.apache.org/prop</span><span class="invisible">er/commons-logging/</span><span class="ellipsis"></span></a>SLF4J<a href="https://link.zhihu.com/?target=http%3A//www.slf4j.org/" class=" wrap external" target="_blank" rel="nofollow noreferrer">http://www.slf4j.org</a>logback<a href="https://link.zhihu.com/?target=http%3A//logback.qos.ch/" class=" wrap external" target="_blank" rel="nofollow noreferrer">http://logback.qos.ch</a>Log4j2<a href="https://link.zhihu.com/?target=https%3A//logging.apache.org/log4j/2.x/" class=" external" target="_blank" rel="nofollow noreferrer"><span class="invisible">https://</span><span class="visible">logging.apache.org/log4</span><span class="invisible">j/2.x/</span><span class="ellipsis"></span></a></p><h3>四、使用不同框架的 Java 日志示例说明</h3><h3>1. Log4j</h3><h3><b>Log4j 介绍</b></h3><p data-pid="bUgyUsV9">Log4j（log for java）是 Apache 的一个开源项目，通过使用 Log4j，我们可以控制日志信息输出到日志文件、也可以控制每一条日志的输出格式；通过定义每一条日志信息的级别，我们能够更加细致地控制日志的生成过程。这些可以通过一个配置文件来灵活地进行配置，而不需要修改应用程序的代码。</p><h3><b>Log4j 使用步骤说明</b></h3><p data-pid="P4pXYNAb"><b>（1）选择 jar 包</b></p><p data-pid="lxW7FwA7">加入 log4j-1.2.17.jar 到 Libraries 下，如果使用 maven 项目，也可以选择在 pom.xml 中新增依赖如下：</p><div class="highlight"><pre><code class="language-text">&lt;dependency&gt;
        &lt;groupId&gt;log4j&lt;/groupId&gt;
        &lt;artifactId&gt;log4j&lt;/artifactId&gt;
        &lt;version&gt;1.2.17&lt;/version&gt;
    &lt;/dependency&gt;</code></pre></div><p data-pid="lHSSSnnt"><b>（2）log4j.properties 配置</b></p><p data-pid="T-ZV7wud">Log4j 有三个主要组件：记录器， appender 和布局。这三种类型的组件协同工作，使开发人员能够根据消息类型和级别记录消息，并在运行时控制这些消息的格式和报告位置。</p><p data-pid="GIvySbHj">Log4j 建议只使用四个级别，优先级从高到低分别是 ERROR、WARN、INFO、DEBUG。</p><p data-pid="0Gc6XKmo">比如定义了 INFO 级别，只有等于及高于这个级别的才进行处理，则应用程序中所有 DEBUG 级别的日志信息将不被打印出来。ALL，打印所有的日志；OFF，关闭所有的日志输出。</p><p data-pid="Ee1pG5pH">appenderName，就是指定日志信息输出到哪个地方。可同时指定多个输出目的地。</p><p data-pid="OdpHGfY-">在 src 根目录下建立 log4j.properties，根据自己的需求，相应的修改其中的配置，其内容如下所示：</p><div class="highlight"><pre><code class="language-text">#配置根Logger
    #改代码表示输输出info级别以上的日志，文件分别输出，一个是file，一个是error
    log4j.rootLogger=info,file,error

    #配置file日志信息输出目的地Appender
    #定义名为file的输出端是每天产生一个日志文件
    log4j.appender.file=org.apache.log4j.DailyRollingFileAppender
    #指定日志信息的最低输出级别位INFO，默认为DEBUG。
    log4j.appender.file.Threshold=INFO
    #指定当前消息输出到jpm/log4j/log.log文件中
    log4j.appender.file.File=/jpm/log4j/log.log
    #指定按天来滚动日志文件
    log4j.appender.file.DatePattern=yyyy-MM-dd
    #配置日志信息的格式（布局）Layout是可以灵活地指定布局模式
    log4j.appender.file.layout=org.apache.log4j.PatternLayout
    #格式化日志，Log4j采用类似C语言中的printf函数的打印格式格式化日志信息
    log4j.appender.file.layout.ConversionPattern=[%d{yyyy-MM-ddHH:mm:ss}][%-5p][jpm-%c{1}-%M(%L)]-%m%n
    #指定输出信息的编码
    log4j.appender.file.encoding=UTF-8

    #配置error日志信息输出目的地Appender
    #定义名为error的输出端是每天产生一个日志文件
    log4j.appender.error=org.apache.log4j.DailyRollingFileAppender
    #指定日志信息的最低输出级别位ERROR，默认为DEBUG。
    log4j.appender.error.Threshold=ERROR
    #指定当前消息输出到jpm/log4j/error.log文件中
    log4j.appender.error.File=/jpm/log4j/error.log
    #指定按月来滚动日志文件
    log4j.appender.error.DatePattern=yyyy-MM
    #配置日志信息的格式（布局）Layout是可以灵活地指定布局模式
    log4j.appender.error.layout=org.apache.log4j.PatternLayout
    #格式化日志，Log4j采用类似C语言中的printf函数的打印格式格式化日志信息
    log4j.appender.error.layout.ConversionPattern=[%d{yyyy-MM-ddHH:mm:ss}][%-5p][jpm-%c{1}-%M(%L)]-%m%n
    #指定输出信息的编码
    log4j.appender.error.encoding=UTF-8

    #使某个功能的日志单独输出到指定的日志文件
    log4j.logger.saveUserLog=INFO,saveUserLog
    #该配置就是让job的日志只输出到自己指定的日志文件中,表示Logger不会在父Logger的appender里输出，默认为true。
    log4j.additivity.saveUserLog=false
    log4j.appender.saveUserLog=org.apache.log4j.DailyRollingFileAppender
    log4j.appender.saveUserLog.File=/jpm/log4j/saveUserLog.log
    log4j.appender.saveUserLog.DatePattern=yyyy-MM-dd
    log4j.appender.saveUserLog.Append=true
    log4j.appender.saveUserLog.layout=org.apache.log4j.PatternLayout
    log4j.appender.saveUserLog.layout.ConversionPattern=%m%n
    log4j.appender.error.encoding=UTF-8</code></pre></div><p data-pid="n0YZDvPL"><b>（3）输出日志的代码示例</b></p><div class="highlight"><pre><code class="language-text">package jpm;

    import org.apache.log4j.Logger;

    public class TestLog4j {

        public static void main(String[] args) {
            final Logger logger = Logger.getLogger(TestLog4j.class);
            final Logger saveUserLog = Logger.getLogger(&#34;saveUserLog&#34;);

            if (logger.isDebugEnabled()) {
                logger.debug(&#34;debug&#34;);
            }

            logger.info(&#34;info&#34;);
            logger.error(&#34;error&#34;);

            saveUserLog.info(&#34;张三,男,26岁,北京大学,2018-05-19,学霸&#34;);

        }

    }</code></pre></div><p data-pid="qbGldGJG"><b>（4）以上代码示例生成的日志文件及日志详情</b></p><p class="ztext-empty-paragraph"><br/></p><figure data-size="normal"><noscript><img src="https://pic1.zhimg.com/v2-a8903ca4a3d5f97a1d696998fc00e150_b.jpg" data-caption="" data-size="small" data-rawwidth="254" data-rawheight="73" class="content_image" width="254"/></noscript><img src="data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;254&#39; height=&#39;73&#39;&gt;&lt;/svg&gt;" data-caption="" data-size="small" data-rawwidth="254" data-rawheight="73" class="content_image lazy" width="254" data-actualsrc="https://pic1.zhimg.com/v2-a8903ca4a3d5f97a1d696998fc00e150_b.jpg" data-original-token="v2-199db3607171c7a88f5f3497ad9c73ae"/></figure><p class="ztext-empty-paragraph"><br/></p><p class="ztext-empty-paragraph"><br/></p><figure data-size="normal"><noscript><img src="https://pic1.zhimg.com/v2-28c0f94b7a08b1d3526714e7f53f83c4_b.jpg" data-caption="" data-size="normal" data-rawwidth="631" data-rawheight="108" class="origin_image zh-lightbox-thumb" width="631" data-original="https://pic1.zhimg.com/v2-28c0f94b7a08b1d3526714e7f53f83c4_r.jpg"/></noscript><img src="data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;631&#39; height=&#39;108&#39;&gt;&lt;/svg&gt;" data-caption="" data-size="normal" data-rawwidth="631" data-rawheight="108" class="origin_image zh-lightbox-thumb lazy" width="631" data-original="https://pic1.zhimg.com/v2-28c0f94b7a08b1d3526714e7f53f83c4_r.jpg" data-actualsrc="https://pic1.zhimg.com/v2-28c0f94b7a08b1d3526714e7f53f83c4_b.jpg" data-original-token="v2-7f50ae0866ec53599ae4c689cfa4f96e"/></figure><p class="ztext-empty-paragraph"><br/></p><h3>2. JUL（在 java.util.logging 包下）使用示例</h3><h3><b>JUL 介绍</b></h3><p data-pid="BzR6rWVp">Java Logging API 是 Sun 公司于 2002 年 5 月正式发布的。它是自 J2SE 1.4 版本开始提供的一个新的应用程序接口，需 JDK1.4 版本以上才能支持，java.util.logging.* 包是 JDK 的日志记录 API。</p><p class="ztext-empty-paragraph"><br/></p><figure data-size="normal"><noscript><img src="https://pic2.zhimg.com/v2-66266d98c49b4d310d53694cfdc74b01_b.jpg" data-caption="" data-size="normal" data-rawwidth="1104" data-rawheight="484" class="origin_image zh-lightbox-thumb" width="1104" data-original="https://pic2.zhimg.com/v2-66266d98c49b4d310d53694cfdc74b01_r.jpg"/></noscript><img src="data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1104&#39; height=&#39;484&#39;&gt;&lt;/svg&gt;" data-caption="" data-size="normal" data-rawwidth="1104" data-rawheight="484" class="origin_image zh-lightbox-thumb lazy" width="1104" data-original="https://pic2.zhimg.com/v2-66266d98c49b4d310d53694cfdc74b01_r.jpg" data-actualsrc="https://pic2.zhimg.com/v2-66266d98c49b4d310d53694cfdc74b01_b.jpg" data-original-token="v2-8d87534ecc6379f1bb85be2b597f5db2"/></figure><p class="ztext-empty-paragraph"><br/></p><p data-pid="MJ7Uv75_"><b>强烈不推荐使用 java.util.logging 记录日志，因此这里不提供对应示例给大家。</b></p><h3>3. java common logging 介绍</h3><p data-pid="p9OE31lh">commons-logging 提供的是一个日志接口，是为那些需要建立在不同环境下使用不同日志架构的组件或库的开发者创建的，其中包括 log4j 以及 Java log 的日志架构。commons-logging 有两个基本的抽象类：Log(基本记录器) 和 LogFactory(负责创建 Log 实例)。把日志信息抽象成 commons-logging 的 Log 接口，并由 commons-logging 在运行时决定使用哪种日志架构。因为 Log4j 的强大功能，commons-logging 一般会和 Log4j 一起使用，这几乎成为了 Java 日志的标准工具。</p><h3>4. SLF4J介绍</h3><p data-pid="dtXIIXuR">SLF4J 全称为 Simple Logging Facade for JAVA，即 java 简单日志门面。 和 commons-loging 一样也是对不同日志框架提供的一个门面封装，可以在部署的时候不修改任何配置即可接入一种日志实现方案，能支持多个参数，并通过 {} 占位符进行替换。</p><p data-pid="vAZjpGwA"><b>看这个 Log4J 示例：</b></p><div class="highlight"><pre><code class="language-text">Logger.debug(&#34;Hello &#34; + name);</code></pre></div><p data-pid="hUddtB1m">由于字符串拼接的问题（注：上述语句会先拼接字符串，再根据当前级别是否低于 debug 决定是否输出本条日志，即使不输出日志，字符串拼接操作也会执行），因此许多公司一般强制使用下面的语句，这样只有当前处于DEBUG级别时才会执行字符串拼接：</p><div class="highlight"><pre><code class="language-text">if (logger.isDebugEnabled()) {
        LOGGER.debug(“Hello ” + name);
    }</code></pre></div><p data-pid="m6r7XPtt">它避免了字符串拼接问题，可是有点太繁琐了。而 SLF4J 提供下面这样简单的语法:</p><div class="highlight"><pre><code class="language-text">LOGGER.debug(&#34;Hello {}&#34;, name);</code></pre></div><p data-pid="0PCr6ZX2">它的形式类似第一条示例，但是又没有字符串拼接问题，也不像第二条那样繁琐。</p><p data-pid="MYp8Pw_Z">正是因为 SLF4J 的这个占位符功能，使得人们越来越多的使用 SLF4J 这个接口用到实际开发项目中。</p><p data-pid="8KKc5s4B"><b>为什么需要日志接口，直接使用具体的实现不就行了吗？</b></p><p data-pid="n38c-yJI">接口用于定制规范，可以有多个实现，使用时是面向接口的（导入的包都是 SLF4J 的包或者是 JCL 的包，而不是具体某个日志框架中的包），即直接和接口交互，不直接使用实现，所以当需要更换实现的时候，直接更换实就可以了，而不用更改代码中的日志相关代码。</p><p data-pid="jqyBR6Cr">比如：SLF4J 定义了一套日志接口，项目中使用的日志框架是 log4j，开发中调用的所有接口都是 SLF4J 的，不直接使用 log4j，项目应用调用 SLF4J 的接口，SLF4J 的接口去调用 log4j 的实现，整个应用程序并没有直接使用 log4j，当项目需要更换更加优秀的日志框架时（如 logback）只需要引入 logback 的 jar 和 logback 对应的配置文件即可，完全不用更改 Java 代码中的日志相关的代码 <a href="https://link.zhihu.com/?target=http%3A//logger.info" class=" external" target="_blank" rel="nofollow noreferrer"><span class="invisible">http://</span><span class="visible">logger.info</span><span class="invisible"></span></a>(“hello world”)，也不用修改日志相关的类的导入的包（import org.slf4j.Logger; import org.slf4j.LoggerFactory;）。</p><p data-pid="PpM7GiNI">因此日志门面的使用，为后续具体日志系统的实现更换带来了方便。</p><h3>5. logback 使用示例</h3><h3><b>LogBack 介绍</b></h3><p data-pid="Vw4mJ5uw">LogBack 和 Log4j 都是开源日记工具库，LogBack 是 Log4j 的改良版本，比 Log4j 拥有更多的特性，同时也带来很大性能提升。LogBack 官方建议配合 Slf4j 使用，这样可以灵活地替换底层日志框架。</p><p data-pid="vOI4RIaF">Logback 主要由三个模块组成：</p><ul><li data-pid="Tn81oR5U">logback-core</li><li data-pid="6v3N7aLy">logback-classic</li><li data-pid="TqPkf2mB">logback-access</li></ul><p data-pid="WnsAUXFV">其中 logback-core 提供了 LogBack 的核心功能，是另外两个组件的基础。logback-classic 的地位和作用等同于 Log4J，它也被认为是 Log4J 的一个改进版，并且它实现了简单日志门面 SLF4J，所以当想配合 SLF4J 使用时，需要将 logback-classic 加入 classpath；而 logback-access 主要作为一个与 Servlet 容器交互的模块，比如说 tomcat 或者 jetty，提供一些与 HTTP 访问相关的功能。</p><h3><b>logback 使用步骤说明</b></h3><p data-pid="j4ONvIMn"><b>（1）选择 jar 包</b></p><p data-pid="WZIhjbwM">想在 Java 程序中使用 Logback，需要依赖三个 jar 包，分别是 slf4j-api，logback-core，logback-classic。其中 slf4j-api 并不是 Logback 的一部分，建议将 SLF4J 与 Logback 结合使用。</p><p data-pid="w3KHOOQ-"><b>pom.xml</b></p><div class="highlight"><pre><code class="language-text">&lt;dependency&gt;
                &lt;groupId&gt;org.slf4j&lt;/groupId&gt;
                &lt;artifactId&gt;slf4j-api&lt;/artifactId&gt;
                &lt;version&gt;1.7.25&lt;/version&gt;
            &lt;/dependency&gt;

            &lt;dependency&gt;
                &lt;groupId&gt;ch.qos.logback&lt;/groupId&gt;
                &lt;artifactId&gt;logback-core&lt;/artifactId&gt;
                &lt;version&gt;1.2.3&lt;/version&gt;
            &lt;/dependency&gt;

            &lt;dependency&gt;
                &lt;groupId&gt;ch.qos.logback&lt;/groupId&gt;
                &lt;artifactId&gt;logback-classic&lt;/artifactId&gt;
                &lt;version&gt;1.2.3&lt;/version&gt;
            &lt;/dependency&gt;

            &lt;dependency&gt;
                &lt;groupId&gt;ch.qos.logback&lt;/groupId&gt;
                &lt;artifactId&gt;logback-access&lt;/artifactId&gt;
                &lt;version&gt;1.2.3&lt;/version&gt;
            &lt;/dependency&gt;</code></pre></div><p data-pid="pghg1g6x"><b>（2）logback.xml</b></p><p data-pid="yiwngQml">在 src 根目录下建立 logback.xml，根据自己的需求，相应的修改其中的配置，其内容如下所示：</p><div class="highlight"><pre><code class="language-text">&lt;?xml version=&#34;1.0&#34; encoding=&#34;UTF-8&#34;?&gt;
    &lt;!--日志级别以及优先级排序: OFF &gt; FATAL &gt; ERROR &gt; WARN &gt; INFO &gt; DEBUG &gt; TRACE &gt; ALL --&gt;
    &lt;!-- status用来指定log4j本身的打印日志的级别 --&gt;
    &lt;!--monitorInterval：Log4j能够自动检测修改配置文件和重新配置本身，设置间隔秒数 --&gt;
    &lt;configuration status=&#34;WARN&#34; monitorInterval=&#34;30&#34;&gt;
        &lt;!--先定义所有的appender --&gt;
        &lt;appenders&gt;
            &lt;!--这个输出控制台的配置 --&gt;
            &lt;console name=&#34;Console&#34; target=&#34;SYSTEM_OUT&#34;&gt;
                &lt;!--输出日志的格式 --&gt;
                &lt;PatternLayout
                    pattern=&#34;[%d{yyyy-MM-dd HH:mm:ss.SSS}] [%-5level] %l %logger{36} - %msg%n&#34; /&gt;
            &lt;/console&gt;

            &lt;!--定义输出到指定位置的文件 --&gt;
            &lt;File name=&#34;log&#34; fileName=&#34;/jpm/log4j2/logs/log.log&#34; append=&#34;true&#34;&gt;
                &lt;PatternLayout
                    pattern=&#34;[%d{yyyy-MM-dd HH:mm:ss.SSS}] [%-5level] %l %logger{36} - %msg%n&#34; /&gt;
            &lt;/File&gt;

            &lt;!-- 这个会打印出所有的info及以下级别的信息，每次大小超过size，则这size大小的日志会自动存入按年份-月份建立的文件夹下面并进行压缩，作为存档 --&gt;
            &lt;RollingFile name=&#34;RollingFileInfo&#34; fileName=&#34;/jpm/log4j2/logs/info.log&#34;
                filePattern=&#34;/jpm/log4j2/logs/$${date:yyyy-MM}/info-%d{yyyy-MM-dd}-%i.log&#34;&gt;
                &lt;!--控制台只输出level及以上级别的信息（onMatch），其他的直接拒绝（onMismatch） --&gt;
                &lt;!-- DENY，日志将立即被抛弃不再经过其他过滤器； NEUTRAL，有序列表里的下个过滤器过接着处理日志； ACCEPT，日志会被立即处理，不再经过剩余过滤器。 --&gt;
                &lt;ThresholdFilter level=&#34;error&#34; onMatch=&#34;DENY&#34;
                    onMismatch=&#34;ACCEPT&#34; /&gt;
                &lt;PatternLayout
                    pattern=&#34;[%d{yyyy-MM-dd HH:mm:ss.SSS}] [%-5level] %l %logger{36} - %msg%n&#34; /&gt;
                &lt;Policies&gt;
                    &lt;TimeBasedTriggeringPolicy /&gt;
                    &lt;SizeBasedTriggeringPolicy size=&#34;100 MB&#34; /&gt;
                &lt;/Policies&gt;
                &lt;!-- DefaultRolloverStrategy属性如不设置，则默认为最多同一文件夹下7个文件，这里设置了30 --&gt;
                &lt;DefaultRolloverStrategy max=&#34;30&#34; /&gt;
            &lt;/RollingFile&gt;

            &lt;RollingFile name=&#34;RollingFileError&#34; fileName=&#34;/jpm/log4j2/logs/error.log&#34;
                filePattern=&#34;/jpm/log4j2/logs/$${date:yyyy-MM}/error-%d{yyyy-MM-dd}-%i.log&#34;&gt;
                &lt;ThresholdFilter level=&#34;ERROR&#34; onMatch=&#34;ACCEPT&#34;
                    onMismatch=&#34;DENY&#34; /&gt;
                &lt;PatternLayout
                    pattern=&#34;[%d{yyyy-MM-dd HH:mm:ss.SSS}] [%-5level] %l %logger{36} - %msg%n&#34; /&gt;
                &lt;Policies&gt;
                    &lt;TimeBasedTriggeringPolicy /&gt;
                    &lt;SizeBasedTriggeringPolicy size=&#34;100 MB&#34; /&gt;
                &lt;/Policies&gt;
            &lt;/RollingFile&gt;
        &lt;/appenders&gt;

        &lt;!--只有定义了logger并引入的appender，appender才会生效 --&gt;
        &lt;loggers&gt;
            &lt;!--过滤掉spring和mybatis的一些无用的DEBUG信息 --&gt;
            &lt;logger name=&#34;org.springframework&#34; level=&#34;INFO&#34;&gt;&lt;/logger&gt;
            &lt;logger name=&#34;org.mybatis&#34; level=&#34;INFO&#34;&gt;&lt;/logger&gt;
            &lt;root level=&#34;INFO&#34;&gt;
                &lt;appender-ref ref=&#34;Console&#34; /&gt;
                &lt;appender-ref ref=&#34;log&#34; /&gt;
                &lt;appender-ref ref=&#34;RollingFileInfo&#34; /&gt;
                &lt;appender-ref ref=&#34;RollingFileError&#34; /&gt;
            &lt;/root&gt;
        &lt;/loggers&gt;

    &lt;/configuration&gt;</code></pre></div><p data-pid="18gnLKmD"><b>（3）输出日志的代码示例</b></p><div class="highlight"><pre><code class="language-text">package jpm.logback;

    import org.slf4j.Logger;
    import org.slf4j.LoggerFactory;

    public class TestLogback {

        public static void main(String[] args) {
            final Logger LOGGER = LoggerFactory.getLogger(TestLogback.class);
            LOGGER.debug(&#34;print debug log.&#34;);
            LOGGER.info(&#34;print info log.&#34;);
            LOGGER.error(&#34;print error log.&#34;);
        }
    }</code></pre></div><p data-pid="AwKc2f-P"><b>（4）打印日志结果</b></p><p class="ztext-empty-paragraph"><br/></p><figure data-size="normal"><noscript><img src="https://pic3.zhimg.com/v2-e5cf7e342e2821235428d3f1c33a7cd2_b.jpg" data-caption="" data-size="small" data-rawwidth="338" data-rawheight="255" class="content_image" width="338"/></noscript><img src="data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;338&#39; height=&#39;255&#39;&gt;&lt;/svg&gt;" data-caption="" data-size="small" data-rawwidth="338" data-rawheight="255" class="content_image lazy" width="338" data-actualsrc="https://pic3.zhimg.com/v2-e5cf7e342e2821235428d3f1c33a7cd2_b.jpg" data-original-token="v2-5cc1516a4916238ca0493196a8decbe2"/></figure><p class="ztext-empty-paragraph"><br/></p><p class="ztext-empty-paragraph"><br/></p><figure data-size="normal"><noscript><img src="https://pic3.zhimg.com/v2-9c2ceb4f73b1771b0fde829117e9d33a_b.jpg" data-caption="" data-size="normal" data-rawwidth="1168" data-rawheight="314" class="origin_image zh-lightbox-thumb" width="1168" data-original="https://pic3.zhimg.com/v2-9c2ceb4f73b1771b0fde829117e9d33a_r.jpg"/></noscript><img src="data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1168&#39; height=&#39;314&#39;&gt;&lt;/svg&gt;" data-caption="" data-size="normal" data-rawwidth="1168" data-rawheight="314" class="origin_image zh-lightbox-thumb lazy" width="1168" data-original="https://pic3.zhimg.com/v2-9c2ceb4f73b1771b0fde829117e9d33a_r.jpg" data-actualsrc="https://pic3.zhimg.com/v2-9c2ceb4f73b1771b0fde829117e9d33a_b.jpg" data-original-token="v2-3cc36fec5603b3d5658e8f0c52e575f1"/></figure><p class="ztext-empty-paragraph"><br/></p><p data-pid="YP7oIiEC"><b>上例使用 SLF4J 做日志接口， logback 做日志实现的日志示例</b></p><h3>6. Log4j2 使用示例</h3><h3><b>Log4j2 介绍</b></h3><p data-pid="qbXjENwG">Apache Log4j 2 是对 Log4j 的升级，与其前身 Log4j 1.x 相比有了显着的改进，并提供了许多 Logback 可用的改进，同时支持 JCL 以及 SLF4J。</p><h3><b>Log4j2 使用步骤说明</b></h3><p data-pid="RUVMCFbr"><b>（1）选择 jar 包</b></p><p data-pid="D_y8PHFn">引入 Log4j2 必要的包：log4j-api、log4j-core。</p><p data-pid="mAypDL12"><b>pom.xml 配置</b></p><div class="highlight"><pre><code class="language-text">&lt;dependency&gt;
                &lt;groupId&gt;org.apache.logging.log4j&lt;/groupId&gt;
                &lt;artifactId&gt;log4j-api&lt;/artifactId&gt;
                &lt;version&gt;2.8.2&lt;/version&gt;
            &lt;/dependency&gt;

            &lt;dependency&gt;
                &lt;groupId&gt;org.apache.logging.log4j&lt;/groupId&gt;
                &lt;artifactId&gt;log4j-core&lt;/artifactId&gt;
                &lt;version&gt;2.8.2&lt;/version&gt;
            &lt;/dependency&gt;</code></pre></div><p data-pid="DTmtl0fR"><b>（2）log2j 配置文件：log4j2.xml</b></p><div class="highlight"><pre><code class="language-text">&lt;?xml version=&#34;1.0&#34; encoding=&#34;UTF-8&#34;?&gt;
    &lt;!--日志级别以及优先级排序: OFF &gt; FATAL &gt; ERROR &gt; WARN &gt; INFO &gt; DEBUG &gt; TRACE &gt; ALL --&gt;
    &lt;!-- status用来指定Log4j本身的打印日志的级别 --&gt;
    &lt;!--monitorInterval：Log4j能够自动检测修改配置文件和重新配置本身，设置间隔秒数 --&gt;
    &lt;configuration status=&#34;WARN&#34; monitorInterval=&#34;30&#34;&gt;
        &lt;!--先定义所有的appender --&gt;
        &lt;appenders&gt;
            &lt;!--这个输出控制台的配置 --&gt;
            &lt;console name=&#34;Console&#34; target=&#34;SYSTEM_OUT&#34;&gt;
                &lt;!--输出日志的格式 --&gt;
                &lt;PatternLayout
                    pattern=&#34;[%d{yyyy-MM-dd HH:mm:ss.SSS}] [%-5level] %l %logger{36} - %msg%n&#34; /&gt;
            &lt;/console&gt;

            &lt;!--定义输出到指定位置的文件 --&gt;
            &lt;File name=&#34;log&#34; fileName=&#34;/jpm/log4j2/logs/log.log&#34; append=&#34;true&#34;&gt;
                &lt;PatternLayout
                    pattern=&#34;[%d{yyyy-MM-dd HH:mm:ss.SSS}] [%-5level] %l %logger{36} - %msg%n&#34; /&gt;
            &lt;/File&gt;

            &lt;!-- 这个会打印出所有的info及以下级别的信息，每次大小超过size，则这size大小的日志会自动存入按年份-月份建立的文件夹下面并进行压缩，作为存档 --&gt;
            &lt;RollingFile name=&#34;RollingFileInfo&#34; fileName=&#34;/jpm/log4j2/logs/info.log&#34;
                filePattern=&#34;/jpm/log4j2/logs/$${date:yyyy-MM}/info-%d{yyyy-MM-dd}-%i.log&#34;&gt;
                &lt;!--控制台只输出level及以上级别的信息（onMatch），其他的直接拒绝（onMismatch） --&gt;
                &lt;ThresholdFilter level=&#34;info&#34; onMatch=&#34;ACCEPT&#34;
                    onMismatch=&#34;DENY&#34; /&gt;
                &lt;PatternLayout
                    pattern=&#34;[%d{yyyy-MM-dd HH:mm:ss.SSS}] [%-5level] %l %logger{36} - %msg%n&#34; /&gt;
                &lt;Policies&gt;
                    &lt;TimeBasedTriggeringPolicy /&gt;
                    &lt;SizeBasedTriggeringPolicy size=&#34;100 MB&#34; /&gt;
                &lt;/Policies&gt;
                &lt;!-- DefaultRolloverStrategy属性如不设置，则默认为最多同一文件夹下7个文件，这里设置了30 --&gt;
                &lt;DefaultRolloverStrategy max=&#34;30&#34; /&gt;
            &lt;/RollingFile&gt;

            &lt;RollingFile name=&#34;RollingFileError&#34; fileName=&#34;/jpm/log4j2/logs/error.log&#34;
                filePattern=&#34;/jpm/log4j2/logs/$${date:yyyy-MM}/error-%d{yyyy-MM-dd}-%i.log&#34;&gt;
                &lt;ThresholdFilter level=&#34;error&#34; onMatch=&#34;ACCEPT&#34;
                    onMismatch=&#34;DENY&#34; /&gt;
                &lt;PatternLayout
                    pattern=&#34;[%d{yyyy-MM-dd HH:mm:ss.SSS}] [%-5level] %l %logger{36} - %msg%n&#34; /&gt;
                &lt;Policies&gt;
                    &lt;TimeBasedTriggeringPolicy /&gt;
                    &lt;SizeBasedTriggeringPolicy size=&#34;100 MB&#34; /&gt;
                &lt;/Policies&gt;
            &lt;/RollingFile&gt;
        &lt;/appenders&gt;

        &lt;!--只有定义了logger并引入的appender，appender才会生效 --&gt;
        &lt;loggers&gt;
            &lt;!--过滤掉spring和mybatis的一些无用的DEBUG信息 --&gt;
            &lt;logger name=&#34;org.springframework&#34; level=&#34;INFO&#34;&gt;&lt;/logger&gt;
            &lt;logger name=&#34;org.mybatis&#34; level=&#34;INFO&#34;&gt;&lt;/logger&gt;
            &lt;root level=&#34;INFO&#34;&gt;
                &lt;appender-ref ref=&#34;Console&#34; /&gt;
                &lt;appender-ref ref=&#34;log&#34; /&gt;
                &lt;appender-ref ref=&#34;RollingFileInfo&#34; /&gt;
                &lt;appender-ref ref=&#34;RollingFileError&#34; /&gt;
            &lt;/root&gt;
        &lt;/loggers&gt;

    &lt;/configuration&gt;</code></pre></div><p data-pid="X0Jhmt9h"><b>（3）输出日志的代码示例</b></p><div class="highlight"><pre><code class="language-text">package jpm.log4j2;

    import org.apache.logging.log4j.LogManager;
    import org.apache.logging.log4j.Logger;

    public class TestLog4j2 {

        public static void main(String[] args) {
            final Logger LOGGER = LogManager.getLogger(LogManager.ROOT_LOGGER_NAME);
            LOGGER.debug(&#34;TestLog4j2 debug log.&#34;);
            LOGGER.info(&#34;TestLog4j2 info log.&#34;);
            LOGGER.error(&#34;TestLog4j2 error log.&#34;);
        }

    }</code></pre></div><p data-pid="GBzGl2Rd"><b>（4）打印日志结果</b></p><p class="ztext-empty-paragraph"><br/></p><figure data-size="normal"><noscript><img src="https://pic1.zhimg.com/v2-be11d8203d8c529c9a9020a05967bdf8_b.jpg" data-caption="" data-size="normal" data-rawwidth="366" data-rawheight="171" class="content_image" width="366"/></noscript><img src="data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;366&#39; height=&#39;171&#39;&gt;&lt;/svg&gt;" data-caption="" data-size="normal" data-rawwidth="366" data-rawheight="171" class="content_image lazy" width="366" data-actualsrc="https://pic1.zhimg.com/v2-be11d8203d8c529c9a9020a05967bdf8_b.jpg" data-original-token="v2-be16b2bf1109c921b6421c84fbaf3e83"/></figure><p class="ztext-empty-paragraph"><br/></p><p class="ztext-empty-paragraph"><br/></p><figure data-size="normal"><noscript><img src="https://pic1.zhimg.com/v2-2f11d92ede4c1418d88ca05e481cf044_b.jpg" data-caption="" data-size="normal" data-rawwidth="1179" data-rawheight="343" class="origin_image zh-lightbox-thumb" width="1179" data-original="https://pic1.zhimg.com/v2-2f11d92ede4c1418d88ca05e481cf044_r.jpg"/></noscript><img src="data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;1179&#39; height=&#39;343&#39;&gt;&lt;/svg&gt;" data-caption="" data-size="normal" data-rawwidth="1179" data-rawheight="343" class="origin_image zh-lightbox-thumb lazy" width="1179" data-original="https://pic1.zhimg.com/v2-2f11d92ede4c1418d88ca05e481cf044_r.jpg" data-actualsrc="https://pic1.zhimg.com/v2-2f11d92ede4c1418d88ca05e481cf044_b.jpg" data-original-token="v2-30e71e8b8c7d22f21d3d8686f60b81b0"/></figure><p class="ztext-empty-paragraph"><br/></p><p data-pid="Mg8xR8bt"><b>（5）关于日志 level</b></p><p data-pid="pO9DnYrW">共有 8 个级别，按照从低到高为：All &lt; Trace &lt; Debug &lt; Info &lt; Warn &lt; Error &lt; Fatal &lt; OFF。</p><ul><li data-pid="nS-XPENT"><b>All：</b>最低等级的，用于打开所有日志记录</li><li data-pid="E7mcTKWg"><b>Trace：</b>是追踪，就是程序推进以下，你就可以写个 trace 输出，所以 trace 应该会特别多，不过没关系，我们可以设置最低日志级别不让他输出</li><li data-pid="_POvZzVl"><b>Debug：</b>指出细粒度信息事件对调试应用程序是非常有帮助的</li><li data-pid="94qftXEK"><b>Info：</b>消息在粗粒度级别上突出强调应用程序的运行过程</li><li data-pid="DCybVhUR"><b>Warn：</b>输出警告及 warn 以下级别的日志</li><li data-pid="92OjdKRM"><b>Error：</b>输出错误信息日志</li><li data-pid="6H9VaXAl"><b>Fatal：</b>输出每个严重的错误事件将会导致应用程序的退出的日志</li><li data-pid="B4ODx4rP"><b>OFF：</b>最高等级的，用于关闭所有日志记录</li></ul><p data-pid="22x0_qio">程序会打印高于或等于所设置级别的日志，设置的日志等级越高，打印出来的日志就越少。</p><h3>7. JCL(java common logging) + Log4j 使用示例</h3><h3><b>JCL(java common logging) + Log4j 介绍</b></h3><p data-pid="FWWWdmp5">使用 commons-logging 的 Log 接口，并由 commons-logging 在运行时决定使用哪种日志架构（如 Log4j）。现在，Apache 通用日志工具 commons-logging 和 Log4j 已经成为 Java 日志的标准工具，这个组合是比较常用的一个日志框架组合。</p><h3><b>JCL(java common logging) + Log4j 使用步骤说明</b></h3><p data-pid="K_4AzMd3"><b>（1）选择 jar 包</b></p><div class="highlight"><pre><code class="language-text">commons-logging-1.2 + log4j1.2.17</code></pre></div><p data-pid="4xYS5L_3"><b>pom.xml</b></p><div class="highlight"><pre><code class="language-text">&lt;dependency&gt;
                &lt;groupId&gt;commons-logging&lt;/groupId&gt;
                &lt;artifactId&gt;commons-logging&lt;/artifactId&gt;
                &lt;version&gt;1.2&lt;/version&gt;
            &lt;/dependency&gt;

            &lt;dependency&gt;
                &lt;groupId&gt;log4j&lt;/groupId&gt;
                &lt;artifactId&gt;log4j&lt;/artifactId&gt;
                &lt;version&gt;1.2.17&lt;/version&gt;
            &lt;/dependency&gt;</code></pre></div><p data-pid="8tfbgOXS"><b>（2）配置 common-logging.properties 文件</b></p><p data-pid="XXRICk28">只需要一行即可，放在 classpath 下，如果是 Maven 中就在 src/resources 下，不过如果没有 common-logging.properties 文件，但是 src 下有 log4j.properties 配置也可以正常的输出 Log4j 设置的日志。</p><div class="highlight"><pre><code class="language-text">org.apache.commons.logging.Log=org.apache.commons.logging.impl.Log4JLogger</code></pre></div><p data-pid="a3nnDuw8"><b>（3）log4j.properties 配置</b></p><p data-pid="HBSLz81_">参考《Log4j 使用步骤说明》</p><p data-pid="jfQ2ng39"><b>（4）输出日志的代码示例</b></p><div class="highlight"><pre><code class="language-text">package jpm.jcllog4j;

    import org.apache.commons.logging.Log;
    import org.apache.commons.logging.LogFactory;

    public class TestJclAndLog4j {

        public static void main(String[] args) {
            final Log LOGGER = LogFactory.getLog(TestJclAndLog4j.class);
            LOGGER.debug(&#34;TestJclAndLog4j debug log.&#34;);
            LOGGER.info(&#34;TestJclAndLog4j info log.&#34;);
            LOGGER.error(&#34;TestJclAndLog4j error log.&#34;);
        }
    }</code></pre></div><p data-pid="BZ7_7H3F"><b>（5）打印日志结果</b></p><p class="ztext-empty-paragraph"><br/></p><figure data-size="normal"><noscript><img src="https://pic2.zhimg.com/v2-953e2376a2fac3d9af730ceb2ca40a81_b.jpg" data-caption="" data-size="normal" data-rawwidth="354" data-rawheight="162" class="content_image" width="354"/></noscript><img src="data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;354&#39; height=&#39;162&#39;&gt;&lt;/svg&gt;" data-caption="" data-size="normal" data-rawwidth="354" data-rawheight="162" class="content_image lazy" width="354" data-actualsrc="https://pic2.zhimg.com/v2-953e2376a2fac3d9af730ceb2ca40a81_b.jpg" data-original-token="v2-64c9de4d1cd1896e0bd079ef0bc007c7"/></figure><p class="ztext-empty-paragraph"><br/></p><p class="ztext-empty-paragraph"><br/></p><figure data-size="normal"><noscript><img src="https://pic1.zhimg.com/v2-f3927da8d2998d641730acb45ca0cf0c_b.jpg" data-caption="" data-size="normal" data-rawwidth="701" data-rawheight="309" class="origin_image zh-lightbox-thumb" width="701" data-original="https://pic1.zhimg.com/v2-f3927da8d2998d641730acb45ca0cf0c_r.jpg"/></noscript><img src="data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;701&#39; height=&#39;309&#39;&gt;&lt;/svg&gt;" data-caption="" data-size="normal" data-rawwidth="701" data-rawheight="309" class="origin_image zh-lightbox-thumb lazy" width="701" data-original="https://pic1.zhimg.com/v2-f3927da8d2998d641730acb45ca0cf0c_r.jpg" data-actualsrc="https://pic1.zhimg.com/v2-f3927da8d2998d641730acb45ca0cf0c_b.jpg" data-original-token="v2-5e272fe974c5ada5ff9795a19688643d"/></figure><p class="ztext-empty-paragraph"><br/></p><h3>8. SLF4J + Log4j 使用示例</h3><h3><b>SLF4J + Log4j 介绍</b></h3><p data-pid="_Arpl6Fx">SLF4j+Log4j 与 JCL+Log4J 的使用方式差不多，主要差异就在 SLF4J 用 用绑定包（slf4j-Log4j12.jar）来告知用哪种日志实现，而 JCL 是通过配置文件来获得该选择哪个日志实现。</p><h3><b>SLF4J + Log4j使用步骤说明</b></h3><p data-pid="pCOwzoCF"><b>（1）选择jar包</b></p><div class="highlight"><pre><code class="language-text">slf4j-api.jar + slf4j-log4j12.jar</code></pre></div><p data-pid="sBTDkNye"><b>pom.xml</b></p><div class="highlight"><pre><code class="language-text">&lt;dependency&gt;
                &lt;groupId&gt;org.slf4j&lt;/groupId&gt;
                &lt;artifactId&gt;slf4j-api&lt;/artifactId&gt;
                &lt;version&gt;1.7.25&lt;/version&gt;
            &lt;/dependency&gt;

            &lt;dependency&gt;
                &lt;groupId&gt;org.slf4j&lt;/groupId&gt;
                &lt;artifactId&gt;slf4j-log4j12&lt;/artifactId&gt;
                &lt;version&gt;1.7.25&lt;/version&gt;
            &lt;/dependency&gt;</code></pre></div><p data-pid="NdWjy1fK"><b>（2）log4j.properties 配置文件</b></p><p data-pid="aWuIYd0a">参考《Log4j 使用步骤说明》</p><p data-pid="y9kaCjle"><b>（3）输出日志的代码示例</b></p><div class="highlight"><pre><code class="language-text">package jpm.slf4jlog4j;

    import org.slf4j.Logger;
    import org.slf4j.LoggerFactory;

    public class TestSlf4jAndLog4j {

        public static void main(String[] args) {
            final Logger LOGGER = LoggerFactory.getLogger(TestSlf4jAndLog4j.class);
            LOGGER.debug(&#34;TestSlf4jAndLog4j debug log：{}&#34;, &#34;debug&#34;);
            LOGGER.info(&#34;TestSlf4jAndLog4j info log：{}&#34;, &#34;info&#34;);
            LOGGER.error(&#34;TestSlf4jAndLog4j error log：{}&#34;, &#34;error&#34;);
        }

    }</code></pre></div><p data-pid="paVNGwXN"><b>（4）打印日志结果</b></p><p class="ztext-empty-paragraph"><br/></p><figure data-size="normal"><noscript><img src="https://pic1.zhimg.com/v2-990aca0df5ebd71d0a29ebad5a5d6858_b.jpg" data-caption="" data-size="normal" data-rawwidth="362" data-rawheight="140" class="content_image" width="362"/></noscript><img src="data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;362&#39; height=&#39;140&#39;&gt;&lt;/svg&gt;" data-caption="" data-size="normal" data-rawwidth="362" data-rawheight="140" class="content_image lazy" width="362" data-actualsrc="https://pic1.zhimg.com/v2-990aca0df5ebd71d0a29ebad5a5d6858_b.jpg" data-original-token="v2-0f846b1f6f9593c4783a513c832f9988"/></figure><p class="ztext-empty-paragraph"><br/></p><p class="ztext-empty-paragraph"><br/></p><figure data-size="normal"><noscript><img src="https://pic1.zhimg.com/v2-25cbbac94a5b4ad99c08b6ebc3cc12f0_b.jpg" data-caption="" data-size="normal" data-rawwidth="804" data-rawheight="165" class="origin_image zh-lightbox-thumb" width="804" data-original="https://pic1.zhimg.com/v2-25cbbac94a5b4ad99c08b6ebc3cc12f0_r.jpg"/></noscript><img src="data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;804&#39; height=&#39;165&#39;&gt;&lt;/svg&gt;" data-caption="" data-size="normal" data-rawwidth="804" data-rawheight="165" class="origin_image zh-lightbox-thumb lazy" width="804" data-original="https://pic1.zhimg.com/v2-25cbbac94a5b4ad99c08b6ebc3cc12f0_r.jpg" data-actualsrc="https://pic1.zhimg.com/v2-25cbbac94a5b4ad99c08b6ebc3cc12f0_b.jpg" data-original-token="v2-d0d365a0da0baf270ca486f6419bc18b"/></figure><p class="ztext-empty-paragraph"><br/></p><h3>五、项目中日志记录遵守哪些原则</h3><h3>1. 阿里巴巴 Java 开发手册的日志规约</h3><p data-pid="dUtB9E-g">大家可以参考去年 10 月份阿里推出的《阿里巴巴 Java 开发手册（终极版）.pdf》里的第二章第二节“日志规约”部分的内容。</p><h3>2. 个人经验总结</h3><p data-pid="mNJUKxoJ">记录项目日志要注意以下几点：</p><ol><li data-pid="cHnXBMER">注意日志级别，尤其是 info 和 error 不能用混。</li><li data-pid="AbPxDLg1">注意记录信息的准确性，切记日志表达不清楚。</li><li data-pid="yhvB-o4e">注意不同的代码段日志说明不能重复。</li><li data-pid="OYgtMnkn">捕获异常后，要及时记录异常详细信息，并把异常传递到外部。</li><li data-pid="al3XMdJr">时刻铭记，日志的记录是为了后期查询问题带来方便，因此重要的代码务必要记录日志。</li></ol><h3>六、一个推荐的项目 Java 日志实例</h3><p data-pid="8P2z4_PL">经过以上代码的分析，我们项目中使用的日志一般会选用一个日志接口和一个具体的日志实现。</p><p data-pid="BELLGgSl">那么日志接口是选 JCL 呢，还是选 SLF4J 呢？下面我们把他俩做个对比，具体日志实现为 Log4j，如下图：</p><p class="ztext-empty-paragraph"><br/></p><figure data-size="normal"><noscript><img src="https://pic3.zhimg.com/v2-d80377fa8f2af3220eb3574ec4bbe8b2_b.jpg" data-caption="" data-size="normal" data-rawwidth="783" data-rawheight="471" class="origin_image zh-lightbox-thumb" width="783" data-original="https://pic3.zhimg.com/v2-d80377fa8f2af3220eb3574ec4bbe8b2_r.jpg"/></noscript><img src="data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;783&#39; height=&#39;471&#39;&gt;&lt;/svg&gt;" data-caption="" data-size="normal" data-rawwidth="783" data-rawheight="471" class="origin_image zh-lightbox-thumb lazy" width="783" data-original="https://pic3.zhimg.com/v2-d80377fa8f2af3220eb3574ec4bbe8b2_r.jpg" data-actualsrc="https://pic3.zhimg.com/v2-d80377fa8f2af3220eb3574ec4bbe8b2_b.jpg" data-original-token="v2-34026634fa0d43cf9434d4b4b3facc4c"/></figure><p class="ztext-empty-paragraph"><br/></p><p data-pid="uZNgIINl">从上图可以看出，用 slf4j 作为日志接口，对项目来说更好一些。</p><p data-pid="jlXqtZ7D">所以，在实际项目中，我一般建议使用 SLF4J+Log4j 或者 slf4j+logback。</p><p data-pid="xp1rZavR"><b>配置文件参见第四节</b></p><p data-pid="x3stdjTP"><b>推荐程序片段如下</b></p><div class="highlight"><pre><code class="language-text">try {
                LOGGER.info(&#34;根据用户编码查询用户信息-开始，userId：{}&#34; , userId);
                User user = userService.getUserById(userId);
                LOGGER.info(&#34;根据用户编码查询用户信息-结束，userId：{}&#34; , userId);
            } catch (CustomException e) {
                LOGGER.error(&#34;根据用户编码查询用户信息-自定义异常:{}&#34; , e.getMessage());
                throw new CustomException(&#34;根据用户编码查询用户信息-自定义异常{}&#34; , e.getMessage(), e);
            } catch (Exception e) {
                LOGGER.error(&#34;根据用户编码查询用户信息-捕获异常:{}&#34; , e.toString());
                throw new ServiceException(根据用户编码查询用户信息-捕获异常:{}&#34; , e.toString(), e);
            }
</code></pre></div><p data-pid="lWViCJ9n">到此，Java 日志从入门到实战  就结束了，咱们下次再见，谢谢。</p><p></p></div></div></div></div><div role="button" tabindex="0" class="ContentItem-time">发布于 2019-04-30 17:20</div><div class="Post-topicsAndReviewer"><div class="TopicList Post-Topics"><style data-emotion-css="1s3a4zw">.css-1s3a4zw{position:relative;display:inline-block;height:30px;padding:0 12px;font-size:14px;line-height:30px;color:#056DE8;vertical-align:top;border-radius:100px;background:rgba(5,109,232,0.1);}.css-1s3a4zw:hover{background-color:rgba(5,109,232,0.15);}</style><div class="Tag Topic css-1s3a4zw"><span class="Tag-content"><a class="TopicLink" href="//www.zhihu.com/topic/19561132" target="_blank"><style data-emotion-css="1xlfegr">.css-1xlfegr{background:transparent;box-shadow:none;}</style><style data-emotion-css="1gomreu">.css-1gomreu{position:relative;display:inline-block;}</style><div class="css-1gomreu">Java</div></a></span></div><div class="Tag Topic css-1s3a4zw"><span class="Tag-content"><a class="TopicLink" href="//www.zhihu.com/topic/19552330" target="_blank"><div class="css-1gomreu">程序员</div></a></span></div><div class="Tag Topic css-1s3a4zw"><span class="Tag-content"><a class="TopicLink" href="//www.zhihu.com/topic/19550517" target="_blank"><div class="css-1gomreu">互联网</div></a></span></div></div></div><div><div class="Sticky RichContent-actions is-bottom"><div class="ContentItem-actions"><span><button aria-label="赞同 99 " aria-live="polite" type="button" class="Button VoteButton VoteButton--up"><span style="display:inline-flex;align-items:center">​<svg width="10" height="10" viewBox="0 0 24 24" class="Zi Zi--TriangleUp VoteButton-TriangleUp" fill="currentColor"><path fill-rule="evenodd" d="M13.792 3.681c-.781-1.406-2.803-1.406-3.584 0l-7.79 14.023c-.76 1.367.228 3.046 1.791 3.046h15.582c1.563 0 2.55-1.68 1.791-3.046l-7.79-14.023Z" clip-rule="evenodd"></path></svg></span>赞同 99</button><button aria-label="反对" aria-live="polite" type="button" class="Button VoteButton VoteButton--down"><span style="display:inline-flex;align-items:center">​<svg width="10" height="10" viewBox="0 0 24 24" class="Zi Zi--TriangleDown" fill="currentColor"><path fill-rule="evenodd" d="M13.792 20.319c-.781 1.406-2.803 1.406-3.584 0L2.418 6.296c-.76-1.367.228-3.046 1.791-3.046h15.582c1.563 0 2.55 1.68 1.791 3.046l-7.79 14.023Z" clip-rule="evenodd"></path></svg></span></button></span><button type="button" class="Button BottomActions-CommentBtn Button--plain Button--withIcon Button--withLabel"><span style="display:inline-flex;align-items:center">​<svg width="1.2em" height="1.2em" viewBox="0 0 24 24" class="Zi Zi--Comment Button-zi" fill="currentColor"><path fill-rule="evenodd" d="M12 2.75a9.25 9.25 0 1 0 4.737 17.197l2.643.817a1 1 0 0 0 1.25-1.25l-.8-2.588A9.25 9.25 0 0 0 12 2.75Z" clip-rule="evenodd"></path></svg></span>15 条评论</button><div class="Popover ShareMenu"><div class="ShareMenu-toggler" id="null-toggle" aria-haspopup="true" aria-expanded="false" aria-owns="null-content"><button type="button" class="Button Button--plain Button--withIcon Button--withLabel"><span style="display:inline-flex;align-items:center">​<svg width="1.2em" height="1.2em" viewBox="0 0 24 24" class="Zi Zi--Share Button-zi" fill="currentColor"><path d="M19.47 1.914a.8.8 0 0 1 1.204.778l-1.872 16.386a.9.9 0 0 1-1.204.743l-4.615-1.692a.7.7 0 0 0-.831.28l-1.927 3.02c-.43.674-1.474.369-1.474-.43v-3.865a.8.8 0 0 1 .179-.504l5.808-7.148a.595.595 0 0 0-.897-.781l-5.93 6.354a1.1 1.1 0 0 1-1.258.252L2.57 13.46a.8.8 0 0 1-.08-1.415l16.98-10.13Z"></path></svg></span>分享</button></div></div><button aria-live="polite" type="button" class="Button ContentItem-action Button--plain Button--withIcon Button--withLabel"><span style="display:inline-flex;align-items:center">​<svg width="1.2em" height="1.2em" viewBox="0 0 24 24" class="Zi Zi--Heart Button-zi" fill="currentColor"><path fill-rule="evenodd" d="M12.004 4.934c1.015-.944 2.484-1.618 3.98-1.618 3.48 0 6.53 3.265 6.15 7.614-.11 1.254-.686 2.55-1.458 3.753-.778 1.215-1.79 2.392-2.845 3.419-1.054 1.028-2.168 1.923-3.161 2.566a9.96 9.96 0 0 1-1.41.777c-.418.182-.862.32-1.268.32s-.848-.137-1.267-.317a9.918 9.918 0 0 1-1.407-.771c-.992-.64-2.103-1.53-3.156-2.555-1.052-1.024-2.062-2.2-2.84-3.417-.77-1.208-1.346-2.51-1.456-3.775-.38-4.349 2.67-7.614 6.15-7.614 1.484 0 2.983.673 3.988 1.618Z" clip-rule="evenodd"></path></svg></span>喜欢</button><button type="button" class="Button Button--plain Button--withIcon Button--withLabel"><span style="display:inline-flex;align-items:center">​<svg width="1.2em" height="1.2em" viewBox="0 0 24 24" class="Zi Zi--Star Button-zi" fill="currentColor"><path d="M10.484 3.307c.673-1.168 2.358-1.168 3.032 0l2.377 4.122a.25.25 0 0 0 .165.12l4.655.987c1.319.28 1.84 1.882.937 2.884l-3.186 3.535a.25.25 0 0 0-.063.193l.5 4.733c.142 1.34-1.222 2.33-2.453 1.782l-4.346-1.938a.25.25 0 0 0-.204 0l-4.346 1.938c-1.231.549-2.595-.442-2.453-1.782l.5-4.733a.25.25 0 0 0-.064-.193L2.35 11.42c-.903-1.002-.382-2.604.937-2.884l4.655-.987a.25.25 0 0 0 .164-.12l2.378-4.122Z"></path></svg></span>收藏</button><button type="button" class="Button ContentItem-action Button--plain Button--withIcon Button--withLabel"><span style="display:inline-flex;align-items:center">​<svg width="1.2em" height="1.2em" viewBox="0 0 24 24" class="Zi Zi--Deliver Button-zi" fill="currentColor"><g fill-rule="evenodd" clip-rule="evenodd"><path d="M7.821 12a.75.75 0 0 1 .75-.75h6.857a.75.75 0 0 1 0 1.5H8.571a.75.75 0 0 1-.75-.75ZM8.965 8a.75.75 0 0 1 .75-.75h4.571a.75.75 0 0 1 0 1.5H9.715a.75.75 0 0 1-.75-.75Z"></path><path d="M7.527 3.15a2.35 2.35 0 0 0-2.309 1.91L3.165 15.84a.85.85 0 0 0-.015.16v2.5a2.35 2.35 0 0 0 2.35 2.35h13a2.35 2.35 0 0 0 2.35-2.35V16a.848.848 0 0 0-.015-.16L18.78 5.06a2.35 2.35 0 0 0-2.308-1.91H7.527Zm0 1.7a.65.65 0 0 0-.639.528l-1.88 9.872h13.984l-1.88-9.872a.65.65 0 0 0-.64-.528H7.528Z"></path></g></svg></span>申请转载</button><div class="Post-ActionMenuButton"><div class="Popover"><div id="null-toggle" aria-haspopup="true" aria-expanded="false" aria-owns="null-content"><button type="button" class="Button Button--plain Button--withIcon Button--iconOnly undefined"><span style="display:inline-flex;align-items:center">​<svg width="1.2em" height="1.2em" viewBox="0 0 24 24" class="Zi Zi--Dots Button-zi" fill="currentColor"><path d="M5.165 13.665a1.665 1.665 0 1 0 0-3.33 1.665 1.665 0 0 0 0 3.33ZM13.665 12a1.665 1.665 0 1 1-3.33 0 1.665 1.665 0 0 1 3.33 0ZM18.835 13.665a1.665 1.665 0 1 0 0-3.33 1.665 1.665 0 0 0 0 3.33Z"></path></svg></span></button></div></div></div></div></div></div></article><div class="Post-Sub Post-NormalSub"><div class="PostIndex-Contributions"><h3 class="BlockTitle">文章被以下专栏收录</h3><ul><div class="ContentItem Column-ColumnItem"><div class="ContentItem-main"><div class="ContentItem-image"><a class="ColumnLink" href="//www.zhihu.com/column/c_123624235"><div class="css-1gomreu"><style data-emotion-css="1any501">.css-1any501{box-sizing:border-box;margin:0;min-width:0;max-width:100%;height:auto;background-color:#FFFFFF;width:40px;height:40px;border-radius:50%;}</style><img class="Avatar css-1any501" src="https://picx.zhimg.com/v2-b4c124a3239f78d9920ce3dc8953c662_l.jpg?source=172ae18b" srcSet="https://picx.zhimg.com/v2-b4c124a3239f78d9920ce3dc8953c662_l.jpg?source=172ae18b 2x" alt="深度挖掘互联网"/></div></a></div><div class="ContentItem-head"><h2 class="ContentItem-title"><span><a class="ColumnLink ColumnItem-Title" href="//www.zhihu.com/column/c_123624235"><div class="css-1gomreu">深度挖掘互联网</div></a></span></h2></div></div></div><div class="ContentItem Column-ColumnItem"><div class="ContentItem-main"><div class="ContentItem-image"><a class="ColumnLink" href="//www.zhihu.com/column/c_1008650342774534144"><div class="css-1gomreu"><img class="Avatar css-1any501" src="https://picx.zhimg.com/4b70deef7_l.jpg?source=172ae18b" srcSet="https://picx.zhimg.com/4b70deef7_l.jpg?source=172ae18b 2x" alt="java 技术分享"/></div></a></div><div class="ContentItem-head"><h2 class="ContentItem-title"><span><a class="ColumnLink ColumnItem-Title" href="//www.zhihu.com/column/c_1008650342774534144"><div class="css-1gomreu">java 技术分享</div></a></span></h2><div class="ContentItem-meta">《深入分析java web技术内幕》在读分享；</div></div></div></div></ul></div></div></div></main></div></div><script id="js-clientConfig" type="text/json">{"fetchRoot":{"www":"https:\u002F\u002Fwww.zhihu.com","api":"https:\u002F\u002Fapi.zhihu.com","lens":"https:\u002F\u002Flens.zhihu.com","zhuanlan":"https:\u002F\u002Fzhuanlan.zhihu.com\u002Fapi\u002F","walletpay":"https:\u002F\u002Fwalletpay.zhihu.com","captcha":"https:\u002F\u002Fcaptcha.zhihu.com","vzuu":"https:\u002F\u002Fv.vzuu.com","openapi":"https:\u002F\u002Fopenapi.zhihu.com","svip":"https:\u002F\u002Fsvip.zhihu.com"},"host":"zhihu.com","protocol":"https:","wwwHost":"www.zhihu.com","videoHost":"video.zhihu.com","zhuanlanHost":"zhuanlan.zhihu.com","allowSignUp":true,"refreshValidityPeriod":"30","release":"966-eb94742e","currentEntry":"column","isMobileEntry":false,"apollo":{"env":"prod","globalSilence":"","ncgModeSign":"3f8e56febda4fb3bbea72e379d76de1e","topstory_rec_adp":"1","editor_adapt_native":"0","content_publish_pin":"1","test_canary":"member|0-100,1-0","use_new_player":"member|0-0,1-100","player_vendor":"member|0-0,1-100,2-0","use_hevc":"member|0-0,1-100","upload_use_signature":"member|0-0,1-100","use_backdrop_blur":"member|0-0,1-100","article_title_imagex":"member|0-0,1-100","play_station":"member|0-0,1-100","contentItem_cover_imagex":"member|0-50,1-50"}}</script><script id="js-initialData" type="text/json">{"initialState":{"common":{"ask":{}},"loading":{"global":{"count":0},"local":{"env\u002FgetIpinfo\u002F":false,"article\u002Fget\u002F":false,"brand\u002FgetUrl\u002F":false,"article\u002FloadPostSearchEntity\u002F":false}},"entities":{"users":{"tu-tou-mu-yuan":{"isFollowed":false,"avatarUrlTemplate":"https:\u002F\u002Fpicx.zhimg.com\u002Fv2-dd3e5d0cbb88d0311d90f90cd29e0a18.jpg?source=172ae18b","uid":"1096440543101444096","userType":"people","isFollowing":false,"urlToken":"tu-tou-mu-yuan","id":"40837f47fdbb0ab8d67eee105cbe948c","description":"骄傲的发际线 自学的好友可以加我QQ拿资料 858587690","name":"秃头母猿","isAdvertiser":false,"headline":"自学java3年的母程序猿","gender":0,"url":"\u002Fpeople\u002F40837f47fdbb0ab8d67eee105cbe948c","avatarUrl":"https:\u002F\u002Fpica.zhimg.com\u002Fv2-dd3e5d0cbb88d0311d90f90cd29e0a18_l.jpg?source=172ae18b","isOrg":false,"type":"people","vipInfo":{"isVip":true,"vipIcon":{"url":"https:\u002F\u002Fpica.zhimg.com\u002Fv2-4812630bc27d642f7cafcd6cdeca3d7a.jpg?source=88ceefae","nightModeUrl":"https:\u002F\u002Fpicx.zhimg.com\u002Fv2-c9686ff064ea3579730756ac6c289978.jpg?source=88ceefae"}},"badge":[],"badgeV2":{"title":"","mergedBadges":[],"detailBadges":[],"icon":"","nightIcon":""},"exposedMedal":{"medalId":"972477022068568064","medalName":"备受瞩目","avatarUrl":"https:\u002F\u002Fpic1.zhimg.com\u002Fv2-f64540a83905e891c2a0756a33fc9521_r.png?source=172ae18b","miniAvatarUrl":"https:\u002F\u002Fpicx.zhimg.com\u002Fv2-f64540a83905e891c2a0756a33fc9521_l.png?source=172ae18b","description":"被 50 个人关注","medalAvatarFrame":""}}},"questions":{},"answers":{},"articles":{"64353891":{"trackUrl":["https:\u002F\u002Fsugar.zhihu.com\u002Fplutus_adreaper\u002Fcontent_monitor_log?si=__SESSIONID__&ti=__ATOKEN__&at=view&pf=__OS__&ed=BiBUKF0xBSkqGGJ-QhvjYHlDBQ==&idfa=__IDFA__&imei=__IMEI__&androidid=__ANDROIDID__&oaid=__OAID__&ci=__CREATIVEID__&zid=__ZONEID__"],"entityWords":[{"name":"开源社区","mention":"开源社区","matchorder":1,"begin":3454,"end":3458,"entityid":0,"isBookMark":false,"link":{"linkType":0,"linkUrl":"","docType":"","topicToken":""},"entityClass":"Unknown","score":0,"attachedInfoBytes":"sgJXCgzlvIDmupDnpL7ljLoSB1Vua25vd24Y\u002FhogghsoATUAAAAAOgdhcnRpY2xlQABIAFIkYmQ4NTE5NjEtNGNjZC00N2MwLWFkNTctODIzNTgzNmEzZDc0","isOnAB":false,"isNatural":1,"isDelete":false,"contentType":"","contentId":"","contentToken":""},{"name":"日志文件","mention":"日志文件","matchorder":1,"begin":7089,"end":7093,"entityid":0,"isBookMark":false,"link":{"linkType":0,"linkUrl":"","docType":"","topicToken":""},"entityClass":"Unknown","score":0,"attachedInfoBytes":"sgJXCgzml6Xlv5fmlofku7YSB1Vua25vd24YsTcgtTcoATUAAAAAOgdhcnRpY2xlQABIAFIkYmQ4NTE5NjEtNGNjZC00N2MwLWFkNTctODIzNTgzNmEzZDc0","isOnAB":false,"isNatural":1,"isDelete":false,"contentType":"","contentId":"","contentToken":""},{"name":"应用日志","mention":"应用日志","matchorder":1,"begin":1055,"end":1059,"entityid":0,"isBookMark":false,"link":{"linkType":0,"linkUrl":"","docType":"","topicToken":""},"entityClass":"Computer","score":0,"attachedInfoBytes":"sgJYCgzlupTnlKjml6Xlv5cSCENvbXB1dGVyGJ8IIKMIKAE1AAAAADoHYXJ0aWNsZUAASABSJGJkODUxOTYxLTRjY2QtNDdjMC1hZDU3LTgyMzU4MzZhM2Q3NA==","isOnAB":false,"isNatural":1,"isDelete":false,"contentType":"","contentId":"","contentToken":""},{"name":"系统日志","mention":"系统日志","matchorder":1,"begin":1186,"end":1190,"entityid":0,"isBookMark":false,"link":{"linkType":0,"linkUrl":"","docType":"","topicToken":""},"entityClass":"Computer","score":0,"attachedInfoBytes":"sgJYCgzns7vnu5\u002Fml6Xlv5cSCENvbXB1dGVyGKIJIKYJKAE1AAAAADoHYXJ0aWNsZUAASABSJGJkODUxOTYxLTRjY2QtNDdjMC1hZDU3LTgyMzU4MzZhM2Q3NA==","isOnAB":false,"isNatural":1,"isDelete":false,"contentType":"","contentId":"","contentToken":""},{"name":"error log4j","mention":"error log4j","matchorder":1,"begin":4554,"end":4565,"entityid":0,"isBookMark":false,"link":{"linkType":0,"linkUrl":"","docType":"","topicToken":""},"entityClass":"Medical","score":0,"attachedInfoBytes":"sgJWCgtlcnJvciBsb2c0ahIHTWVkaWNhbBjKIyDVIygBNQAAAAA6B2FydGljbGVAAEgAUiRiZDg1MTk2MS00Y2NkLTQ3YzAtYWQ1Ny04MjM1ODM2YTNkNzQ=","isOnAB":false,"isNatural":1,"isDelete":false,"contentType":"","contentId":"","contentToken":""},{"name":"commons-loging","mention":"commons-loging","matchorder":1,"begin":12965,"end":12979,"entityid":0,"isBookMark":false,"link":{"linkType":0,"linkUrl":"","docType":"","topicToken":""},"entityClass":"Commodity","score":0,"attachedInfoBytes":"sgJbCg5jb21tb25zLWxvZ2luZxIJQ29tbW9kaXR5GKVlILNlKAE1AAAAADoHYXJ0aWNsZUAASABSJGJkODUxOTYxLTRjY2QtNDdjMC1hZDU3LTgyMzU4MzZhM2Q3NA==","isOnAB":false,"isNatural":1,"isDelete":false,"contentType":"","contentId":"","contentToken":""},{"name":"适配器模式","mention":"适配器模式","matchorder":1,"begin":4086,"end":4091,"entityid":0,"isBookMark":false,"link":{"linkType":0,"linkUrl":"","docType":"","topicToken":""},"entityClass":"OtherTerm","score":0,"attachedInfoBytes":"sgJcCg\u002FpgILphY3lmajmqKHlvI8SCU90aGVyVGVybRj2HyD7HygBNQAAAAA6B2FydGljbGVAAEgAUiRiZDg1MTk2MS00Y2NkLTQ3YzAtYWQ1Ny04MjM1ODM2YTNkNzQ=","isOnAB":false,"isNatural":1,"isDelete":false,"contentType":"","contentId":"","contentToken":""},{"name":"配置文件","mention":"配置文件","matchorder":1,"begin":7152,"end":7156,"entityid":0,"isBookMark":false,"link":{"linkType":0,"linkUrl":"","docType":"","topicToken":""},"entityClass":"Computer","score":0,"attachedInfoBytes":"sgJYCgzphY3nva7mlofku7YSCENvbXB1dGVyGPA3IPQ3KAE1AAAAADoHYXJ0aWNsZUAASABSJGJkODUxOTYxLTRjY2QtNDdjMC1hZDU3LTgyMzU4MzZhM2Q3NA==","isOnAB":false,"isNatural":1,"isDelete":false,"contentType":"","contentId":"","contentToken":""},{"name":"网络安全","mention":"网络安全","matchorder":1,"begin":1950,"end":1954,"entityid":0,"isBookMark":false,"link":{"linkType":0,"linkUrl":"","docType":"","topicToken":""},"entityClass":"Medical","score":0,"attachedInfoBytes":"sgJXCgznvZHnu5zlronlhagSB01lZGljYWwYng8gog8oATUAAAAAOgdhcnRpY2xlQABIAFIkYmQ4NTE5NjEtNGNjZC00N2MwLWFkNTctODIzNTgzNmEzZDc0","isOnAB":false,"isNatural":1,"isDelete":false,"contentType":"","contentId":"","contentToken":""},{"name":"slf4j+logback","mention":"slf4j+logback","matchorder":1,"begin":35734,"end":35747,"entityid":0,"isBookMark":false,"link":{"linkType":0,"linkUrl":"","docType":"","topicToken":""},"entityClass":"Math","score":0,"attachedInfoBytes":"sgJXCg1zbGY0aitsb2diYWNrEgRNYXRoGJaXAiCjlwIoATUAAAAAOgdhcnRpY2xlQABIAFIkYmQ4NTE5NjEtNGNjZC00N2MwLWFkNTctODIzNTgzNmEzZDc0","isOnAB":false,"isNatural":1,"isDelete":false,"contentType":"","contentId":"","contentToken":""},{"name":"日志库","mention":"日志库","matchorder":1,"begin":2822,"end":2825,"entityid":0,"isBookMark":false,"link":{"linkType":0,"linkUrl":"","docType":"","topicToken":""},"entityClass":"Math","score":0,"attachedInfoBytes":"sgJRCgnml6Xlv5flupMSBE1hdGgYhhYgiRYoATUAAAAAOgdhcnRpY2xlQABIAFIkYmQ4NTE5NjEtNGNjZC00N2MwLWFkNTctODIzNTgzNmEzZDc0","isOnAB":false,"isNatural":1,"isDelete":false,"contentType":"","contentId":"","contentToken":""},{"name":"log4j.properties","mention":"log4j.properties","matchorder":3,"begin":7642,"end":7658,"entityid":0,"isBookMark":false,"link":{"linkType":0,"linkUrl":"","docType":"","topicToken":""},"entityClass":"OtherTerm","score":0,"attachedInfoBytes":"sgJdChBsb2c0ai5wcm9wZXJ0aWVzEglPdGhlclRlcm0Y2jsg6jsoAzUAAAAAOgdhcnRpY2xlQABIAFIkYmQ4NTE5NjEtNGNjZC00N2MwLWFkNTctODIzNTgzNmEzZDc0","isOnAB":false,"isNatural":1,"isDelete":false,"contentType":"","contentId":"","contentToken":""},{"name":"历时日志","mention":"历时日志","matchorder":1,"begin":1291,"end":1295,"entityid":0,"isBookMark":false,"link":{"linkType":0,"linkUrl":"","docType":"","topicToken":""},"entityClass":"Artwork","score":0,"attachedInfoBytes":"sgJXCgzljobml7bml6Xlv5cSB0FydHdvcmsYiwogjwooATUAAAAAOgdhcnRpY2xlQABIAFIkYmQ4NTE5NjEtNGNjZC00N2MwLWFkNTctODIzNTgzNmEzZDc0","isOnAB":false,"isNatural":1,"isDelete":false,"contentType":"","contentId":"","contentToken":""},{"name":"日志记录","mention":"日志记录","matchorder":17,"begin":309,"end":313,"entityid":0,"isBookMark":false,"link":{"linkType":0,"linkUrl":"","docType":"","topicToken":""},"entityClass":"Law","score":0,"attachedInfoBytes":"sgJTCgzml6Xlv5forrDlvZUSA0xhdxi1AiC5AigRNQAAAAA6B2FydGljbGVAAEgAUiRiZDg1MTk2MS00Y2NkLTQ3YzAtYWQ1Ny04MjM1ODM2YTNkNzQ=","isOnAB":false,"isNatural":1,"isDelete":false,"contentType":"","contentId":"","contentToken":""},{"name":"SLF4j+Log4j","mention":"SLF4j+Log4j","matchorder":1,"begin":31978,"end":31989,"entityid":0,"isBookMark":false,"link":{"linkType":0,"linkUrl":"","docType":"","topicToken":""},"entityClass":"OtherTerm","score":0,"attachedInfoBytes":"sgJaCgtTTEY0aitMb2c0ahIJT3RoZXJUZXJtGOr5ASD1+QEoATUAAAAAOgdhcnRpY2xlQABIAFIkYmQ4NTE5NjEtNGNjZC00N2MwLWFkNTctODIzNTgzNmEzZDc0","isOnAB":false,"isNatural":1,"isDelete":false,"contentType":"","contentId":"","contentToken":""},{"name":"printf函数","mention":"printf函数","matchorder":1,"begin":8748,"end":8756,"entityid":0,"isBookMark":false,"link":{"linkType":0,"linkUrl":"","docType":"","topicToken":""},"entityClass":"Math","score":0,"attachedInfoBytes":"sgJUCgxwcmludGblh73mlbASBE1hdGgYrEQgtEQoATUAAAAAOgdhcnRpY2xlQABIAFIkYmQ4NTE5NjEtNGNjZC00N2MwLWFkNTctODIzNTgzNmEzZDc0","isOnAB":false,"isNatural":1,"isDelete":false,"contentType":"","contentId":"","contentToken":""},{"name":"log4j.appender.error","mention":"log4j.appender.error","matchorder":3,"begin":8991,"end":9011,"entityid":0,"isBookMark":false,"link":{"linkType":0,"linkUrl":"","docType":"","topicToken":""},"entityClass":"Medical","score":0,"attachedInfoBytes":"sgJfChRsb2c0ai5hcHBlbmRlci5lcnJvchIHTWVkaWNhbBifRiCzRigDNQAAAAA6B2FydGljbGVAAEgAUiRiZDg1MTk2MS00Y2NkLTQ3YzAtYWQ1Ny04MjM1ODM2YTNkNzQ=","isOnAB":false,"isNatural":1,"isDelete":false,"contentType":"","contentId":"","contentToken":""},{"name":"slf4j-Log4j12.jar","mention":"slf4j-Log4j12.jar","matchorder":1,"begin":32031,"end":32048,"entityid":0,"isBookMark":false,"link":{"linkType":0,"linkUrl":"","docType":"","topicToken":""},"entityClass":"Medical","score":0,"attachedInfoBytes":"sgJeChFzbGY0ai1Mb2c0ajEyLmphchIHTWVkaWNhbBif+gEgsPoBKAE1AAAAADoHYXJ0aWNsZUAASABSJGJkODUxOTYxLTRjY2QtNDdjMC1hZDU3LTgyMzU4MzZhM2Q3NA==","isOnAB":false,"isNatural":1,"isDelete":false,"contentType":"","contentId":"","contentToken":""},{"name":"抽象类","mention":"抽象类","matchorder":1,"begin":12685,"end":12688,"entityid":0,"isBookMark":false,"link":{"linkType":0,"linkUrl":"","docType":"","topicToken":""},"entityClass":"Unknown","score":0,"attachedInfoBytes":"sgJUCgnmir3osaHnsbsSB1Vua25vd24YjWMgkGMoATUAAAAAOgdhcnRpY2xlQABIAFIkYmQ4NTE5NjEtNGNjZC00N2MwLWFkNTctODIzNTgzNmEzZDc0","isOnAB":false,"isNatural":1,"isDelete":false,"contentType":"","contentId":"","contentToken":""},{"name":"设计模式","mention":"设计模式","matchorder":1,"begin":4079,"end":4083,"entityid":0,"isBookMark":false,"link":{"linkType":0,"linkUrl":"","docType":"","topicToken":""},"entityClass":"Unknown","score":0,"attachedInfoBytes":"sgJXCgzorr7orqHmqKHlvI8SB1Vua25vd24Y7x8g8x8oATUAAAAAOgdhcnRpY2xlQABIAFIkYmQ4NTE5NjEtNGNjZC00N2MwLWFkNTctODIzNTgzNmEzZDc0","isOnAB":false,"isNatural":1,"isDelete":false,"contentType":"","contentId":"","contentToken":""},{"name":"Log4j 使用步骤说明","mention":"Log4j 使用步骤说明","matchorder":3,"begin":7190,"end":7202,"entityid":0,"isBookMark":false,"link":{"linkType":0,"linkUrl":"","docType":"","topicToken":""},"entityClass":"Artwork","score":0,"attachedInfoBytes":"sgJjChhMb2c0aiDkvb\u002FnlKjmraXpqqTor7TmmI4SB0FydHdvcmsYljggojgoAzUAAAAAOgdhcnRpY2xlQABIAFIkYmQ4NTE5NjEtNGNjZC00N2MwLWFkNTctODIzNTgzNmEzZDc0","isOnAB":false,"isNatural":1,"isDelete":false,"contentType":"","contentId":"","contentToken":""},{"name":"代码日志","mention":"代码日志","matchorder":1,"begin":2322,"end":2326,"entityid":0,"isBookMark":false,"link":{"linkType":0,"linkUrl":"","docType":"","topicToken":""},"entityClass":"Computer","score":0,"attachedInfoBytes":"sgJYCgzku6PnoIHml6Xlv5cSCENvbXB1dGVyGJISIJYSKAE1AAAAADoHYXJ0aWNsZUAASABSJGJkODUxOTYxLTRjY2QtNDdjMC1hZDU3LTgyMzU4MzZhM2Q3NA==","isOnAB":false,"isNatural":1,"isDelete":false,"contentType":"","contentId":"","contentToken":""},{"name":"自定义异常","mention":"自定义异常","matchorder":1,"begin":36199,"end":36204,"entityid":0,"isBookMark":false,"link":{"linkType":0,"linkUrl":"","docType":"","topicToken":""},"entityClass":"OtherTerm","score":0,"attachedInfoBytes":"sgJeCg\u002Foh6rlrprkuYnlvILluLgSCU90aGVyVGVybRjnmgIg7JoCKAE1AAAAADoHYXJ0aWNsZUAASABSJGJkODUxOTYxLTRjY2QtNDdjMC1hZDU3LTgyMzU4MzZhM2Q3NA==","isOnAB":false,"isNatural":1,"isDelete":false,"contentType":"","contentId":"","contentToken":""},{"name":"simplelog","mention":"simplelog","matchorder":1,"begin":3919,"end":3928,"entityid":0,"isBookMark":false,"link":{"linkType":0,"linkUrl":"","docType":"","topicToken":""},"entityClass":"OtherTerm","score":0,"attachedInfoBytes":"sgJWCglzaW1wbGVsb2cSCU90aGVyVGVybRjPHiDYHigBNQAAAAA6B2FydGljbGVAAEgAUiRiZDg1MTk2MS00Y2NkLTQ3YzAtYWQ1Ny04MjM1ODM2YTNkNzQ=","isOnAB":false,"isNatural":1,"isDelete":false,"contentType":"","contentId":"","contentToken":""},{"name":"jcllog4j","mention":"jcllog4j","matchorder":1,"begin":30535,"end":30543,"entityid":0,"isBookMark":false,"link":{"linkType":0,"linkUrl":"","docType":"","topicToken":""},"entityClass":"Medical","score":0,"attachedInfoBytes":"sgJVCghqY2xsb2c0ahIHTWVkaWNhbBjH7gEgz+4BKAE1AAAAADoHYXJ0aWNsZUAASABSJGJkODUxOTYxLTRjY2QtNDdjMC1hZDU3LTgyMzU4MzZhM2Q3NA==","isOnAB":false,"isNatural":1,"isDelete":false,"contentType":"","contentId":"","contentToken":""},{"name":"slf4jlog4j","mention":"slf4jlog4j","matchorder":1,"begin":33073,"end":33083,"entityid":0,"isBookMark":false,"link":{"linkType":0,"linkUrl":"","docType":"","topicToken":""},"entityClass":"Medical","score":0,"attachedInfoBytes":"sgJXCgpzbGY0amxvZzRqEgdNZWRpY2FsGLGCAiC7ggIoATUAAAAAOgdhcnRpY2xlQABIAFIkYmQ4NTE5NjEtNGNjZC00N2MwLWFkNTctODIzNTgzNmEzZDc0","isOnAB":false,"isNatural":1,"isDelete":false,"contentType":"","contentId":"","contentToken":""},{"name":"开源项目","mention":"开源项目","matchorder":1,"begin":7060,"end":7064,"entityid":0,"isBookMark":false,"link":{"linkType":0,"linkUrl":"","docType":"","topicToken":""},"entityClass":"Unknown","score":0,"attachedInfoBytes":"sgJXCgzlvIDmupDpobnnm64SB1Vua25vd24YlDcgmDcoATUAAAAAOgdhcnRpY2xlQABIAFIkYmQ4NTE5NjEtNGNjZC00N2MwLWFkNTctODIzNTgzNmEzZDc0","isOnAB":false,"isNatural":1,"isDelete":false,"contentType":"","contentId":"","contentToken":""},{"name":"logback-classic","mention":"logback-classic","matchorder":1,"begin":14986,"end":15001,"entityid":0,"isBookMark":false,"link":{"linkType":0,"linkUrl":"","docType":"","topicToken":""},"entityClass":"Commodity","score":0,"attachedInfoBytes":"sgJcCg9sb2diYWNrLWNsYXNzaWMSCUNvbW1vZGl0eRiKdSCZdSgBNQAAAAA6B2FydGljbGVAAEgAUiRiZDg1MTk2MS00Y2NkLTQ3YzAtYWQ1Ny04MjM1ODM2YTNkNzQ=","isOnAB":false,"isNatural":1,"isDelete":false,"contentType":"","contentId":"","contentToken":""},{"name":"tomcat","mention":"tomcat","matchorder":1,"begin":15288,"end":15294,"entityid":0,"isBookMark":false,"link":{"linkType":0,"linkUrl":"","docType":"","topicToken":""},"entityClass":"Commodity","score":0,"attachedInfoBytes":"sgJTCgZ0b21jYXQSCUNvbW1vZGl0eRi4dyC+dygBNQAAAAA6B2FydGljbGVAAEgAUiRiZDg1MTk2MS00Y2NkLTQ3YzAtYWQ1Ny04MjM1ODM2YTNkNzQ=","isOnAB":false,"isNatural":1,"isDelete":false,"contentType":"","contentId":"","contentToken":""},{"name":"log4j-api","mention":"log4j-api","matchorder":1,"begin":22297,"end":22306,"entityid":0,"isBookMark":false,"link":{"linkType":0,"linkUrl":"","docType":"","topicToken":""},"entityClass":"Commodity","score":0,"attachedInfoBytes":"sgJYCglsb2c0ai1hcGkSCUNvbW1vZGl0eRiZrgEgoq4BKAE1AAAAADoHYXJ0aWNsZUAASABSJGJkODUxOTYxLTRjY2QtNDdjMC1hZDU3LTgyMzU4MzZhM2Q3NA==","isOnAB":false,"isNatural":1,"isDelete":false,"contentType":"","contentId":"","contentToken":""},{"name":"日志 level","mention":"日志 level","matchorder":1,"begin":28137,"end":28145,"entityid":0,"isBookMark":false,"link":{"linkType":0,"linkUrl":"","docType":"","topicToken":""},"entityClass":"OtherTerm","score":0,"attachedInfoBytes":"sgJbCgzml6Xlv5cgbGV2ZWwSCU90aGVyVGVybRjp2wEg8dsBKAE1AAAAADoHYXJ0aWNsZUAASABSJGJkODUxOTYxLTRjY2QtNDdjMC1hZDU3LTgyMzU4MzZhM2Q3NA==","isOnAB":false,"isNatural":1,"isDelete":false,"contentType":"","contentId":"","contentToken":""}],"id":64353891,"title":"Java 日志从入门到实战","type":"article","articleType":"normal","excerptTitle":"","url":"https:\u002F\u002Fzhuanlan.zhihu.com\u002Fp\u002F64353891","imageUrl":"https:\u002F\u002Fpicx.zhimg.com\u002Fv2-4e03add7136e50affe555912839fc27b_720w.jpg?source=172ae18b","titleImage":"https:\u002F\u002Fpic1.zhimg.com\u002Fv2-4e03add7136e50affe555912839fc27b_720w.jpg?source=172ae18b","excerpt":"\u003Cimg src=\"https:\u002F\u002Fpic2.zhimg.com\u002Fv2-2adab8652816bd48fdbc77edb4a85285_200x112.png\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"822\" data-rawheight=\"418\" data-watermark=\"watermark\" data-original-src=\"v2-2adab8652816bd48fdbc77edb4a85285\" data-watermark-src=\"v2-1d6add0536d2266211f2569a84a681ae\" data-private-watermark-src=\"\" data-original=\"https:\u002F\u002Fpic2.zhimg.com\u002Fv2-2adab8652816bd48fdbc77edb4a85285_r.png\" class=\"origin_image inline-img zh-lightbox-thumb\"\u002F\u003E日志和异常处理结合得当的话，会给项目维护带来非常大的价值。 \u003Cb\u003E日志：\u003C\u002Fb\u003E就是介绍一个过程和经历的详细记录。\u003Cb\u003E项目日志：\u003C\u002Fb\u003E就是项目开发过程的详细记录，一般由项目经理记录。\u003Cb\u003E代码里的日志：\u003C\u002Fb\u003E就是程序员记录某个开发过程的详细情况，这是项目里每个程序员需要做的…","created":1556616040,"updated":1556616040,"author":{"isFollowed":false,"avatarUrlTemplate":"https:\u002F\u002Fpicx.zhimg.com\u002Fv2-dd3e5d0cbb88d0311d90f90cd29e0a18.jpg?source=172ae18b","uid":"1096440543101444096","userType":"people","isFollowing":false,"urlToken":"tu-tou-mu-yuan","id":"40837f47fdbb0ab8d67eee105cbe948c","description":"骄傲的发际线 自学的好友可以加我QQ拿资料 858587690","name":"秃头母猿","isAdvertiser":false,"headline":"自学java3年的母程序猿","gender":0,"url":"\u002Fpeople\u002F40837f47fdbb0ab8d67eee105cbe948c","avatarUrl":"https:\u002F\u002Fpica.zhimg.com\u002Fv2-dd3e5d0cbb88d0311d90f90cd29e0a18_l.jpg?source=172ae18b","isOrg":false,"type":"people","vipInfo":{"isVip":true,"vipIcon":{"url":"https:\u002F\u002Fpica.zhimg.com\u002Fv2-4812630bc27d642f7cafcd6cdeca3d7a.jpg?source=88ceefae","nightModeUrl":"https:\u002F\u002Fpicx.zhimg.com\u002Fv2-c9686ff064ea3579730756ac6c289978.jpg?source=88ceefae"}},"badge":[],"badgeV2":{"title":"","mergedBadges":[],"detailBadges":[],"icon":"","nightIcon":""},"exposedMedal":{"medalId":"972477022068568064","medalName":"备受瞩目","avatarUrl":"https:\u002F\u002Fpic1.zhimg.com\u002Fv2-f64540a83905e891c2a0756a33fc9521_r.png?source=172ae18b","miniAvatarUrl":"https:\u002F\u002Fpicx.zhimg.com\u002Fv2-f64540a83905e891c2a0756a33fc9521_l.png?source=172ae18b","description":"被 50 个人关注","medalAvatarFrame":""}},"commentPermission":"all","copyrightPermission":"need_review","state":"published","ipInfo":"","imageWidth":357,"imageHeight":376,"content":"\u003Cp data-pid=\"ELj8n3yi\"\u003E日志和异常处理结合得当的话，会给项目维护带来非常大的价值。\u003C\u002Fp\u003E\u003Cul\u003E\u003Cli data-pid=\"w4FZ2wjJ\"\u003E\u003Cb\u003E日志：\u003C\u002Fb\u003E就是介绍一个过程和经历的详细记录。\u003C\u002Fli\u003E\u003Cli data-pid=\"KO1codzb\"\u003E\u003Cb\u003E项目日志：\u003C\u002Fb\u003E就是项目开发过程的详细记录，一般由项目经理记录。\u003C\u002Fli\u003E\u003Cli data-pid=\"w3UgPSgR\"\u003E\u003Cb\u003E代码里的日志：\u003C\u002Fb\u003E就是程序员记录某个开发过程的详细情况，这是项目里每个程序员需要做的工作。\u003C\u002Fli\u003E\u003C\u002Ful\u003E\u003Cp data-pid=\"EZyviwbC\"\u003E代码里的日志在项目中扮演着非常重要的角色，日志记录的详细程度决定系统是否容易维护，Java 项目中日志记录的框架有很多，在项目中如何选型也必将困惑。\u003C\u002Fp\u003E\u003Cp data-pid=\"1x1YgX6Q\"\u003E我们这场 chat 讨论的主题就是：\u003Cb\u003EJava代码里的日志\u003C\u002Fb\u003E，主要是写给 Java 程序员看的，本篇 Chat 从以下六个方面对 Java 日志进行阐述：\u003C\u002Fp\u003E\u003Cul\u003E\u003Cli data-pid=\"sjhRluaV\"\u003E一、日志在项目中的作用\u003C\u002Fli\u003E\u003Cli data-pid=\"2CqrAM8I\"\u003E二、Java 日志使用的困惑\u003C\u002Fli\u003E\u003Cli data-pid=\"xc27IHCN\"\u003E三、Java 日志演化历史\u003C\u002Fli\u003E\u003Cli data-pid=\"5O79RdqA\"\u003E四、使用不同框架的 Java 日志示例说明\u003C\u002Fli\u003E\u003Cli data-pid=\"Fs9suMY5\"\u003E五、项目中日志记录遵守哪些原则\u003C\u002Fli\u003E\u003Cli data-pid=\"VgPh1HK-\"\u003E六、一个推荐的项目 Java 日志实例\u003C\u002Fli\u003E\u003C\u002Ful\u003E\u003Cp data-pid=\"PoTa-2Hc\"\u003E以期通过本场 Chat 的学习，能使大家在编码过程中，对日志的处理过程加深认识、统一规范、得到收获，从零开始轻松掌握 Java 日志处理，并且可以运用到实际项目中。\u003C\u002Fp\u003E\u003Ch3\u003E一、日志在项目中的作用\u003C\u002Fh3\u003E\u003Cp data-pid=\"W6iNnWJ5\"\u003ELog 日志，主要用于记录程序运行的情况，以便于程序在部署之后的排错调试等，也有利于将这些信息进行持久化（如果不将日志信息保存到文件或数据库，则信息便会丢失）。\u003C\u002Fp\u003E\u003Ch3\u003E1. 查看程序当前运行状态\u003C\u002Fh3\u003E\u003Cp data-pid=\"FbCuOk_p\"\u003E如果想了解程序当前的运行情况，我们通过实时查看应用日志的输出，就能进行分析。\u003C\u002Fp\u003E\u003Cp data-pid=\"qasC818r\"\u003E比如，你在浏览器里输入一个 action 地址，该 url 负责执行一些批量处理，action 运行后，假设处理比较耗时，你再浏览器里无法直接看到程序的执行结果，此时，你可以打开系统日志，通过从日志输出信息就能轻松地分析该 url 的执行情况。\u003C\u002Fp\u003E\u003Ch3\u003E2. 查看程序历史运行轨迹\u003C\u002Fh3\u003E\u003Cp data-pid=\"LofXrgrx\"\u003E如果想了解历时程序的运行情况，我们通过查看应用历时日志的输出，就能进行分析。\u003C\u002Fp\u003E\u003Cp data-pid=\"JVJpKXwp\"\u003E比如，你想了解下上周周末用户访问量，你可以打开系统上周周末的日志记录，进行分析。你想了解昨天的某个定时任务是否正常执行，你可以打开昨天的系统日志，精确查找该定时任务的输出信息，从而判断定时任务是否执行。\u003C\u002Fp\u003E\u003Ch3\u003E3. 排查系统问题\u003C\u002Fh3\u003E\u003Cp data-pid=\"sZQnMN7f\"\u003E排查系统问题是程序员最熟悉的味道了，在项目维护过程中，出了任何问题，都需要程序员去进行排查。此时，如果没有清楚明了的日志记录，想要核查出问题的原因，难于上青天。\u003C\u002Fp\u003E\u003Cp data-pid=\"o6ouRua0\"\u003E一个优秀的程序员一定是个日志记录高手，如果日志记录的好，处理得当，排查问题则易如反掌。\u003C\u002Fp\u003E\u003Cp data-pid=\"ipjrfs6g\"\u003E大家有没有遇到一种场景，一个问题发生了，有的人能迅速定位问题并解决，有的人搞了半天，还没发现问题的产生原因。\u003C\u002Fp\u003E\u003Cp data-pid=\"Tr71eQmc\"\u003E其实快速定位问题的人一定记录了详细的日志，因此当问题发生的时候，通过核查问题发生时候的日志，就能快速的找出问题产生的原因。\u003C\u002Fp\u003E\u003Ch3\u003E4. 优化系统性能\u003C\u002Fh3\u003E\u003Cp data-pid=\"ioUzEiLp\"\u003E通过记录程序运行的时间，就能判断程序从执行开始到执行结束消耗的时间，从而判断系统性能是否达标，为系统性能优化提供判断依据。\u003C\u002Fp\u003E\u003Ch3\u003E5. 安全审计的基石\u003C\u002Fh3\u003E\u003Cp data-pid=\"_1LQlEdX\"\u003E网络安全越来越受到大家的关注，所以系统安全目前是项目过程非常重要的一个环节，安全审计也是系统中非常重要的部分。\u003C\u002Fp\u003E\u003Cp data-pid=\"zhhnOsTi\"\u003E通过系统日志分析，可以判断一些非法攻击，非法调用，以及系统处理过程中的安全隐患。\u003C\u002Fp\u003E\u003Cp data-pid=\"iuVFxJep\"\u003E比如，大家平时都在做运营系统，其中运营人员在通过界面处理一些数据的时候，如果没有清楚的日志操作记录，一条数据被删除或者修改，你是无法找到是谁操作的，但是如果你做了相应的记录，该数据被谁删除或者修改就会一目了然。\u003C\u002Fp\u003E\u003Cp data-pid=\"ebeJId64\"\u003E\u003Cb\u003E通过以上 5 点说明了日志在项目维护过程中的重要作用\u003C\u002Fb\u003E\u003C\u002Fp\u003E\u003Cp data-pid=\"3jIHKhab\"\u003E一个系统是否容易维护，很大程度上是基于程序员在程序开发过程中的代码日志是怎么记录的。\u003C\u002Fp\u003E\u003Cp data-pid=\"QmGg3b-f\"\u003E日志记录的越清楚，维护起来就越容易，有的程序员没有日志记录意识，或者对日志记录认识不清，或者是不知道日志该如何记录，这势必会给项目后期的维护带来一个个大坑。\u003C\u002Fp\u003E\u003Cp data-pid=\"LrjFzGpx\"\u003E当项目经理让你解决一个线上问题的时候，正好遇到了一个没有日志记录习惯的人写的代码，你就能体会到那种痛苦，不由地想要爆粗口。\u003C\u002Fp\u003E\u003Cp data-pid=\"OVksOGBe\"\u003E因此，作为一个程序员来说，掌握代码日志的记录方法，是程序员生涯的一项基本功。写代码时做好日志记录是“即利人又利己”的做法，不写日志记录就是“损人不利己”的做法。\u003C\u002Fp\u003E\u003Ch3\u003E二、Java 日志使用的困惑\u003C\u002Fh3\u003E\u003Cp data-pid=\"z3umGkN8\"\u003E大多数的程序员都能认识到日志在项目中的重要性，可是对日志记录具体要怎么做，做到什么程度，日志记录用什么工具，会有很多困惑。\u003C\u002Fp\u003E\u003Ch3\u003E1. 工具困惑\u003C\u002Fh3\u003E\u003Cp data-pid=\"sQkk9HIN\"\u003E作为 Java 程序员，幸运的是，Java 拥有功能和性能都非常强大的日志库；不幸的是，这样的日志库有不止一个，相信每个人都会对JUL(Java Util Log)、JCL(Commons Logging)、Log4j、SLF4J、Logback、Log4j2 等等的日志工具，到底使用什么产生感到困扰。\u003C\u002Fp\u003E\u003Cp data-pid=\"YLopX1Nw\"\u003E下面的第三节：“Java 日志演化历史”，第四节：“使用不同框架的 Java 日志示例说明”，为大家解惑 Java 日志框架的使用问题。\u003C\u002Fp\u003E\u003Ch3\u003E2. 使用困惑\u003C\u002Fh3\u003E\u003Cp data-pid=\"_R-47BqZ\"\u003E有的程序员即使知道写 Java 程序用什么日志工具，可能对日志记录具体应该怎么写，写什么东西，什么情况下要写，这些仁者见仁智者见智的东西也会产生困扰。\u003C\u002Fp\u003E\u003Cp data-pid=\"CcS6lths\"\u003E下面的第五节：“项目中日志记录遵守哪些原则”，为大家解惑日志记录要遵守哪些原则。\u003C\u002Fp\u003E\u003Cp data-pid=\"3JoOFrFh\"\u003E有的程序员知道了该用哪个 Java 框架，也知道了日志记录的原则，可能还会对具体在项目中到底该如何操作产生困惑。\u003C\u002Fp\u003E\u003Ch3\u003E3. 实战困惑\u003C\u002Fh3\u003E\u003Cp data-pid=\"gp-xsw9b\"\u003E下面的第六节：“一个推荐的项目 Java 日志实例”，为大家展示在具体项目过程中的应用示例。\u003C\u002Fp\u003E\u003Ch3\u003E三、Java 日志演化历史\u003C\u002Fh3\u003E\u003Cp data-pid=\"2j_SCLlM\"\u003E最先出现的是 Apache 开源社区的 Log4j，这个日志确实是应用最广泛的日志工具，成为了 Java 日志的事实上的标准。\u003C\u002Fp\u003E\u003Cp data-pid=\"-I9rSW3P\"\u003E然而，当时 Java 的开发主体 Sun 公司认为自己才是正统，在 Jdk1.4中增加了 JUL（在java.util.logging包下）日志实现，企图对抗 Log4j，但是却造成了 Java 目前开发者记录日志局面的混乱，迄今为止仍饱受诟病。\u003C\u002Fp\u003E\u003Cp data-pid=\"Qr9NDW35\"\u003E当然也有其他日志工具的出现，基本都是各自为政，这些日志系统互相没有关联。\u003C\u002Fp\u003E\u003Cp data-pid=\"EG6FBqOr\"\u003E\u003Cb\u003E为什么 JUL 的出现会导致开发局面混乱呢？\u003C\u002Fb\u003E\u003C\u002Fp\u003E\u003Cp data-pid=\"SqFLLvRO\"\u003E想象下你的项目应用使用 Log4j，然后使用了一个第三方库，而第三方库使用了 JUL，那么，你的应用就得同时使用 Log4j 和JUL两个日志工具了，然后又有需要使用另外一个第三方库，但是这个第三方库使用了 Log4j 和 JUL 之外的 simplelog。这个时候你的应用里各种 log 工具满天飞，这势必会使你的程序员感到崩溃。因为这些日志工具互相没有关联，替换和统一日志工具也就变成了比较棘手的一件事情。\u003C\u002Fp\u003E\u003Cblockquote data-pid=\"K0nc3Hdf\"\u003E如果你遇到了这种问题，你该如何解决呢？\u003Cbr\u002F\u003E解决这个问题，我们会用到一个设计模式——“适配器模式”，即把这个问题进行抽象，抽象出一个接口层，对每个日志实现都进行适配，这样这些提供给别人的库都直接使用抽象的接口层即可。\u003C\u002Fblockquote\u003E\u003Cp data-pid=\"aT3JddHb\"\u003E为了搞定这个日常开发中比较棘手的问题，Apache 开源社区提供了一个日志框架作为日志的抽象，叫 commons-logging，也被称为 JCL(java common logging)，JCL 对各种日志接口进行抽象，抽象出一个接口层，对每个日志实现都进行适配，这样这些提供给别人的库都直接使用抽象层即可，确实出色地完成了兼容主流的日志实现（Log4j、JUL、simplelog 等），较好的解决了上述问题，基本一统江湖，就连顶顶大名的 spring 也是依赖了 JCL。\u003C\u002Fp\u003E\u003Cp data-pid=\"2u8DcW_J\"\u003E但是美好的日子并不长，作为元老级日志 Log4j 的作者 (Ceki Gülcü)，他觉得 JCL 不够优秀，所以他再度出山，搞出了一套更优雅的日志框架 SLF4J（这个也是抽象层），即简单日志门面（Simple Logging Facade for Java），并为 SLF4J 实现了一个亲儿子——logback，确实更加优雅了。\u003C\u002Fp\u003E\u003Cp data-pid=\"Nf20Y1E4\"\u003E最后，Ceki Gülcü 觉得还是得照顾下自己的 “大儿子”——Log4j，又把 Log4j 进行了改造，就是所谓的 Log4j2，同时支持 JCL 以及 SLF4J。\u003C\u002Fp\u003E\u003Cp data-pid=\"jqOXGAyG\"\u003ESLF4J 的出现，又使 Java 日志体系变得混乱起来。\u003C\u002Fp\u003E\u003Cp data-pid=\"CqhIw3sK\"\u003E下面是一张目前 Java 日志体系的示意图：\u003C\u002Fp\u003E\u003Cp class=\"ztext-empty-paragraph\"\u003E\u003Cbr\u002F\u003E\u003C\u002Fp\u003E\u003Cfigure data-size=\"normal\"\u003E\u003Cnoscript\u003E\u003Cimg src=\"https:\u002F\u002Fpic3.zhimg.com\u002Fv2-1d6add0536d2266211f2569a84a681ae_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"822\" data-rawheight=\"418\" class=\"origin_image zh-lightbox-thumb\" width=\"822\" data-original=\"https:\u002F\u002Fpic3.zhimg.com\u002Fv2-1d6add0536d2266211f2569a84a681ae_r.jpg\"\u002F\u003E\u003C\u002Fnoscript\u003E\u003Cimg src=\"data:image\u002Fsvg+xml;utf8,&lt;svg xmlns=&#39;http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg&#39; width=&#39;822&#39; height=&#39;418&#39;&gt;&lt;\u002Fsvg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"822\" data-rawheight=\"418\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"822\" data-original=\"https:\u002F\u002Fpic3.zhimg.com\u002Fv2-1d6add0536d2266211f2569a84a681ae_r.jpg\" data-actualsrc=\"https:\u002F\u002Fpic3.zhimg.com\u002Fv2-1d6add0536d2266211f2569a84a681ae_b.jpg\" data-original-token=\"v2-2adab8652816bd48fdbc77edb4a85285\"\u002F\u003E\u003C\u002Ffigure\u003E\u003Cp class=\"ztext-empty-paragraph\"\u003E\u003Cbr\u002F\u003E\u003C\u002Fp\u003E\u003Cp data-pid=\"VovoKzMK\"\u003E日志库 Log4j，JUL，logback 是互相不兼容的，没有共同的 Interface，所以 commons-logging、SLF4J 通过适配器模式，抽象出来一个共同的接口，然后根据使用的具体日志框架来实现日志。\u003C\u002Fp\u003E\u003Cp data-pid=\"g2KgRu03\"\u003Ejava common logging 和 SLF4J 都是日志的接口，供用户使用，而没有提供实现，Log4j，JUL，logback 等等才是日志的真正实现。\u003C\u002Fp\u003E\u003Cp data-pid=\"lqJmyV8p\"\u003E当我们调用日志接口时，接口会自动寻找恰当的实现，返回一个合适的实例给我们服务。这些过程都是透明化的，用户不需要进行任何操作。\u003C\u002Fp\u003E\u003Cp data-pid=\"g1E3AF5w\"\u003E工具官方网站Log4j\u003Ca href=\"https:\u002F\u002Flink.zhihu.com\u002F?target=http%3A\u002F\u002Flogging.apache.org\u002Flog4j\u002F1.2\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"\u003E\u003Cspan class=\"invisible\"\u003Ehttp:\u002F\u002F\u003C\u002Fspan\u003E\u003Cspan class=\"visible\"\u003Elogging.apache.org\u002Flog4\u003C\u002Fspan\u003E\u003Cspan class=\"invisible\"\u003Ej\u002F1.2\u003C\u002Fspan\u003E\u003Cspan class=\"ellipsis\"\u003E\u003C\u002Fspan\u003E\u003C\u002Fa\u003EJCL\u003Ca href=\"https:\u002F\u002Flink.zhihu.com\u002F?target=http%3A\u002F\u002Fcommons.apache.org\u002Fproper\u002Fcommons-logging\u002F\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"\u003E\u003Cspan class=\"invisible\"\u003Ehttp:\u002F\u002F\u003C\u002Fspan\u003E\u003Cspan class=\"visible\"\u003Ecommons.apache.org\u002Fprop\u003C\u002Fspan\u003E\u003Cspan class=\"invisible\"\u003Eer\u002Fcommons-logging\u002F\u003C\u002Fspan\u003E\u003Cspan class=\"ellipsis\"\u003E\u003C\u002Fspan\u003E\u003C\u002Fa\u003ESLF4J\u003Ca href=\"https:\u002F\u002Flink.zhihu.com\u002F?target=http%3A\u002F\u002Fwww.slf4j.org\u002F\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\"\u003Ehttp:\u002F\u002Fwww.slf4j.org\u003C\u002Fa\u003Elogback\u003Ca href=\"https:\u002F\u002Flink.zhihu.com\u002F?target=http%3A\u002F\u002Flogback.qos.ch\u002F\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\"\u003Ehttp:\u002F\u002Flogback.qos.ch\u003C\u002Fa\u003ELog4j2\u003Ca href=\"https:\u002F\u002Flink.zhihu.com\u002F?target=https%3A\u002F\u002Flogging.apache.org\u002Flog4j\u002F2.x\u002F\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"\u003E\u003Cspan class=\"invisible\"\u003Ehttps:\u002F\u002F\u003C\u002Fspan\u003E\u003Cspan class=\"visible\"\u003Elogging.apache.org\u002Flog4\u003C\u002Fspan\u003E\u003Cspan class=\"invisible\"\u003Ej\u002F2.x\u002F\u003C\u002Fspan\u003E\u003Cspan class=\"ellipsis\"\u003E\u003C\u002Fspan\u003E\u003C\u002Fa\u003E\u003C\u002Fp\u003E\u003Ch3\u003E四、使用不同框架的 Java 日志示例说明\u003C\u002Fh3\u003E\u003Ch3\u003E1. Log4j\u003C\u002Fh3\u003E\u003Ch3\u003E\u003Cb\u003ELog4j 介绍\u003C\u002Fb\u003E\u003C\u002Fh3\u003E\u003Cp data-pid=\"bUgyUsV9\"\u003ELog4j（log for java）是 Apache 的一个开源项目，通过使用 Log4j，我们可以控制日志信息输出到日志文件、也可以控制每一条日志的输出格式；通过定义每一条日志信息的级别，我们能够更加细致地控制日志的生成过程。这些可以通过一个配置文件来灵活地进行配置，而不需要修改应用程序的代码。\u003C\u002Fp\u003E\u003Ch3\u003E\u003Cb\u003ELog4j 使用步骤说明\u003C\u002Fb\u003E\u003C\u002Fh3\u003E\u003Cp data-pid=\"P4pXYNAb\"\u003E\u003Cb\u003E（1）选择 jar 包\u003C\u002Fb\u003E\u003C\u002Fp\u003E\u003Cp data-pid=\"lxW7FwA7\"\u003E加入 log4j-1.2.17.jar 到 Libraries 下，如果使用 maven 项目，也可以选择在 pom.xml 中新增依赖如下：\u003C\u002Fp\u003E\u003Cdiv class=\"highlight\"\u003E\u003Cpre\u003E\u003Ccode class=\"language-text\"\u003E&lt;dependency&gt;\n        &lt;groupId&gt;log4j&lt;\u002FgroupId&gt;\n        &lt;artifactId&gt;log4j&lt;\u002FartifactId&gt;\n        &lt;version&gt;1.2.17&lt;\u002Fversion&gt;\n    &lt;\u002Fdependency&gt;\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003C\u002Fdiv\u003E\u003Cp data-pid=\"lHSSSnnt\"\u003E\u003Cb\u003E（2）log4j.properties 配置\u003C\u002Fb\u003E\u003C\u002Fp\u003E\u003Cp data-pid=\"T-ZV7wud\"\u003ELog4j 有三个主要组件：记录器， appender 和布局。这三种类型的组件协同工作，使开发人员能够根据消息类型和级别记录消息，并在运行时控制这些消息的格式和报告位置。\u003C\u002Fp\u003E\u003Cp data-pid=\"GIvySbHj\"\u003ELog4j 建议只使用四个级别，优先级从高到低分别是 ERROR、WARN、INFO、DEBUG。\u003C\u002Fp\u003E\u003Cp data-pid=\"0Gc6XKmo\"\u003E比如定义了 INFO 级别，只有等于及高于这个级别的才进行处理，则应用程序中所有 DEBUG 级别的日志信息将不被打印出来。ALL，打印所有的日志；OFF，关闭所有的日志输出。\u003C\u002Fp\u003E\u003Cp data-pid=\"Ee1pG5pH\"\u003EappenderName，就是指定日志信息输出到哪个地方。可同时指定多个输出目的地。\u003C\u002Fp\u003E\u003Cp data-pid=\"OdpHGfY-\"\u003E在 src 根目录下建立 log4j.properties，根据自己的需求，相应的修改其中的配置，其内容如下所示：\u003C\u002Fp\u003E\u003Cdiv class=\"highlight\"\u003E\u003Cpre\u003E\u003Ccode class=\"language-text\"\u003E#配置根Logger\n    #改代码表示输输出info级别以上的日志，文件分别输出，一个是file，一个是error\n    log4j.rootLogger=info,file,error\n\n    #配置file日志信息输出目的地Appender\n    #定义名为file的输出端是每天产生一个日志文件\n    log4j.appender.file=org.apache.log4j.DailyRollingFileAppender\n    #指定日志信息的最低输出级别位INFO，默认为DEBUG。\n    log4j.appender.file.Threshold=INFO\n    #指定当前消息输出到jpm\u002Flog4j\u002Flog.log文件中\n    log4j.appender.file.File=\u002Fjpm\u002Flog4j\u002Flog.log\n    #指定按天来滚动日志文件\n    log4j.appender.file.DatePattern=yyyy-MM-dd\n    #配置日志信息的格式（布局）Layout是可以灵活地指定布局模式\n    log4j.appender.file.layout=org.apache.log4j.PatternLayout\n    #格式化日志，Log4j采用类似C语言中的printf函数的打印格式格式化日志信息\n    log4j.appender.file.layout.ConversionPattern=[%d{yyyy-MM-ddHH:mm:ss}][%-5p][jpm-%c{1}-%M(%L)]-%m%n\n    #指定输出信息的编码\n    log4j.appender.file.encoding=UTF-8\n\n    #配置error日志信息输出目的地Appender\n    #定义名为error的输出端是每天产生一个日志文件\n    log4j.appender.error=org.apache.log4j.DailyRollingFileAppender\n    #指定日志信息的最低输出级别位ERROR，默认为DEBUG。\n    log4j.appender.error.Threshold=ERROR\n    #指定当前消息输出到jpm\u002Flog4j\u002Ferror.log文件中\n    log4j.appender.error.File=\u002Fjpm\u002Flog4j\u002Ferror.log\n    #指定按月来滚动日志文件\n    log4j.appender.error.DatePattern=yyyy-MM\n    #配置日志信息的格式（布局）Layout是可以灵活地指定布局模式\n    log4j.appender.error.layout=org.apache.log4j.PatternLayout\n    #格式化日志，Log4j采用类似C语言中的printf函数的打印格式格式化日志信息\n    log4j.appender.error.layout.ConversionPattern=[%d{yyyy-MM-ddHH:mm:ss}][%-5p][jpm-%c{1}-%M(%L)]-%m%n\n    #指定输出信息的编码\n    log4j.appender.error.encoding=UTF-8\n\n    #使某个功能的日志单独输出到指定的日志文件\n    log4j.logger.saveUserLog=INFO,saveUserLog\n    #该配置就是让job的日志只输出到自己指定的日志文件中,表示Logger不会在父Logger的appender里输出，默认为true。\n    log4j.additivity.saveUserLog=false\n    log4j.appender.saveUserLog=org.apache.log4j.DailyRollingFileAppender\n    log4j.appender.saveUserLog.File=\u002Fjpm\u002Flog4j\u002FsaveUserLog.log\n    log4j.appender.saveUserLog.DatePattern=yyyy-MM-dd\n    log4j.appender.saveUserLog.Append=true\n    log4j.appender.saveUserLog.layout=org.apache.log4j.PatternLayout\n    log4j.appender.saveUserLog.layout.ConversionPattern=%m%n\n    log4j.appender.error.encoding=UTF-8\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003C\u002Fdiv\u003E\u003Cp data-pid=\"n0YZDvPL\"\u003E\u003Cb\u003E（3）输出日志的代码示例\u003C\u002Fb\u003E\u003C\u002Fp\u003E\u003Cdiv class=\"highlight\"\u003E\u003Cpre\u003E\u003Ccode class=\"language-text\"\u003Epackage jpm;\n\n    import org.apache.log4j.Logger;\n\n    public class TestLog4j {\n\n        public static void main(String[] args) {\n            final Logger logger = Logger.getLogger(TestLog4j.class);\n            final Logger saveUserLog = Logger.getLogger(&#34;saveUserLog&#34;);\n\n            if (logger.isDebugEnabled()) {\n                logger.debug(&#34;debug&#34;);\n            }\n\n            logger.info(&#34;info&#34;);\n            logger.error(&#34;error&#34;);\n\n            saveUserLog.info(&#34;张三,男,26岁,北京大学,2018-05-19,学霸&#34;);\n\n        }\n\n    }\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003C\u002Fdiv\u003E\u003Cp data-pid=\"qbGldGJG\"\u003E\u003Cb\u003E（4）以上代码示例生成的日志文件及日志详情\u003C\u002Fb\u003E\u003C\u002Fp\u003E\u003Cp class=\"ztext-empty-paragraph\"\u003E\u003Cbr\u002F\u003E\u003C\u002Fp\u003E\u003Cfigure data-size=\"normal\"\u003E\u003Cnoscript\u003E\u003Cimg src=\"https:\u002F\u002Fpic1.zhimg.com\u002Fv2-a8903ca4a3d5f97a1d696998fc00e150_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"254\" data-rawheight=\"73\" class=\"content_image\" width=\"254\"\u002F\u003E\u003C\u002Fnoscript\u003E\u003Cimg src=\"data:image\u002Fsvg+xml;utf8,&lt;svg xmlns=&#39;http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg&#39; width=&#39;254&#39; height=&#39;73&#39;&gt;&lt;\u002Fsvg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"254\" data-rawheight=\"73\" class=\"content_image lazy\" width=\"254\" data-actualsrc=\"https:\u002F\u002Fpic1.zhimg.com\u002Fv2-a8903ca4a3d5f97a1d696998fc00e150_b.jpg\" data-original-token=\"v2-199db3607171c7a88f5f3497ad9c73ae\"\u002F\u003E\u003C\u002Ffigure\u003E\u003Cp class=\"ztext-empty-paragraph\"\u003E\u003Cbr\u002F\u003E\u003C\u002Fp\u003E\u003Cp class=\"ztext-empty-paragraph\"\u003E\u003Cbr\u002F\u003E\u003C\u002Fp\u003E\u003Cfigure data-size=\"normal\"\u003E\u003Cnoscript\u003E\u003Cimg src=\"https:\u002F\u002Fpic1.zhimg.com\u002Fv2-28c0f94b7a08b1d3526714e7f53f83c4_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"631\" data-rawheight=\"108\" class=\"origin_image zh-lightbox-thumb\" width=\"631\" data-original=\"https:\u002F\u002Fpic1.zhimg.com\u002Fv2-28c0f94b7a08b1d3526714e7f53f83c4_r.jpg\"\u002F\u003E\u003C\u002Fnoscript\u003E\u003Cimg src=\"data:image\u002Fsvg+xml;utf8,&lt;svg xmlns=&#39;http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg&#39; width=&#39;631&#39; height=&#39;108&#39;&gt;&lt;\u002Fsvg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"631\" data-rawheight=\"108\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"631\" data-original=\"https:\u002F\u002Fpic1.zhimg.com\u002Fv2-28c0f94b7a08b1d3526714e7f53f83c4_r.jpg\" data-actualsrc=\"https:\u002F\u002Fpic1.zhimg.com\u002Fv2-28c0f94b7a08b1d3526714e7f53f83c4_b.jpg\" data-original-token=\"v2-7f50ae0866ec53599ae4c689cfa4f96e\"\u002F\u003E\u003C\u002Ffigure\u003E\u003Cp class=\"ztext-empty-paragraph\"\u003E\u003Cbr\u002F\u003E\u003C\u002Fp\u003E\u003Ch3\u003E2. JUL（在 java.util.logging 包下）使用示例\u003C\u002Fh3\u003E\u003Ch3\u003E\u003Cb\u003EJUL 介绍\u003C\u002Fb\u003E\u003C\u002Fh3\u003E\u003Cp data-pid=\"BzR6rWVp\"\u003EJava Logging API 是 Sun 公司于 2002 年 5 月正式发布的。它是自 J2SE 1.4 版本开始提供的一个新的应用程序接口，需 JDK1.4 版本以上才能支持，java.util.logging.* 包是 JDK 的日志记录 API。\u003C\u002Fp\u003E\u003Cp class=\"ztext-empty-paragraph\"\u003E\u003Cbr\u002F\u003E\u003C\u002Fp\u003E\u003Cfigure data-size=\"normal\"\u003E\u003Cnoscript\u003E\u003Cimg src=\"https:\u002F\u002Fpic2.zhimg.com\u002Fv2-66266d98c49b4d310d53694cfdc74b01_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1104\" data-rawheight=\"484\" class=\"origin_image zh-lightbox-thumb\" width=\"1104\" data-original=\"https:\u002F\u002Fpic2.zhimg.com\u002Fv2-66266d98c49b4d310d53694cfdc74b01_r.jpg\"\u002F\u003E\u003C\u002Fnoscript\u003E\u003Cimg src=\"data:image\u002Fsvg+xml;utf8,&lt;svg xmlns=&#39;http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg&#39; width=&#39;1104&#39; height=&#39;484&#39;&gt;&lt;\u002Fsvg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1104\" data-rawheight=\"484\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1104\" data-original=\"https:\u002F\u002Fpic2.zhimg.com\u002Fv2-66266d98c49b4d310d53694cfdc74b01_r.jpg\" data-actualsrc=\"https:\u002F\u002Fpic2.zhimg.com\u002Fv2-66266d98c49b4d310d53694cfdc74b01_b.jpg\" data-original-token=\"v2-8d87534ecc6379f1bb85be2b597f5db2\"\u002F\u003E\u003C\u002Ffigure\u003E\u003Cp class=\"ztext-empty-paragraph\"\u003E\u003Cbr\u002F\u003E\u003C\u002Fp\u003E\u003Cp data-pid=\"MJ7Uv75_\"\u003E\u003Cb\u003E强烈不推荐使用 java.util.logging 记录日志，因此这里不提供对应示例给大家。\u003C\u002Fb\u003E\u003C\u002Fp\u003E\u003Ch3\u003E3. java common logging 介绍\u003C\u002Fh3\u003E\u003Cp data-pid=\"p9OE31lh\"\u003Ecommons-logging 提供的是一个日志接口，是为那些需要建立在不同环境下使用不同日志架构的组件或库的开发者创建的，其中包括 log4j 以及 Java log 的日志架构。commons-logging 有两个基本的抽象类：Log(基本记录器) 和 LogFactory(负责创建 Log 实例)。把日志信息抽象成 commons-logging 的 Log 接口，并由 commons-logging 在运行时决定使用哪种日志架构。因为 Log4j 的强大功能，commons-logging 一般会和 Log4j 一起使用，这几乎成为了 Java 日志的标准工具。\u003C\u002Fp\u003E\u003Ch3\u003E4. SLF4J介绍\u003C\u002Fh3\u003E\u003Cp data-pid=\"dtXIIXuR\"\u003ESLF4J 全称为 Simple Logging Facade for JAVA，即 java 简单日志门面。 和 commons-loging 一样也是对不同日志框架提供的一个门面封装，可以在部署的时候不修改任何配置即可接入一种日志实现方案，能支持多个参数，并通过 {} 占位符进行替换。\u003C\u002Fp\u003E\u003Cp data-pid=\"vAZjpGwA\"\u003E\u003Cb\u003E看这个 Log4J 示例：\u003C\u002Fb\u003E\u003C\u002Fp\u003E\u003Cdiv class=\"highlight\"\u003E\u003Cpre\u003E\u003Ccode class=\"language-text\"\u003ELogger.debug(&#34;Hello &#34; + name);\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003C\u002Fdiv\u003E\u003Cp data-pid=\"hUddtB1m\"\u003E由于字符串拼接的问题（注：上述语句会先拼接字符串，再根据当前级别是否低于 debug 决定是否输出本条日志，即使不输出日志，字符串拼接操作也会执行），因此许多公司一般强制使用下面的语句，这样只有当前处于DEBUG级别时才会执行字符串拼接：\u003C\u002Fp\u003E\u003Cdiv class=\"highlight\"\u003E\u003Cpre\u003E\u003Ccode class=\"language-text\"\u003Eif (logger.isDebugEnabled()) {\n        LOGGER.debug(“Hello ” + name);\n    }\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003C\u002Fdiv\u003E\u003Cp data-pid=\"m6r7XPtt\"\u003E它避免了字符串拼接问题，可是有点太繁琐了。而 SLF4J 提供下面这样简单的语法:\u003C\u002Fp\u003E\u003Cdiv class=\"highlight\"\u003E\u003Cpre\u003E\u003Ccode class=\"language-text\"\u003ELOGGER.debug(&#34;Hello {}&#34;, name);\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003C\u002Fdiv\u003E\u003Cp data-pid=\"0PCr6ZX2\"\u003E它的形式类似第一条示例，但是又没有字符串拼接问题，也不像第二条那样繁琐。\u003C\u002Fp\u003E\u003Cp data-pid=\"MYp8Pw_Z\"\u003E正是因为 SLF4J 的这个占位符功能，使得人们越来越多的使用 SLF4J 这个接口用到实际开发项目中。\u003C\u002Fp\u003E\u003Cp data-pid=\"8KKc5s4B\"\u003E\u003Cb\u003E为什么需要日志接口，直接使用具体的实现不就行了吗？\u003C\u002Fb\u003E\u003C\u002Fp\u003E\u003Cp data-pid=\"n38c-yJI\"\u003E接口用于定制规范，可以有多个实现，使用时是面向接口的（导入的包都是 SLF4J 的包或者是 JCL 的包，而不是具体某个日志框架中的包），即直接和接口交互，不直接使用实现，所以当需要更换实现的时候，直接更换实就可以了，而不用更改代码中的日志相关代码。\u003C\u002Fp\u003E\u003Cp data-pid=\"jqyBR6Cr\"\u003E比如：SLF4J 定义了一套日志接口，项目中使用的日志框架是 log4j，开发中调用的所有接口都是 SLF4J 的，不直接使用 log4j，项目应用调用 SLF4J 的接口，SLF4J 的接口去调用 log4j 的实现，整个应用程序并没有直接使用 log4j，当项目需要更换更加优秀的日志框架时（如 logback）只需要引入 logback 的 jar 和 logback 对应的配置文件即可，完全不用更改 Java 代码中的日志相关的代码 \u003Ca href=\"https:\u002F\u002Flink.zhihu.com\u002F?target=http%3A\u002F\u002Flogger.info\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"\u003E\u003Cspan class=\"invisible\"\u003Ehttp:\u002F\u002F\u003C\u002Fspan\u003E\u003Cspan class=\"visible\"\u003Elogger.info\u003C\u002Fspan\u003E\u003Cspan class=\"invisible\"\u003E\u003C\u002Fspan\u003E\u003C\u002Fa\u003E(“hello world”)，也不用修改日志相关的类的导入的包（import org.slf4j.Logger; import org.slf4j.LoggerFactory;）。\u003C\u002Fp\u003E\u003Cp data-pid=\"PpM7GiNI\"\u003E因此日志门面的使用，为后续具体日志系统的实现更换带来了方便。\u003C\u002Fp\u003E\u003Ch3\u003E5. logback 使用示例\u003C\u002Fh3\u003E\u003Ch3\u003E\u003Cb\u003ELogBack 介绍\u003C\u002Fb\u003E\u003C\u002Fh3\u003E\u003Cp data-pid=\"Vw4mJ5uw\"\u003ELogBack 和 Log4j 都是开源日记工具库，LogBack 是 Log4j 的改良版本，比 Log4j 拥有更多的特性，同时也带来很大性能提升。LogBack 官方建议配合 Slf4j 使用，这样可以灵活地替换底层日志框架。\u003C\u002Fp\u003E\u003Cp data-pid=\"vOI4RIaF\"\u003ELogback 主要由三个模块组成：\u003C\u002Fp\u003E\u003Cul\u003E\u003Cli data-pid=\"Tn81oR5U\"\u003Elogback-core\u003C\u002Fli\u003E\u003Cli data-pid=\"6v3N7aLy\"\u003Elogback-classic\u003C\u002Fli\u003E\u003Cli data-pid=\"TqPkf2mB\"\u003Elogback-access\u003C\u002Fli\u003E\u003C\u002Ful\u003E\u003Cp data-pid=\"WnsAUXFV\"\u003E其中 logback-core 提供了 LogBack 的核心功能，是另外两个组件的基础。logback-classic 的地位和作用等同于 Log4J，它也被认为是 Log4J 的一个改进版，并且它实现了简单日志门面 SLF4J，所以当想配合 SLF4J 使用时，需要将 logback-classic 加入 classpath；而 logback-access 主要作为一个与 Servlet 容器交互的模块，比如说 tomcat 或者 jetty，提供一些与 HTTP 访问相关的功能。\u003C\u002Fp\u003E\u003Ch3\u003E\u003Cb\u003Elogback 使用步骤说明\u003C\u002Fb\u003E\u003C\u002Fh3\u003E\u003Cp data-pid=\"j4ONvIMn\"\u003E\u003Cb\u003E（1）选择 jar 包\u003C\u002Fb\u003E\u003C\u002Fp\u003E\u003Cp data-pid=\"WZIhjbwM\"\u003E想在 Java 程序中使用 Logback，需要依赖三个 jar 包，分别是 slf4j-api，logback-core，logback-classic。其中 slf4j-api 并不是 Logback 的一部分，建议将 SLF4J 与 Logback 结合使用。\u003C\u002Fp\u003E\u003Cp data-pid=\"w3KHOOQ-\"\u003E\u003Cb\u003Epom.xml\u003C\u002Fb\u003E\u003C\u002Fp\u003E\u003Cdiv class=\"highlight\"\u003E\u003Cpre\u003E\u003Ccode class=\"language-text\"\u003E&lt;dependency&gt;\n                &lt;groupId&gt;org.slf4j&lt;\u002FgroupId&gt;\n                &lt;artifactId&gt;slf4j-api&lt;\u002FartifactId&gt;\n                &lt;version&gt;1.7.25&lt;\u002Fversion&gt;\n            &lt;\u002Fdependency&gt;\n\n            &lt;dependency&gt;\n                &lt;groupId&gt;ch.qos.logback&lt;\u002FgroupId&gt;\n                &lt;artifactId&gt;logback-core&lt;\u002FartifactId&gt;\n                &lt;version&gt;1.2.3&lt;\u002Fversion&gt;\n            &lt;\u002Fdependency&gt;\n\n            &lt;dependency&gt;\n                &lt;groupId&gt;ch.qos.logback&lt;\u002FgroupId&gt;\n                &lt;artifactId&gt;logback-classic&lt;\u002FartifactId&gt;\n                &lt;version&gt;1.2.3&lt;\u002Fversion&gt;\n            &lt;\u002Fdependency&gt;\n\n            &lt;dependency&gt;\n                &lt;groupId&gt;ch.qos.logback&lt;\u002FgroupId&gt;\n                &lt;artifactId&gt;logback-access&lt;\u002FartifactId&gt;\n                &lt;version&gt;1.2.3&lt;\u002Fversion&gt;\n            &lt;\u002Fdependency&gt;\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003C\u002Fdiv\u003E\u003Cp data-pid=\"pghg1g6x\"\u003E\u003Cb\u003E（2）logback.xml\u003C\u002Fb\u003E\u003C\u002Fp\u003E\u003Cp data-pid=\"yiwngQml\"\u003E在 src 根目录下建立 logback.xml，根据自己的需求，相应的修改其中的配置，其内容如下所示：\u003C\u002Fp\u003E\u003Cdiv class=\"highlight\"\u003E\u003Cpre\u003E\u003Ccode class=\"language-text\"\u003E&lt;?xml version=&#34;1.0&#34; encoding=&#34;UTF-8&#34;?&gt;\n    &lt;!--日志级别以及优先级排序: OFF &gt; FATAL &gt; ERROR &gt; WARN &gt; INFO &gt; DEBUG &gt; TRACE &gt; ALL --&gt;\n    &lt;!-- status用来指定log4j本身的打印日志的级别 --&gt;\n    &lt;!--monitorInterval：Log4j能够自动检测修改配置文件和重新配置本身，设置间隔秒数 --&gt;\n    &lt;configuration status=&#34;WARN&#34; monitorInterval=&#34;30&#34;&gt;\n        &lt;!--先定义所有的appender --&gt;\n        &lt;appenders&gt;\n            &lt;!--这个输出控制台的配置 --&gt;\n            &lt;console name=&#34;Console&#34; target=&#34;SYSTEM_OUT&#34;&gt;\n                &lt;!--输出日志的格式 --&gt;\n                &lt;PatternLayout\n                    pattern=&#34;[%d{yyyy-MM-dd HH:mm:ss.SSS}] [%-5level] %l %logger{36} - %msg%n&#34; \u002F&gt;\n            &lt;\u002Fconsole&gt;\n\n            &lt;!--定义输出到指定位置的文件 --&gt;\n            &lt;File name=&#34;log&#34; fileName=&#34;\u002Fjpm\u002Flog4j2\u002Flogs\u002Flog.log&#34; append=&#34;true&#34;&gt;\n                &lt;PatternLayout\n                    pattern=&#34;[%d{yyyy-MM-dd HH:mm:ss.SSS}] [%-5level] %l %logger{36} - %msg%n&#34; \u002F&gt;\n            &lt;\u002FFile&gt;\n\n            &lt;!-- 这个会打印出所有的info及以下级别的信息，每次大小超过size，则这size大小的日志会自动存入按年份-月份建立的文件夹下面并进行压缩，作为存档 --&gt;\n            &lt;RollingFile name=&#34;RollingFileInfo&#34; fileName=&#34;\u002Fjpm\u002Flog4j2\u002Flogs\u002Finfo.log&#34;\n                filePattern=&#34;\u002Fjpm\u002Flog4j2\u002Flogs\u002F$${date:yyyy-MM}\u002Finfo-%d{yyyy-MM-dd}-%i.log&#34;&gt;\n                &lt;!--控制台只输出level及以上级别的信息（onMatch），其他的直接拒绝（onMismatch） --&gt;\n                &lt;!-- DENY，日志将立即被抛弃不再经过其他过滤器； NEUTRAL，有序列表里的下个过滤器过接着处理日志； ACCEPT，日志会被立即处理，不再经过剩余过滤器。 --&gt;\n                &lt;ThresholdFilter level=&#34;error&#34; onMatch=&#34;DENY&#34;\n                    onMismatch=&#34;ACCEPT&#34; \u002F&gt;\n                &lt;PatternLayout\n                    pattern=&#34;[%d{yyyy-MM-dd HH:mm:ss.SSS}] [%-5level] %l %logger{36} - %msg%n&#34; \u002F&gt;\n                &lt;Policies&gt;\n                    &lt;TimeBasedTriggeringPolicy \u002F&gt;\n                    &lt;SizeBasedTriggeringPolicy size=&#34;100 MB&#34; \u002F&gt;\n                &lt;\u002FPolicies&gt;\n                &lt;!-- DefaultRolloverStrategy属性如不设置，则默认为最多同一文件夹下7个文件，这里设置了30 --&gt;\n                &lt;DefaultRolloverStrategy max=&#34;30&#34; \u002F&gt;\n            &lt;\u002FRollingFile&gt;\n\n            &lt;RollingFile name=&#34;RollingFileError&#34; fileName=&#34;\u002Fjpm\u002Flog4j2\u002Flogs\u002Ferror.log&#34;\n                filePattern=&#34;\u002Fjpm\u002Flog4j2\u002Flogs\u002F$${date:yyyy-MM}\u002Ferror-%d{yyyy-MM-dd}-%i.log&#34;&gt;\n                &lt;ThresholdFilter level=&#34;ERROR&#34; onMatch=&#34;ACCEPT&#34;\n                    onMismatch=&#34;DENY&#34; \u002F&gt;\n                &lt;PatternLayout\n                    pattern=&#34;[%d{yyyy-MM-dd HH:mm:ss.SSS}] [%-5level] %l %logger{36} - %msg%n&#34; \u002F&gt;\n                &lt;Policies&gt;\n                    &lt;TimeBasedTriggeringPolicy \u002F&gt;\n                    &lt;SizeBasedTriggeringPolicy size=&#34;100 MB&#34; \u002F&gt;\n                &lt;\u002FPolicies&gt;\n            &lt;\u002FRollingFile&gt;\n        &lt;\u002Fappenders&gt;\n\n        &lt;!--只有定义了logger并引入的appender，appender才会生效 --&gt;\n        &lt;loggers&gt;\n            &lt;!--过滤掉spring和mybatis的一些无用的DEBUG信息 --&gt;\n            &lt;logger name=&#34;org.springframework&#34; level=&#34;INFO&#34;&gt;&lt;\u002Flogger&gt;\n            &lt;logger name=&#34;org.mybatis&#34; level=&#34;INFO&#34;&gt;&lt;\u002Flogger&gt;\n            &lt;root level=&#34;INFO&#34;&gt;\n                &lt;appender-ref ref=&#34;Console&#34; \u002F&gt;\n                &lt;appender-ref ref=&#34;log&#34; \u002F&gt;\n                &lt;appender-ref ref=&#34;RollingFileInfo&#34; \u002F&gt;\n                &lt;appender-ref ref=&#34;RollingFileError&#34; \u002F&gt;\n            &lt;\u002Froot&gt;\n        &lt;\u002Floggers&gt;\n\n    &lt;\u002Fconfiguration&gt;\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003C\u002Fdiv\u003E\u003Cp data-pid=\"18gnLKmD\"\u003E\u003Cb\u003E（3）输出日志的代码示例\u003C\u002Fb\u003E\u003C\u002Fp\u003E\u003Cdiv class=\"highlight\"\u003E\u003Cpre\u003E\u003Ccode class=\"language-text\"\u003Epackage jpm.logback;\n\n    import org.slf4j.Logger;\n    import org.slf4j.LoggerFactory;\n\n    public class TestLogback {\n\n        public static void main(String[] args) {\n            final Logger LOGGER = LoggerFactory.getLogger(TestLogback.class);\n            LOGGER.debug(&#34;print debug log.&#34;);\n            LOGGER.info(&#34;print info log.&#34;);\n            LOGGER.error(&#34;print error log.&#34;);\n        }\n    }\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003C\u002Fdiv\u003E\u003Cp data-pid=\"AwKc2f-P\"\u003E\u003Cb\u003E（4）打印日志结果\u003C\u002Fb\u003E\u003C\u002Fp\u003E\u003Cp class=\"ztext-empty-paragraph\"\u003E\u003Cbr\u002F\u003E\u003C\u002Fp\u003E\u003Cfigure data-size=\"normal\"\u003E\u003Cnoscript\u003E\u003Cimg src=\"https:\u002F\u002Fpic3.zhimg.com\u002Fv2-e5cf7e342e2821235428d3f1c33a7cd2_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"338\" data-rawheight=\"255\" class=\"content_image\" width=\"338\"\u002F\u003E\u003C\u002Fnoscript\u003E\u003Cimg src=\"data:image\u002Fsvg+xml;utf8,&lt;svg xmlns=&#39;http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg&#39; width=&#39;338&#39; height=&#39;255&#39;&gt;&lt;\u002Fsvg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"338\" data-rawheight=\"255\" class=\"content_image lazy\" width=\"338\" data-actualsrc=\"https:\u002F\u002Fpic3.zhimg.com\u002Fv2-e5cf7e342e2821235428d3f1c33a7cd2_b.jpg\" data-original-token=\"v2-5cc1516a4916238ca0493196a8decbe2\"\u002F\u003E\u003C\u002Ffigure\u003E\u003Cp class=\"ztext-empty-paragraph\"\u003E\u003Cbr\u002F\u003E\u003C\u002Fp\u003E\u003Cp class=\"ztext-empty-paragraph\"\u003E\u003Cbr\u002F\u003E\u003C\u002Fp\u003E\u003Cfigure data-size=\"normal\"\u003E\u003Cnoscript\u003E\u003Cimg src=\"https:\u002F\u002Fpic3.zhimg.com\u002Fv2-9c2ceb4f73b1771b0fde829117e9d33a_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1168\" data-rawheight=\"314\" class=\"origin_image zh-lightbox-thumb\" width=\"1168\" data-original=\"https:\u002F\u002Fpic3.zhimg.com\u002Fv2-9c2ceb4f73b1771b0fde829117e9d33a_r.jpg\"\u002F\u003E\u003C\u002Fnoscript\u003E\u003Cimg src=\"data:image\u002Fsvg+xml;utf8,&lt;svg xmlns=&#39;http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg&#39; width=&#39;1168&#39; height=&#39;314&#39;&gt;&lt;\u002Fsvg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1168\" data-rawheight=\"314\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1168\" data-original=\"https:\u002F\u002Fpic3.zhimg.com\u002Fv2-9c2ceb4f73b1771b0fde829117e9d33a_r.jpg\" data-actualsrc=\"https:\u002F\u002Fpic3.zhimg.com\u002Fv2-9c2ceb4f73b1771b0fde829117e9d33a_b.jpg\" data-original-token=\"v2-3cc36fec5603b3d5658e8f0c52e575f1\"\u002F\u003E\u003C\u002Ffigure\u003E\u003Cp class=\"ztext-empty-paragraph\"\u003E\u003Cbr\u002F\u003E\u003C\u002Fp\u003E\u003Cp data-pid=\"YP7oIiEC\"\u003E\u003Cb\u003E上例使用 SLF4J 做日志接口， logback 做日志实现的日志示例\u003C\u002Fb\u003E\u003C\u002Fp\u003E\u003Ch3\u003E6. Log4j2 使用示例\u003C\u002Fh3\u003E\u003Ch3\u003E\u003Cb\u003ELog4j2 介绍\u003C\u002Fb\u003E\u003C\u002Fh3\u003E\u003Cp data-pid=\"qbXjENwG\"\u003EApache Log4j 2 是对 Log4j 的升级，与其前身 Log4j 1.x 相比有了显着的改进，并提供了许多 Logback 可用的改进，同时支持 JCL 以及 SLF4J。\u003C\u002Fp\u003E\u003Ch3\u003E\u003Cb\u003ELog4j2 使用步骤说明\u003C\u002Fb\u003E\u003C\u002Fh3\u003E\u003Cp data-pid=\"RUVMCFbr\"\u003E\u003Cb\u003E（1）选择 jar 包\u003C\u002Fb\u003E\u003C\u002Fp\u003E\u003Cp data-pid=\"D_y8PHFn\"\u003E引入 Log4j2 必要的包：log4j-api、log4j-core。\u003C\u002Fp\u003E\u003Cp data-pid=\"mAypDL12\"\u003E\u003Cb\u003Epom.xml 配置\u003C\u002Fb\u003E\u003C\u002Fp\u003E\u003Cdiv class=\"highlight\"\u003E\u003Cpre\u003E\u003Ccode class=\"language-text\"\u003E&lt;dependency&gt;\n                &lt;groupId&gt;org.apache.logging.log4j&lt;\u002FgroupId&gt;\n                &lt;artifactId&gt;log4j-api&lt;\u002FartifactId&gt;\n                &lt;version&gt;2.8.2&lt;\u002Fversion&gt;\n            &lt;\u002Fdependency&gt;\n\n            &lt;dependency&gt;\n                &lt;groupId&gt;org.apache.logging.log4j&lt;\u002FgroupId&gt;\n                &lt;artifactId&gt;log4j-core&lt;\u002FartifactId&gt;\n                &lt;version&gt;2.8.2&lt;\u002Fversion&gt;\n            &lt;\u002Fdependency&gt;\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003C\u002Fdiv\u003E\u003Cp data-pid=\"DTmtl0fR\"\u003E\u003Cb\u003E（2）log2j 配置文件：log4j2.xml\u003C\u002Fb\u003E\u003C\u002Fp\u003E\u003Cdiv class=\"highlight\"\u003E\u003Cpre\u003E\u003Ccode class=\"language-text\"\u003E&lt;?xml version=&#34;1.0&#34; encoding=&#34;UTF-8&#34;?&gt;\n    &lt;!--日志级别以及优先级排序: OFF &gt; FATAL &gt; ERROR &gt; WARN &gt; INFO &gt; DEBUG &gt; TRACE &gt; ALL --&gt;\n    &lt;!-- status用来指定Log4j本身的打印日志的级别 --&gt;\n    &lt;!--monitorInterval：Log4j能够自动检测修改配置文件和重新配置本身，设置间隔秒数 --&gt;\n    &lt;configuration status=&#34;WARN&#34; monitorInterval=&#34;30&#34;&gt;\n        &lt;!--先定义所有的appender --&gt;\n        &lt;appenders&gt;\n            &lt;!--这个输出控制台的配置 --&gt;\n            &lt;console name=&#34;Console&#34; target=&#34;SYSTEM_OUT&#34;&gt;\n                &lt;!--输出日志的格式 --&gt;\n                &lt;PatternLayout\n                    pattern=&#34;[%d{yyyy-MM-dd HH:mm:ss.SSS}] [%-5level] %l %logger{36} - %msg%n&#34; \u002F&gt;\n            &lt;\u002Fconsole&gt;\n\n            &lt;!--定义输出到指定位置的文件 --&gt;\n            &lt;File name=&#34;log&#34; fileName=&#34;\u002Fjpm\u002Flog4j2\u002Flogs\u002Flog.log&#34; append=&#34;true&#34;&gt;\n                &lt;PatternLayout\n                    pattern=&#34;[%d{yyyy-MM-dd HH:mm:ss.SSS}] [%-5level] %l %logger{36} - %msg%n&#34; \u002F&gt;\n            &lt;\u002FFile&gt;\n\n            &lt;!-- 这个会打印出所有的info及以下级别的信息，每次大小超过size，则这size大小的日志会自动存入按年份-月份建立的文件夹下面并进行压缩，作为存档 --&gt;\n            &lt;RollingFile name=&#34;RollingFileInfo&#34; fileName=&#34;\u002Fjpm\u002Flog4j2\u002Flogs\u002Finfo.log&#34;\n                filePattern=&#34;\u002Fjpm\u002Flog4j2\u002Flogs\u002F$${date:yyyy-MM}\u002Finfo-%d{yyyy-MM-dd}-%i.log&#34;&gt;\n                &lt;!--控制台只输出level及以上级别的信息（onMatch），其他的直接拒绝（onMismatch） --&gt;\n                &lt;ThresholdFilter level=&#34;info&#34; onMatch=&#34;ACCEPT&#34;\n                    onMismatch=&#34;DENY&#34; \u002F&gt;\n                &lt;PatternLayout\n                    pattern=&#34;[%d{yyyy-MM-dd HH:mm:ss.SSS}] [%-5level] %l %logger{36} - %msg%n&#34; \u002F&gt;\n                &lt;Policies&gt;\n                    &lt;TimeBasedTriggeringPolicy \u002F&gt;\n                    &lt;SizeBasedTriggeringPolicy size=&#34;100 MB&#34; \u002F&gt;\n                &lt;\u002FPolicies&gt;\n                &lt;!-- DefaultRolloverStrategy属性如不设置，则默认为最多同一文件夹下7个文件，这里设置了30 --&gt;\n                &lt;DefaultRolloverStrategy max=&#34;30&#34; \u002F&gt;\n            &lt;\u002FRollingFile&gt;\n\n            &lt;RollingFile name=&#34;RollingFileError&#34; fileName=&#34;\u002Fjpm\u002Flog4j2\u002Flogs\u002Ferror.log&#34;\n                filePattern=&#34;\u002Fjpm\u002Flog4j2\u002Flogs\u002F$${date:yyyy-MM}\u002Ferror-%d{yyyy-MM-dd}-%i.log&#34;&gt;\n                &lt;ThresholdFilter level=&#34;error&#34; onMatch=&#34;ACCEPT&#34;\n                    onMismatch=&#34;DENY&#34; \u002F&gt;\n                &lt;PatternLayout\n                    pattern=&#34;[%d{yyyy-MM-dd HH:mm:ss.SSS}] [%-5level] %l %logger{36} - %msg%n&#34; \u002F&gt;\n                &lt;Policies&gt;\n                    &lt;TimeBasedTriggeringPolicy \u002F&gt;\n                    &lt;SizeBasedTriggeringPolicy size=&#34;100 MB&#34; \u002F&gt;\n                &lt;\u002FPolicies&gt;\n            &lt;\u002FRollingFile&gt;\n        &lt;\u002Fappenders&gt;\n\n        &lt;!--只有定义了logger并引入的appender，appender才会生效 --&gt;\n        &lt;loggers&gt;\n            &lt;!--过滤掉spring和mybatis的一些无用的DEBUG信息 --&gt;\n            &lt;logger name=&#34;org.springframework&#34; level=&#34;INFO&#34;&gt;&lt;\u002Flogger&gt;\n            &lt;logger name=&#34;org.mybatis&#34; level=&#34;INFO&#34;&gt;&lt;\u002Flogger&gt;\n            &lt;root level=&#34;INFO&#34;&gt;\n                &lt;appender-ref ref=&#34;Console&#34; \u002F&gt;\n                &lt;appender-ref ref=&#34;log&#34; \u002F&gt;\n                &lt;appender-ref ref=&#34;RollingFileInfo&#34; \u002F&gt;\n                &lt;appender-ref ref=&#34;RollingFileError&#34; \u002F&gt;\n            &lt;\u002Froot&gt;\n        &lt;\u002Floggers&gt;\n\n    &lt;\u002Fconfiguration&gt;\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003C\u002Fdiv\u003E\u003Cp data-pid=\"X0Jhmt9h\"\u003E\u003Cb\u003E（3）输出日志的代码示例\u003C\u002Fb\u003E\u003C\u002Fp\u003E\u003Cdiv class=\"highlight\"\u003E\u003Cpre\u003E\u003Ccode class=\"language-text\"\u003Epackage jpm.log4j2;\n\n    import org.apache.logging.log4j.LogManager;\n    import org.apache.logging.log4j.Logger;\n\n    public class TestLog4j2 {\n\n        public static void main(String[] args) {\n            final Logger LOGGER = LogManager.getLogger(LogManager.ROOT_LOGGER_NAME);\n            LOGGER.debug(&#34;TestLog4j2 debug log.&#34;);\n            LOGGER.info(&#34;TestLog4j2 info log.&#34;);\n            LOGGER.error(&#34;TestLog4j2 error log.&#34;);\n        }\n\n    }\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003C\u002Fdiv\u003E\u003Cp data-pid=\"GBzGl2Rd\"\u003E\u003Cb\u003E（4）打印日志结果\u003C\u002Fb\u003E\u003C\u002Fp\u003E\u003Cp class=\"ztext-empty-paragraph\"\u003E\u003Cbr\u002F\u003E\u003C\u002Fp\u003E\u003Cfigure data-size=\"normal\"\u003E\u003Cnoscript\u003E\u003Cimg src=\"https:\u002F\u002Fpic1.zhimg.com\u002Fv2-be11d8203d8c529c9a9020a05967bdf8_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"366\" data-rawheight=\"171\" class=\"content_image\" width=\"366\"\u002F\u003E\u003C\u002Fnoscript\u003E\u003Cimg src=\"data:image\u002Fsvg+xml;utf8,&lt;svg xmlns=&#39;http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg&#39; width=&#39;366&#39; height=&#39;171&#39;&gt;&lt;\u002Fsvg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"366\" data-rawheight=\"171\" class=\"content_image lazy\" width=\"366\" data-actualsrc=\"https:\u002F\u002Fpic1.zhimg.com\u002Fv2-be11d8203d8c529c9a9020a05967bdf8_b.jpg\" data-original-token=\"v2-be16b2bf1109c921b6421c84fbaf3e83\"\u002F\u003E\u003C\u002Ffigure\u003E\u003Cp class=\"ztext-empty-paragraph\"\u003E\u003Cbr\u002F\u003E\u003C\u002Fp\u003E\u003Cp class=\"ztext-empty-paragraph\"\u003E\u003Cbr\u002F\u003E\u003C\u002Fp\u003E\u003Cfigure data-size=\"normal\"\u003E\u003Cnoscript\u003E\u003Cimg src=\"https:\u002F\u002Fpic1.zhimg.com\u002Fv2-2f11d92ede4c1418d88ca05e481cf044_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1179\" data-rawheight=\"343\" class=\"origin_image zh-lightbox-thumb\" width=\"1179\" data-original=\"https:\u002F\u002Fpic1.zhimg.com\u002Fv2-2f11d92ede4c1418d88ca05e481cf044_r.jpg\"\u002F\u003E\u003C\u002Fnoscript\u003E\u003Cimg src=\"data:image\u002Fsvg+xml;utf8,&lt;svg xmlns=&#39;http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg&#39; width=&#39;1179&#39; height=&#39;343&#39;&gt;&lt;\u002Fsvg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1179\" data-rawheight=\"343\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"1179\" data-original=\"https:\u002F\u002Fpic1.zhimg.com\u002Fv2-2f11d92ede4c1418d88ca05e481cf044_r.jpg\" data-actualsrc=\"https:\u002F\u002Fpic1.zhimg.com\u002Fv2-2f11d92ede4c1418d88ca05e481cf044_b.jpg\" data-original-token=\"v2-30e71e8b8c7d22f21d3d8686f60b81b0\"\u002F\u003E\u003C\u002Ffigure\u003E\u003Cp class=\"ztext-empty-paragraph\"\u003E\u003Cbr\u002F\u003E\u003C\u002Fp\u003E\u003Cp data-pid=\"Mg8xR8bt\"\u003E\u003Cb\u003E（5）关于日志 level\u003C\u002Fb\u003E\u003C\u002Fp\u003E\u003Cp data-pid=\"pO9DnYrW\"\u003E共有 8 个级别，按照从低到高为：All &lt; Trace &lt; Debug &lt; Info &lt; Warn &lt; Error &lt; Fatal &lt; OFF。\u003C\u002Fp\u003E\u003Cul\u003E\u003Cli data-pid=\"nS-XPENT\"\u003E\u003Cb\u003EAll：\u003C\u002Fb\u003E最低等级的，用于打开所有日志记录\u003C\u002Fli\u003E\u003Cli data-pid=\"E7mcTKWg\"\u003E\u003Cb\u003ETrace：\u003C\u002Fb\u003E是追踪，就是程序推进以下，你就可以写个 trace 输出，所以 trace 应该会特别多，不过没关系，我们可以设置最低日志级别不让他输出\u003C\u002Fli\u003E\u003Cli data-pid=\"_POvZzVl\"\u003E\u003Cb\u003EDebug：\u003C\u002Fb\u003E指出细粒度信息事件对调试应用程序是非常有帮助的\u003C\u002Fli\u003E\u003Cli data-pid=\"94qftXEK\"\u003E\u003Cb\u003EInfo：\u003C\u002Fb\u003E消息在粗粒度级别上突出强调应用程序的运行过程\u003C\u002Fli\u003E\u003Cli data-pid=\"DCybVhUR\"\u003E\u003Cb\u003EWarn：\u003C\u002Fb\u003E输出警告及 warn 以下级别的日志\u003C\u002Fli\u003E\u003Cli data-pid=\"92OjdKRM\"\u003E\u003Cb\u003EError：\u003C\u002Fb\u003E输出错误信息日志\u003C\u002Fli\u003E\u003Cli data-pid=\"6H9VaXAl\"\u003E\u003Cb\u003EFatal：\u003C\u002Fb\u003E输出每个严重的错误事件将会导致应用程序的退出的日志\u003C\u002Fli\u003E\u003Cli data-pid=\"B4ODx4rP\"\u003E\u003Cb\u003EOFF：\u003C\u002Fb\u003E最高等级的，用于关闭所有日志记录\u003C\u002Fli\u003E\u003C\u002Ful\u003E\u003Cp data-pid=\"22x0_qio\"\u003E程序会打印高于或等于所设置级别的日志，设置的日志等级越高，打印出来的日志就越少。\u003C\u002Fp\u003E\u003Ch3\u003E7. JCL(java common logging) + Log4j 使用示例\u003C\u002Fh3\u003E\u003Ch3\u003E\u003Cb\u003EJCL(java common logging) + Log4j 介绍\u003C\u002Fb\u003E\u003C\u002Fh3\u003E\u003Cp data-pid=\"FWWWdmp5\"\u003E使用 commons-logging 的 Log 接口，并由 commons-logging 在运行时决定使用哪种日志架构（如 Log4j）。现在，Apache 通用日志工具 commons-logging 和 Log4j 已经成为 Java 日志的标准工具，这个组合是比较常用的一个日志框架组合。\u003C\u002Fp\u003E\u003Ch3\u003E\u003Cb\u003EJCL(java common logging) + Log4j 使用步骤说明\u003C\u002Fb\u003E\u003C\u002Fh3\u003E\u003Cp data-pid=\"K_4AzMd3\"\u003E\u003Cb\u003E（1）选择 jar 包\u003C\u002Fb\u003E\u003C\u002Fp\u003E\u003Cdiv class=\"highlight\"\u003E\u003Cpre\u003E\u003Ccode class=\"language-text\"\u003Ecommons-logging-1.2 + log4j1.2.17\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003C\u002Fdiv\u003E\u003Cp data-pid=\"4xYS5L_3\"\u003E\u003Cb\u003Epom.xml\u003C\u002Fb\u003E\u003C\u002Fp\u003E\u003Cdiv class=\"highlight\"\u003E\u003Cpre\u003E\u003Ccode class=\"language-text\"\u003E&lt;dependency&gt;\n                &lt;groupId&gt;commons-logging&lt;\u002FgroupId&gt;\n                &lt;artifactId&gt;commons-logging&lt;\u002FartifactId&gt;\n                &lt;version&gt;1.2&lt;\u002Fversion&gt;\n            &lt;\u002Fdependency&gt;\n\n            &lt;dependency&gt;\n                &lt;groupId&gt;log4j&lt;\u002FgroupId&gt;\n                &lt;artifactId&gt;log4j&lt;\u002FartifactId&gt;\n                &lt;version&gt;1.2.17&lt;\u002Fversion&gt;\n            &lt;\u002Fdependency&gt;\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003C\u002Fdiv\u003E\u003Cp data-pid=\"8tfbgOXS\"\u003E\u003Cb\u003E（2）配置 common-logging.properties 文件\u003C\u002Fb\u003E\u003C\u002Fp\u003E\u003Cp data-pid=\"XXRICk28\"\u003E只需要一行即可，放在 classpath 下，如果是 Maven 中就在 src\u002Fresources 下，不过如果没有 common-logging.properties 文件，但是 src 下有 log4j.properties 配置也可以正常的输出 Log4j 设置的日志。\u003C\u002Fp\u003E\u003Cdiv class=\"highlight\"\u003E\u003Cpre\u003E\u003Ccode class=\"language-text\"\u003Eorg.apache.commons.logging.Log=org.apache.commons.logging.impl.Log4JLogger\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003C\u002Fdiv\u003E\u003Cp data-pid=\"a3nnDuw8\"\u003E\u003Cb\u003E（3）log4j.properties 配置\u003C\u002Fb\u003E\u003C\u002Fp\u003E\u003Cp data-pid=\"HBSLz81_\"\u003E参考《Log4j 使用步骤说明》\u003C\u002Fp\u003E\u003Cp data-pid=\"jfQ2ng39\"\u003E\u003Cb\u003E（4）输出日志的代码示例\u003C\u002Fb\u003E\u003C\u002Fp\u003E\u003Cdiv class=\"highlight\"\u003E\u003Cpre\u003E\u003Ccode class=\"language-text\"\u003Epackage jpm.jcllog4j;\n\n    import org.apache.commons.logging.Log;\n    import org.apache.commons.logging.LogFactory;\n\n    public class TestJclAndLog4j {\n\n        public static void main(String[] args) {\n            final Log LOGGER = LogFactory.getLog(TestJclAndLog4j.class);\n            LOGGER.debug(&#34;TestJclAndLog4j debug log.&#34;);\n            LOGGER.info(&#34;TestJclAndLog4j info log.&#34;);\n            LOGGER.error(&#34;TestJclAndLog4j error log.&#34;);\n        }\n    }\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003C\u002Fdiv\u003E\u003Cp data-pid=\"BZ7_7H3F\"\u003E\u003Cb\u003E（5）打印日志结果\u003C\u002Fb\u003E\u003C\u002Fp\u003E\u003Cp class=\"ztext-empty-paragraph\"\u003E\u003Cbr\u002F\u003E\u003C\u002Fp\u003E\u003Cfigure data-size=\"normal\"\u003E\u003Cnoscript\u003E\u003Cimg src=\"https:\u002F\u002Fpic2.zhimg.com\u002Fv2-953e2376a2fac3d9af730ceb2ca40a81_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"354\" data-rawheight=\"162\" class=\"content_image\" width=\"354\"\u002F\u003E\u003C\u002Fnoscript\u003E\u003Cimg src=\"data:image\u002Fsvg+xml;utf8,&lt;svg xmlns=&#39;http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg&#39; width=&#39;354&#39; height=&#39;162&#39;&gt;&lt;\u002Fsvg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"354\" data-rawheight=\"162\" class=\"content_image lazy\" width=\"354\" data-actualsrc=\"https:\u002F\u002Fpic2.zhimg.com\u002Fv2-953e2376a2fac3d9af730ceb2ca40a81_b.jpg\" data-original-token=\"v2-64c9de4d1cd1896e0bd079ef0bc007c7\"\u002F\u003E\u003C\u002Ffigure\u003E\u003Cp class=\"ztext-empty-paragraph\"\u003E\u003Cbr\u002F\u003E\u003C\u002Fp\u003E\u003Cp class=\"ztext-empty-paragraph\"\u003E\u003Cbr\u002F\u003E\u003C\u002Fp\u003E\u003Cfigure data-size=\"normal\"\u003E\u003Cnoscript\u003E\u003Cimg src=\"https:\u002F\u002Fpic1.zhimg.com\u002Fv2-f3927da8d2998d641730acb45ca0cf0c_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"701\" data-rawheight=\"309\" class=\"origin_image zh-lightbox-thumb\" width=\"701\" data-original=\"https:\u002F\u002Fpic1.zhimg.com\u002Fv2-f3927da8d2998d641730acb45ca0cf0c_r.jpg\"\u002F\u003E\u003C\u002Fnoscript\u003E\u003Cimg src=\"data:image\u002Fsvg+xml;utf8,&lt;svg xmlns=&#39;http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg&#39; width=&#39;701&#39; height=&#39;309&#39;&gt;&lt;\u002Fsvg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"701\" data-rawheight=\"309\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"701\" data-original=\"https:\u002F\u002Fpic1.zhimg.com\u002Fv2-f3927da8d2998d641730acb45ca0cf0c_r.jpg\" data-actualsrc=\"https:\u002F\u002Fpic1.zhimg.com\u002Fv2-f3927da8d2998d641730acb45ca0cf0c_b.jpg\" data-original-token=\"v2-5e272fe974c5ada5ff9795a19688643d\"\u002F\u003E\u003C\u002Ffigure\u003E\u003Cp class=\"ztext-empty-paragraph\"\u003E\u003Cbr\u002F\u003E\u003C\u002Fp\u003E\u003Ch3\u003E8. SLF4J + Log4j 使用示例\u003C\u002Fh3\u003E\u003Ch3\u003E\u003Cb\u003ESLF4J + Log4j 介绍\u003C\u002Fb\u003E\u003C\u002Fh3\u003E\u003Cp data-pid=\"_Arpl6Fx\"\u003ESLF4j+Log4j 与 JCL+Log4J 的使用方式差不多，主要差异就在 SLF4J 用 用绑定包（slf4j-Log4j12.jar）来告知用哪种日志实现，而 JCL 是通过配置文件来获得该选择哪个日志实现。\u003C\u002Fp\u003E\u003Ch3\u003E\u003Cb\u003ESLF4J + Log4j使用步骤说明\u003C\u002Fb\u003E\u003C\u002Fh3\u003E\u003Cp data-pid=\"pCOwzoCF\"\u003E\u003Cb\u003E（1）选择jar包\u003C\u002Fb\u003E\u003C\u002Fp\u003E\u003Cdiv class=\"highlight\"\u003E\u003Cpre\u003E\u003Ccode class=\"language-text\"\u003Eslf4j-api.jar + slf4j-log4j12.jar\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003C\u002Fdiv\u003E\u003Cp data-pid=\"sBTDkNye\"\u003E\u003Cb\u003Epom.xml\u003C\u002Fb\u003E\u003C\u002Fp\u003E\u003Cdiv class=\"highlight\"\u003E\u003Cpre\u003E\u003Ccode class=\"language-text\"\u003E&lt;dependency&gt;\n                &lt;groupId&gt;org.slf4j&lt;\u002FgroupId&gt;\n                &lt;artifactId&gt;slf4j-api&lt;\u002FartifactId&gt;\n                &lt;version&gt;1.7.25&lt;\u002Fversion&gt;\n            &lt;\u002Fdependency&gt;\n\n            &lt;dependency&gt;\n                &lt;groupId&gt;org.slf4j&lt;\u002FgroupId&gt;\n                &lt;artifactId&gt;slf4j-log4j12&lt;\u002FartifactId&gt;\n                &lt;version&gt;1.7.25&lt;\u002Fversion&gt;\n            &lt;\u002Fdependency&gt;\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003C\u002Fdiv\u003E\u003Cp data-pid=\"NdWjy1fK\"\u003E\u003Cb\u003E（2）log4j.properties 配置文件\u003C\u002Fb\u003E\u003C\u002Fp\u003E\u003Cp data-pid=\"aWuIYd0a\"\u003E参考《Log4j 使用步骤说明》\u003C\u002Fp\u003E\u003Cp data-pid=\"y9kaCjle\"\u003E\u003Cb\u003E（3）输出日志的代码示例\u003C\u002Fb\u003E\u003C\u002Fp\u003E\u003Cdiv class=\"highlight\"\u003E\u003Cpre\u003E\u003Ccode class=\"language-text\"\u003Epackage jpm.slf4jlog4j;\n\n    import org.slf4j.Logger;\n    import org.slf4j.LoggerFactory;\n\n    public class TestSlf4jAndLog4j {\n\n        public static void main(String[] args) {\n            final Logger LOGGER = LoggerFactory.getLogger(TestSlf4jAndLog4j.class);\n            LOGGER.debug(&#34;TestSlf4jAndLog4j debug log：{}&#34;, &#34;debug&#34;);\n            LOGGER.info(&#34;TestSlf4jAndLog4j info log：{}&#34;, &#34;info&#34;);\n            LOGGER.error(&#34;TestSlf4jAndLog4j error log：{}&#34;, &#34;error&#34;);\n        }\n\n    }\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003C\u002Fdiv\u003E\u003Cp data-pid=\"paVNGwXN\"\u003E\u003Cb\u003E（4）打印日志结果\u003C\u002Fb\u003E\u003C\u002Fp\u003E\u003Cp class=\"ztext-empty-paragraph\"\u003E\u003Cbr\u002F\u003E\u003C\u002Fp\u003E\u003Cfigure data-size=\"normal\"\u003E\u003Cnoscript\u003E\u003Cimg src=\"https:\u002F\u002Fpic1.zhimg.com\u002Fv2-990aca0df5ebd71d0a29ebad5a5d6858_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"362\" data-rawheight=\"140\" class=\"content_image\" width=\"362\"\u002F\u003E\u003C\u002Fnoscript\u003E\u003Cimg src=\"data:image\u002Fsvg+xml;utf8,&lt;svg xmlns=&#39;http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg&#39; width=&#39;362&#39; height=&#39;140&#39;&gt;&lt;\u002Fsvg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"362\" data-rawheight=\"140\" class=\"content_image lazy\" width=\"362\" data-actualsrc=\"https:\u002F\u002Fpic1.zhimg.com\u002Fv2-990aca0df5ebd71d0a29ebad5a5d6858_b.jpg\" data-original-token=\"v2-0f846b1f6f9593c4783a513c832f9988\"\u002F\u003E\u003C\u002Ffigure\u003E\u003Cp class=\"ztext-empty-paragraph\"\u003E\u003Cbr\u002F\u003E\u003C\u002Fp\u003E\u003Cp class=\"ztext-empty-paragraph\"\u003E\u003Cbr\u002F\u003E\u003C\u002Fp\u003E\u003Cfigure data-size=\"normal\"\u003E\u003Cnoscript\u003E\u003Cimg src=\"https:\u002F\u002Fpic1.zhimg.com\u002Fv2-25cbbac94a5b4ad99c08b6ebc3cc12f0_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"804\" data-rawheight=\"165\" class=\"origin_image zh-lightbox-thumb\" width=\"804\" data-original=\"https:\u002F\u002Fpic1.zhimg.com\u002Fv2-25cbbac94a5b4ad99c08b6ebc3cc12f0_r.jpg\"\u002F\u003E\u003C\u002Fnoscript\u003E\u003Cimg src=\"data:image\u002Fsvg+xml;utf8,&lt;svg xmlns=&#39;http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg&#39; width=&#39;804&#39; height=&#39;165&#39;&gt;&lt;\u002Fsvg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"804\" data-rawheight=\"165\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"804\" data-original=\"https:\u002F\u002Fpic1.zhimg.com\u002Fv2-25cbbac94a5b4ad99c08b6ebc3cc12f0_r.jpg\" data-actualsrc=\"https:\u002F\u002Fpic1.zhimg.com\u002Fv2-25cbbac94a5b4ad99c08b6ebc3cc12f0_b.jpg\" data-original-token=\"v2-d0d365a0da0baf270ca486f6419bc18b\"\u002F\u003E\u003C\u002Ffigure\u003E\u003Cp class=\"ztext-empty-paragraph\"\u003E\u003Cbr\u002F\u003E\u003C\u002Fp\u003E\u003Ch3\u003E五、项目中日志记录遵守哪些原则\u003C\u002Fh3\u003E\u003Ch3\u003E1. 阿里巴巴 Java 开发手册的日志规约\u003C\u002Fh3\u003E\u003Cp data-pid=\"dUtB9E-g\"\u003E大家可以参考去年 10 月份阿里推出的《阿里巴巴 Java 开发手册（终极版）.pdf》里的第二章第二节“日志规约”部分的内容。\u003C\u002Fp\u003E\u003Ch3\u003E2. 个人经验总结\u003C\u002Fh3\u003E\u003Cp data-pid=\"mNJUKxoJ\"\u003E记录项目日志要注意以下几点：\u003C\u002Fp\u003E\u003Col\u003E\u003Cli data-pid=\"cHnXBMER\"\u003E注意日志级别，尤其是 info 和 error 不能用混。\u003C\u002Fli\u003E\u003Cli data-pid=\"AbPxDLg1\"\u003E注意记录信息的准确性，切记日志表达不清楚。\u003C\u002Fli\u003E\u003Cli data-pid=\"yhvB-o4e\"\u003E注意不同的代码段日志说明不能重复。\u003C\u002Fli\u003E\u003Cli data-pid=\"OYgtMnkn\"\u003E捕获异常后，要及时记录异常详细信息，并把异常传递到外部。\u003C\u002Fli\u003E\u003Cli data-pid=\"al3XMdJr\"\u003E时刻铭记，日志的记录是为了后期查询问题带来方便，因此重要的代码务必要记录日志。\u003C\u002Fli\u003E\u003C\u002Fol\u003E\u003Ch3\u003E六、一个推荐的项目 Java 日志实例\u003C\u002Fh3\u003E\u003Cp data-pid=\"8P2z4_PL\"\u003E经过以上代码的分析，我们项目中使用的日志一般会选用一个日志接口和一个具体的日志实现。\u003C\u002Fp\u003E\u003Cp data-pid=\"BELLGgSl\"\u003E那么日志接口是选 JCL 呢，还是选 SLF4J 呢？下面我们把他俩做个对比，具体日志实现为 Log4j，如下图：\u003C\u002Fp\u003E\u003Cp class=\"ztext-empty-paragraph\"\u003E\u003Cbr\u002F\u003E\u003C\u002Fp\u003E\u003Cfigure data-size=\"normal\"\u003E\u003Cnoscript\u003E\u003Cimg src=\"https:\u002F\u002Fpic3.zhimg.com\u002Fv2-d80377fa8f2af3220eb3574ec4bbe8b2_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"783\" data-rawheight=\"471\" class=\"origin_image zh-lightbox-thumb\" width=\"783\" data-original=\"https:\u002F\u002Fpic3.zhimg.com\u002Fv2-d80377fa8f2af3220eb3574ec4bbe8b2_r.jpg\"\u002F\u003E\u003C\u002Fnoscript\u003E\u003Cimg src=\"data:image\u002Fsvg+xml;utf8,&lt;svg xmlns=&#39;http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg&#39; width=&#39;783&#39; height=&#39;471&#39;&gt;&lt;\u002Fsvg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"783\" data-rawheight=\"471\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"783\" data-original=\"https:\u002F\u002Fpic3.zhimg.com\u002Fv2-d80377fa8f2af3220eb3574ec4bbe8b2_r.jpg\" data-actualsrc=\"https:\u002F\u002Fpic3.zhimg.com\u002Fv2-d80377fa8f2af3220eb3574ec4bbe8b2_b.jpg\" data-original-token=\"v2-34026634fa0d43cf9434d4b4b3facc4c\"\u002F\u003E\u003C\u002Ffigure\u003E\u003Cp class=\"ztext-empty-paragraph\"\u003E\u003Cbr\u002F\u003E\u003C\u002Fp\u003E\u003Cp data-pid=\"uZNgIINl\"\u003E从上图可以看出，用 slf4j 作为日志接口，对项目来说更好一些。\u003C\u002Fp\u003E\u003Cp data-pid=\"jlXqtZ7D\"\u003E所以，在实际项目中，我一般建议使用 SLF4J+Log4j 或者 slf4j+logback。\u003C\u002Fp\u003E\u003Cp data-pid=\"xp1rZavR\"\u003E\u003Cb\u003E配置文件参见第四节\u003C\u002Fb\u003E\u003C\u002Fp\u003E\u003Cp data-pid=\"x3stdjTP\"\u003E\u003Cb\u003E推荐程序片段如下\u003C\u002Fb\u003E\u003C\u002Fp\u003E\u003Cdiv class=\"highlight\"\u003E\u003Cpre\u003E\u003Ccode class=\"language-text\"\u003Etry {\n                LOGGER.info(&#34;根据用户编码查询用户信息-开始，userId：{}&#34; , userId);\n                User user = userService.getUserById(userId);\n                LOGGER.info(&#34;根据用户编码查询用户信息-结束，userId：{}&#34; , userId);\n            } catch (CustomException e) {\n                LOGGER.error(&#34;根据用户编码查询用户信息-自定义异常:{}&#34; , e.getMessage());\n                throw new CustomException(&#34;根据用户编码查询用户信息-自定义异常{}&#34; , e.getMessage(), e);\n            } catch (Exception e) {\n                LOGGER.error(&#34;根据用户编码查询用户信息-捕获异常:{}&#34; , e.toString());\n                throw new ServiceException(根据用户编码查询用户信息-捕获异常:{}&#34; , e.toString(), e);\n            }\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003C\u002Fdiv\u003E\u003Cp data-pid=\"lWViCJ9n\"\u003E到此，Java 日志从入门到实战  就结束了，咱们下次再见，谢谢。\u003C\u002Fp\u003E\u003Cp\u003E\u003C\u002Fp\u003E","adminClosedComment":false,"topics":[{"url":"https:\u002F\u002Fwww.zhihu.com\u002Fapi\u002Fv4\u002Ftopics\u002F19561132","type":"topic","id":"19561132","name":"Java"},{"url":"https:\u002F\u002Fwww.zhihu.com\u002Fapi\u002Fv4\u002Ftopics\u002F19552330","type":"topic","id":"19552330","name":"程序员"},{"url":"https:\u002F\u002Fwww.zhihu.com\u002Fapi\u002Fv4\u002Ftopics\u002F19550517","type":"topic","id":"19550517","name":"互联网"}],"voteupCount":99,"voting":0,"heavyUpStatus":"allow_heavy_up","column":{"description":"","canManage":false,"intro":"","isFollowing":false,"urlToken":"c_123624235","id":"c_123624235","articlesCount":47,"acceptSubmission":true,"title":"深度挖掘互联网","url":"https:\u002F\u002Fzhuanlan.zhihu.com\u002Fc_123624235","commentPermission":"all","created":1504186337,"updated":1599144854,"imageUrl":"https:\u002F\u002Fpicx.zhimg.com\u002Fv2-b4c124a3239f78d9920ce3dc8953c662_720w.jpg?source=172ae18b","author":{"isFollowed":false,"avatarUrlTemplate":"https:\u002F\u002Fpica.zhimg.com\u002Fv2-bd3990504cc277ae357ceec090d6059a.jpg?source=172ae18b","uid":"885881764663402496","userType":"people","isFollowing":false,"urlToken":"li-liang-48-56","id":"80c32c1881f1ac539d35fddbd83a8be2","description":"平时是个技术男，偶尔把工作上的经历，毕业后的生活经验给大家分享，避免一些不必要的麻烦和陷阱！","name":"李亮","isAdvertiser":false,"headline":"软件工程师，大数据，云计算，分享生活点点滴滴","gender":1,"url":"\u002Fpeople\u002F80c32c1881f1ac539d35fddbd83a8be2","avatarUrl":"https:\u002F\u002Fpica.zhimg.com\u002Fv2-bd3990504cc277ae357ceec090d6059a_l.jpg?source=172ae18b","isOrg":false,"type":"people","badgeV2":{"title":"","mergedBadges":[],"detailBadges":[],"icon":"","nightIcon":""}},"followers":81,"type":"column"},"commentCount":15,"contributions":[{"id":20747013,"state":"accepted","type":"include","column":{"description":"","canManage":false,"intro":"","isFollowing":false,"urlToken":"c_123624235","id":"c_123624235","articlesCount":47,"acceptSubmission":true,"title":"深度挖掘互联网","url":"https:\u002F\u002Fzhuanlan.zhihu.com\u002Fc_123624235","commentPermission":"all","created":1504186337,"updated":1599144854,"imageUrl":"https:\u002F\u002Fpicx.zhimg.com\u002Fv2-b4c124a3239f78d9920ce3dc8953c662_720w.jpg?source=172ae18b","author":{"isFollowed":false,"avatarUrlTemplate":"https:\u002F\u002Fpica.zhimg.com\u002Fv2-bd3990504cc277ae357ceec090d6059a.jpg?source=172ae18b","uid":"885881764663402496","userType":"people","isFollowing":false,"urlToken":"li-liang-48-56","id":"80c32c1881f1ac539d35fddbd83a8be2","description":"平时是个技术男，偶尔把工作上的经历，毕业后的生活经验给大家分享，避免一些不必要的麻烦和陷阱！","name":"李亮","isAdvertiser":false,"headline":"软件工程师，大数据，云计算，分享生活点点滴滴","gender":1,"url":"\u002Fpeople\u002F80c32c1881f1ac539d35fddbd83a8be2","avatarUrl":"https:\u002F\u002Fpica.zhimg.com\u002Fv2-bd3990504cc277ae357ceec090d6059a_l.jpg?source=172ae18b","isOrg":false,"type":"people","badgeV2":{"title":"","mergedBadges":[],"detailBadges":[],"icon":"","nightIcon":""}},"followers":81,"type":"column"}},{"id":20747014,"state":"accepted","type":"include","column":{"description":"《深入分析java web技术内幕》在读分享；","canManage":false,"intro":"","isFollowing":false,"urlToken":"c_1008650342774534144","id":"c_1008650342774534144","articlesCount":19,"acceptSubmission":true,"title":"java 技术分享","url":"https:\u002F\u002Fzhuanlan.zhihu.com\u002Fc_1008650342774534144","commentPermission":"all","created":1533260981,"updated":1599157715,"imageUrl":"https:\u002F\u002Fpicx.zhimg.com\u002F4b70deef7_720w.jpg?source=172ae18b","author":{"isFollowed":false,"avatarUrlTemplate":"https:\u002F\u002Fpicx.zhimg.com\u002Fv2-73dfc8b7e5a06571d9b87868141e5b98.jpg?source=172ae18b","uid":"746143544636379136","userType":"people","isFollowing":false,"urlToken":"wang-li-guo-98","id":"9a6bfc8a539975c8cb46d8c03f052717","description":"公众号： 薪火传。 汇聚求学同行者，借鉴优秀，摆脱迷茫。大学时间很短，学海有崖。短短几年的学习时间肯定有迷茫，困惑。一个人可以走的很快，但一群人可以走的更久。摆脱迷茫，成为更好的自己。快来加入。","name":"薪火传","isAdvertiser":false,"headline":"","gender":1,"url":"\u002Fpeople\u002F9a6bfc8a539975c8cb46d8c03f052717","avatarUrl":"https:\u002F\u002Fpica.zhimg.com\u002Fv2-73dfc8b7e5a06571d9b87868141e5b98_l.jpg?source=172ae18b","isOrg":false,"type":"people","badgeV2":{"title":"","mergedBadges":[],"detailBadges":[],"icon":"","nightIcon":""}},"followers":25,"type":"column"}}],"isTitleImageFullScreen":false,"upvotedFollowees":[],"commercialInfo":{"isCommercial":false,"plugin":{}},"suggestEdit":{"status":false,"reason":"","tip":"","url":"","title":""},"reason":"","annotationAction":[],"canTip":false,"tipjarorsCount":0,"isLabeled":false,"hasPublishingDraft":false,"isFavorited":false,"favlistsCount":161,"isNormal":true,"status":0,"activityToppingInfo":{"state":"untopped"},"shareText":"Java 日志从入门到实战 - 来自知乎专栏「深度挖掘互联网」，作者: 秃头母猿 https:\u002F\u002Fzhuanlan.zhihu.com\u002Fp\u002F64353891 （想看更多？下载 @知乎 App：http:\u002F\u002Fweibo.com\u002Fp\u002F100404711598 ）","canComment":{"status":true,"reason":""},"mcnFpShow":-1,"isVisible":true,"isLiked":false,"likedCount":22,"hasColumn":true,"republishers":[],"isNewLinkCard":true,"emojiReaction":{"likeCount":22,"likeHasSet":false},"abParam":{"qaHiddenVoteup":"1","rsInterest1":""},"attachedInfo":"kgIjCgkxMDI0MzAyMDUSCDY0MzUzODkxGAciCklNQUdFX1RFWFQ=","shareGuide":{"hasPositiveBubble":false,"hasTimeBubble":false,"hitShareGuideCluster":false},"settings":{"tableOfContents":{"enabled":false}},"canReference":false,"reactionInstruction":{}}},"columns":{"c_123624235":{"description":"","canManage":false,"intro":"","isFollowing":false,"urlToken":"c_123624235","id":"c_123624235","articlesCount":47,"acceptSubmission":true,"title":"深度挖掘互联网","url":"https:\u002F\u002Fzhuanlan.zhihu.com\u002Fc_123624235","commentPermission":"all","created":1504186337,"updated":1599144854,"imageUrl":"https:\u002F\u002Fpicx.zhimg.com\u002Fv2-b4c124a3239f78d9920ce3dc8953c662_720w.jpg?source=172ae18b","author":{"isFollowed":false,"avatarUrlTemplate":"https:\u002F\u002Fpica.zhimg.com\u002Fv2-bd3990504cc277ae357ceec090d6059a.jpg?source=172ae18b","uid":"885881764663402496","userType":"people","isFollowing":false,"urlToken":"li-liang-48-56","id":"80c32c1881f1ac539d35fddbd83a8be2","description":"平时是个技术男，偶尔把工作上的经历，毕业后的生活经验给大家分享，避免一些不必要的麻烦和陷阱！","name":"李亮","isAdvertiser":false,"headline":"软件工程师，大数据，云计算，分享生活点点滴滴","gender":1,"url":"\u002Fpeople\u002F80c32c1881f1ac539d35fddbd83a8be2","avatarUrl":"https:\u002F\u002Fpica.zhimg.com\u002Fv2-bd3990504cc277ae357ceec090d6059a_l.jpg?source=172ae18b","isOrg":false,"type":"people","badgeV2":{"title":"","mergedBadges":[],"detailBadges":[],"icon":"","nightIcon":""}},"followers":81,"type":"column"},"c_1008650342774534144":{"description":"《深入分析java web技术内幕》在读分享；","canManage":false,"intro":"","isFollowing":false,"urlToken":"c_1008650342774534144","id":"c_1008650342774534144","articlesCount":19,"acceptSubmission":true,"title":"java 技术分享","url":"https:\u002F\u002Fzhuanlan.zhihu.com\u002Fc_1008650342774534144","commentPermission":"all","created":1533260981,"updated":1599157715,"imageUrl":"https:\u002F\u002Fpicx.zhimg.com\u002F4b70deef7_720w.jpg?source=172ae18b","author":{"isFollowed":false,"avatarUrlTemplate":"https:\u002F\u002Fpicx.zhimg.com\u002Fv2-73dfc8b7e5a06571d9b87868141e5b98.jpg?source=172ae18b","uid":"746143544636379136","userType":"people","isFollowing":false,"urlToken":"wang-li-guo-98","id":"9a6bfc8a539975c8cb46d8c03f052717","description":"公众号： 薪火传。 汇聚求学同行者，借鉴优秀，摆脱迷茫。大学时间很短，学海有崖。短短几年的学习时间肯定有迷茫，困惑。一个人可以走的很快，但一群人可以走的更久。摆脱迷茫，成为更好的自己。快来加入。","name":"薪火传","isAdvertiser":false,"headline":"","gender":1,"url":"\u002Fpeople\u002F9a6bfc8a539975c8cb46d8c03f052717","avatarUrl":"https:\u002F\u002Fpica.zhimg.com\u002Fv2-73dfc8b7e5a06571d9b87868141e5b98_l.jpg?source=172ae18b","isOrg":false,"type":"people","badgeV2":{"title":"","mergedBadges":[],"detailBadges":[],"icon":"","nightIcon":""}},"followers":25,"type":"column"}},"topics":{},"roundtables":{},"favlists":{},"comments":{},"notifications":{},"ebooks":{},"activities":{},"feeds":{},"pins":{},"promotions":{},"drafts":{},"chats":{},"posts":{},"zvideos":{},"zvideoContributions":{},"briefs":{},"eduCourses":{}},"currentUser":"","account":{"unlockTicketStatus":false,"unlockTicket":null,"challenge":[],"errorStatus":false,"message":"","isFetching":false,"accountInfo":{},"urlToken":{"loading":false},"cardUserInfo":{"vipInfo":{}},"handleWidget":{},"widgetList":[],"userWidgetId":""},"settings":{"socialBind":null,"inboxMsg":null,"notification":{},"email":{},"privacyFlag":null,"blockedUsers":{"isFetching":false,"paging":{"pageNo":1,"pageSize":6},"data":[]},"blockedFollowees":{"isFetching":false,"paging":{"pageNo":1,"pageSize":6},"data":[]},"ignoredTopics":{"isFetching":false,"paging":{"pageNo":1,"pageSize":6},"data":[]},"restrictedTopics":null,"laboratory":{}},"notification":{},"people":{"profileStatus":{},"activitiesByUser":{},"answersByUser":{},"answersSortByVotesByUser":{},"answersIncludedByUser":{},"votedAnswersByUser":{},"thankedAnswersByUser":{},"voteAnswersByUser":{},"thankAnswersByUser":{},"topicAnswersByUser":{},"zvideosByUser":{},"articlesByUser":{},"articlesSortByVotesByUser":{},"articlesIncludedByUser":{},"pinsByUser":{},"questionsByUser":{},"commercialQuestionsByUser":{},"favlistsByUser":{},"followingByUser":{},"followersByUser":{},"mutualsByUser":{},"followingColumnsByUser":{},"followingQuestionsByUser":{},"followingFavlistsByUser":{},"followingTopicsByUser":{},"publicationsByUser":{},"columnsByUser":{},"allFavlistsByUser":{},"brands":null,"creationsByUser":{},"creationsSortByVotesByUser":{},"creationsFeed":{},"infinity":{},"batchUsers":{},"profileInfinity":null},"env":{"ab":{"config":{"params":[],"experiments":[],"chains":[],"encodedParams":"CgInBxIBAA=="},"triggers":{}},"abV2":{"config":{"paramMap":{"in_editor_title":{"value":"0"},"pc_mou_cre_remove":{"value":"0"},"ws_pin_contentpub":{"value":"0"},"ws_pre_guess_his":{"value":"0"},"ws_platform_new":{"value":"0"},"pm_noanonymity_A":{"value":"0"}},"abMap":{}},"triggers":{}},"userAgent":{"Edge":false,"IE":false,"Wechat":false,"Weibo":false,"QQ":false,"MQQBrowser":false,"Qzone":false,"Mobile":false,"Android":false,"iOS":false,"isAppleDevice":false,"Zhihu":false,"ZhihuHybrid":false,"isBot":false,"Tablet":false,"UC":false,"Quark":false,"Sogou":false,"Qihoo":false,"Baidu":false,"BaiduApp":false,"Safari":false,"GoogleBot":false,"AndroidDaily":false,"iOSDaily":false,"WxMiniProgram":false,"BaiduMiniProgram":false,"QQMiniProgram":false,"JDMiniProgram":false,"isWebView":false,"isMiniProgram":false,"origin":"Mozilla\u002F5.0 (Windows NT 10.0; Win64; x64) AppleWebKit\u002F537.36 (KHTML, like Gecko) Typora\u002F1.3.8 Chrome\u002F100.0.4896.160 Electron\u002F18.3.0 Safari\u002F537.36"},"appViewConfig":{},"ctx":{"path":"\u002Fp\u002F64353891","query":{},"href":"http:\u002F\u002Fzhuanlan.zhihu.com\u002Fp\u002F64353891","host":"zhuanlan.zhihu.com"},"trafficSource":"production","edition":{"beijing":false,"baidu":false,"sogou":false,"baiduBeijing":false,"sogouBeijing":false,"sogouInput":false,"oppoSearch":false,"baiduSearch":false,"googleSearch":false,"shenma":false,"miniProgram":false,"xiaomi":false,"huaweiSearch":false},"theme":"light","appHeaderTheme":{"current":"normal","disable":true,"normal":{"bgColor":"GBK99A"},"custom":{"bgColor":"GBK99A"}},"enableShortcut":true,"referer":"","xUDId":"","mode":"ssr","conf":{},"xTrafficFreeOrigin":"","ipInfo":{"cityName":"天津","countryName":"中国","regionName":"天津","countryCode":"CN"},"logged":false,"vars":{"passThroughHeaders":{}}},"me":{"columnContributions":[]},"label":{},"ecommerce":{},"comments":{"pagination":{},"collapsed":{},"reverse":{},"reviewing":{},"conversation":{},"parent":{}},"commentsV2":{"stickers":[],"commentWithPicPermission":{},"notificationsComments":{},"pagination":{},"collapsed":{},"reverse":{},"reviewing":{},"conversation":{},"conversationMore":{},"parent":{}},"pushNotifications":{"default":{"isFetching":false,"isDrained":false,"ids":[]},"follow":{"isFetching":false,"isDrained":false,"ids":[]},"vote_thank":{"isFetching":false,"isDrained":false,"ids":[]},"currentTab":"default","notificationsCount":{"default":0,"follow":0,"vote_thank":0}},"messages":{"data":{},"currentTab":"common","messageCount":0},"register":{"registerValidateSucceeded":null,"registerValidateErrors":{},"registerConfirmError":null,"sendDigitsError":null,"registerConfirmSucceeded":null},"login":{"loginUnregisteredError":false,"loginBindWechatError":false,"loginConfirmError":null,"sendDigitsError":null,"needSMSIdentify":false,"validateDigitsError":false,"loginConfirmSucceeded":null,"qrcodeLoginToken":"","qrcodeLoginScanStatus":0,"qrcodeLoginError":null,"qrcodeLoginReturnNewToken":false},"switches":{},"captcha":{"captchaNeeded":false,"captchaValidated":false},"sms":{"supportedCountries":[]},"chat":{"chats":{},"inbox":{"recents":{"isFetching":false,"isDrained":false,"isPrevDrained":false,"result":[],"next":null,"key":null},"strangers":{"isFetching":false,"isDrained":false,"isPrevDrained":false,"result":[],"next":null,"key":null},"friends":{"isFetching":false,"isDrained":false,"isPrevDrained":false,"result":[],"next":null,"key":null},"search":{"isFetching":false,"isDrained":false,"isPrevDrained":false,"result":[],"next":null,"key":null},"config":{"newCount":0,"strangerMessageSwitch":false,"strangerMessageUnread":false,"friendCount":0}},"global":{"isChatMqttExisted":false}},"emoticons":{"emoticonGroupList":[],"emoticonGroupDetail":{}},"creator":{"tools":{"question":{"invitationCount":{"questionFolloweeCount":0,"questionTotalCount":0}},"recommend":{"recommendTimes":{}}},"explore":{},"levelUpperLimit":10,"mcn":{},"mcnManage":{},"tasks":{},"announcement":{},"creatorsRecommendInfo":{}},"creators":{"common":{"applyStatus":{},"rightsStatus":{}},"bayesDomains":{"status":{},"options":{"topDomains":null,"allDomains":null,"editable":0},"contents":null},"school":{"tabs":[],"contents":[],"banner":null,"entities":{}},"faq":{"tabs":[],"article":{}},"knowledgeIncome":{},"safeguardRights":{},"analytics":{"all":{},"answer":{},"zvideo":{},"article":{},"pin":{},"singleContent":{}},"account":{"growthLevel":{}},"KMResource":{},"training":{},"ToolsQuestion":{"goodatTopics":[]},"ToolsHotspot":{"domains":[]},"ToolsRecommend":{},"ToolsCustomPromotion":{"itemLists":{},"baseInfo":{}},"ToolsSearchQuestion":{},"editorSetting":{},"MCNManage":{},"knowledgeTasks":{},"incomeAnalysis":{"income":{"aggregation":{}}},"creationManage":{"editModal":{"status":false}},"activity":{},"announcement":{},"home":{"currentCreatorUrlToken":null,"rights":[],"newRights":[],"scoreInfo":{},"menusShowControlByServer":{"bVipRecomend":false,"creationRelationship":false},"newTasks":{"creatorTask":{"tasks":[],"des":[]}},"bannerList":[],"recentlyCreated":[],"homecard":{}},"videoSupport":{"textBenefit":{}},"videoDistribution":{},"profilePoster":{"creatorPosterConfig":{},"creatorPosterData":{}}},"answers":{"voters":{},"copyrightApplicants":{},"favlists":{},"newAnswer":{},"entityWords":{},"concernedUpvoters":{},"simpleConcernedUpvoters":{},"paidContent":{},"settings":{}},"recommendation":{"homeRecommendations":[]},"shareTexts":{},"articles":{"voters":{},"concernedUpvoters":{}},"previewPost":{},"favlists":{"relations":{}},"columns":{"voters":{}},"reward":{"answer":{},"article":{},"question":{}},"video":{"data":{},"shareVideoDetail":{},"last":{}},"topstory":{"recommend":{"isFetching":false,"isDrained":false,"afterId":0,"items":[],"next":null},"follow":{"isFetching":false,"isDrained":false,"afterId":0,"items":[],"next":null},"followWonderful":{"isFetching":false,"isDrained":false,"afterId":0,"items":[],"next":null},"sidebar":null,"announcement":{},"hotList":[],"guestFeeds":{"isFetching":false,"isDrained":false,"afterId":0,"items":[],"next":null},"followExtra":{"isNewUser":null,"isFetched":false,"followCount":0,"followers":[]},"hotDaily":{"data":[],"paging":{}},"hotHighlight":{"isFetching":false,"isDrained":false,"data":[],"paging":{}},"banner":{},"commercialBanner":{"show":false,"banner":{},"trackData":{}},"video":{"items":[],"next":null,"isLoading":false,"isDrained":false}},"readStatus":{},"column":{},"requestColumn":{"categories":[],"error":null},"articleContribution":{"contributeRequests":[],"deleteContributeIdList":[],"handledContributeIdList":[],"recommendedColumns":[],"pinnedColumns":[],"sentContributeRequestsIdList":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,"c_123624235","c_1008650342774534144"]},"columnContribution":{"contributeRequests":[],"autoInviteEnabled":false,"recommendedContributors":[],"contributionInvitation":null},"draftHistory":{"history":{},"drafts":{}},"upload":{},"articleDraft":{"titleImage":"","titleImageSize":{},"isTitleImageFullScreen":false,"canTitleImageFullScreen":false,"title":"","titleImageUploading":false,"error":"","content":"","draftLoading":false,"updating":false,"globalLoading":false,"pendingVideo":{"resource":null,"error":null},"deleteFail":{"fail":false},"recommendTopics":[],"selectedColumn":0,"articleDisclaimers":[]},"articleDrafts":{"isDrained":false,"isLoading":false,"items":[]},"columnAutocomplete":{"users":[],"friends":[]},"columnCollection":{},"userProfit":{"permission":{"permissionStatus":{"zhiZixuan":0,"recommend":-1,"task":0,"plugin":0,"infinity":0},"visible":false},"linkCardLimit":0},"mcn":{"bindInfo":{},"memberCategoryList":[],"producerList":[],"categoryList":[],"lists":{},"banners":{},"protocolStatus":{"isAgreedNew":true,"isAgreedOld":true},"probationCountdownDays":0},"zvideos":{"campaignVideoList":{},"campaigns":{},"tagoreCategory":[],"recommendations":{},"insertable":{},"recruit":{"form":{"platform":"","nickname":"","followerCount":"","domain":"","contact":""},"submited":false,"ranking":[]},"qyActivityData":{},"talkActivityData":{},"party2022ActivityData":{},"batchVideos":{},"contribution":{"selectedContribution":null,"campaign":null,"configs":{},"contributionLists":{},"recommendQuestions":{"isLoading":true,"paging":{"isEnd":false,"isStart":true,"totals":0},"data":[]},"questionSearchResults":{"isLoading":true,"paging":{"isEnd":false,"isStart":true,"totals":0},"data":[]}},"creationReferences":{},"zvideoCollection":{},"zvideoGrant":{},"collectData":{"isFetching":false,"list":[]},"videoSource":{"isLoaded":false}},"republish":{},"commentPermission":{},"creatorRightStatus":{"list":[]},"adPromotion":{"answer":{},"article":{}}},"fetchHost":"www.zhihu.com","subAppName":"column","spanName":"Post","canaryConfig":{"test_canary":"0","use_new_player":"0","player_vendor":"0","use_hevc":"0","upload_use_signature":"0","use_backdrop_blur":"0","article_title_imagex":"0","play_station":"0"}}</script><script crossorigin="" src="https://static.zhihu.com/heifetz/vendor.5f3e51e68d56265eb628.js"></script><script crossorigin="" src="https://static.zhihu.com/event/react@17.0.2/umd/react.production.min.js"></script><script crossorigin="" src="https://static.zhihu.com/event/react-dom@17.0.2/umd/react-dom.production.min.js"></script><script crossorigin="" src="https://static.zhihu.com/event/react-dom@17.0.2/umd/react-dom-server.browser.production.min.js"></script><script crossorigin="" src="https://static.zhihu.com/heifetz/runtime.app.38b28c88d4c16ace8cfc.js"></script><script crossorigin="" src="https://static.zhihu.com/heifetz/lib-29107295.app.42d07f814b7b05187671.js"></script><script crossorigin="" src="https://static.zhihu.com/heifetz/lib-79b5cf47.app.8b6b6bf4b6d894db9b07.js"></script><script crossorigin="" src="https://static.zhihu.com/heifetz/lib-330004dc.app.7437cf54ac28fca0e302.js"></script><script crossorigin="" src="https://static.zhihu.com/heifetz/lib-0e5ce61e.app.bfc97c459473d6bbad05.js"></script><script crossorigin="" src="https://static.zhihu.com/heifetz/lib-83b0f42f.app.6bcd41e130a7cc845dab.js"></script><script crossorigin="" src="https://static.zhihu.com/heifetz/lib-38cf5c11.app.a59df9edceb3cc75ed79.js"></script><script crossorigin="" src="https://static.zhihu.com/heifetz/lib-2ec050f6.app.85ce113b9c3b1f9be892.js"></script><script crossorigin="" src="https://static.zhihu.com/heifetz/4267.app.17a115053322836bcff8.js"></script><script crossorigin="" src="https://static.zhihu.com/heifetz/column.app.62dbe6b33c81b07542dd.js"></script><script defer="" src="https://static.zhihu.com/event/wza/4613/aria.js?appid=a3637ace5dc3a347f6863b0bac487599" id="ariascripts" wapForceOldFixed="false" loadData="false"></script></body><script src="https://hm.baidu.com/hm.js?98beee57fd2ef70ccdd5ca52b9740c49" async=""></script></html>